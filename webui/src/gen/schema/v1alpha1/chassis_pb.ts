// SPDX-License-Identifier: BSD-3-Clause

// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file schema/v1alpha1/chassis.proto (package schema.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { AssetInfo } from "./asset_pb";
import { file_schema_v1alpha1_asset } from "./asset_pb";
import type { Location } from "./location_pb";
import { file_schema_v1alpha1_location } from "./location_pb";
import type { Sensor } from "./sensor_pb";
import { file_schema_v1alpha1_sensor } from "./sensor_pb";
import type { PhysicalDimensions } from "./specs_pb";
import { file_schema_v1alpha1_specs } from "./specs_pb";
import type { CoolingDevice, ThermalZone } from "./thermal_pb";
import { file_schema_v1alpha1_thermal } from "./thermal_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file schema/v1alpha1/chassis.proto.
 */
export const file_schema_v1alpha1_chassis: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_schema_v1alpha1_asset, file_schema_v1alpha1_location, file_schema_v1alpha1_sensor, file_schema_v1alpha1_specs, file_schema_v1alpha1_thermal]);

/**
 * @generated from message schema.v1alpha1.Chassis
 */
export type Chassis = Message<"schema.v1alpha1.Chassis"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: schema.v1alpha1.AssetInfo asset = 2;
   */
  asset?: AssetInfo;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisType type = 4;
   */
  type?: ChassisType;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisFormFactor form_factor = 5;
   */
  formFactor?: ChassisFormFactor;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisStatus status = 6;
   */
  status?: ChassisStatus;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisAction requested_action = 7;
   */
  requestedAction?: ChassisAction;

  /**
   * @generated from field: optional schema.v1alpha1.Location location = 8;
   */
  location?: Location;

  /**
   * @generated from field: optional schema.v1alpha1.PhysicalDimensions dimensions = 9;
   */
  dimensions?: PhysicalDimensions;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisPowerInfo power_info = 10;
   */
  powerInfo?: ChassisPowerInfo;

  /**
   * @generated from field: repeated schema.v1alpha1.Sensor sensors = 11;
   */
  sensors: Sensor[];

  /**
   * @generated from field: repeated schema.v1alpha1.ThermalZone thermal_zones = 12;
   */
  thermalZones: ThermalZone[];

  /**
   * @generated from field: repeated schema.v1alpha1.CoolingDevice cooling_devices = 13;
   */
  coolingDevices: CoolingDevice[];

  /**
   * @generated from field: repeated string host_names = 14;
   */
  hostNames: string[];

  /**
   * @generated from field: repeated string management_controller_ids = 15;
   */
  managementControllerIds: string[];

  /**
   * @generated from field: repeated schema.v1alpha1.ChassisLED leds = 16;
   */
  leds: ChassisLED[];

  /**
   * @generated from field: optional schema.v1alpha1.ChassisIntrusion intrusion = 17;
   */
  intrusion?: ChassisIntrusion;

  /**
   * @generated from field: repeated schema.v1alpha1.AssetInfo contained_assets = 18;
   */
  containedAssets: AssetInfo[];

  /**
   * @generated from field: optional google.protobuf.Timestamp updated_at = 19;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: map<string, string> metadata = 20;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message schema.v1alpha1.Chassis.
 * Use `create(ChassisSchema)` to create a new message.
 */
export const ChassisSchema: GenMessage<Chassis> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 0);

/**
 * @generated from message schema.v1alpha1.ChassisStateChange
 */
export type ChassisStateChange = Message<"schema.v1alpha1.ChassisStateChange"> & {
  /**
   * @generated from field: string chassis_name = 1;
   */
  chassisName: string;

  /**
   * @generated from field: schema.v1alpha1.ChassisStatus previous_status = 2;
   */
  previousStatus: ChassisStatus;

  /**
   * @generated from field: schema.v1alpha1.ChassisStatus current_status = 3;
   */
  currentStatus: ChassisStatus;

  /**
   * @generated from field: schema.v1alpha1.ChassisAction cause = 4;
   */
  cause: ChassisAction;

  /**
   * @generated from field: google.protobuf.Timestamp changed_at = 5;
   */
  changedAt?: Timestamp;
};

/**
 * Describes the message schema.v1alpha1.ChassisStateChange.
 * Use `create(ChassisStateChangeSchema)` to create a new message.
 */
export const ChassisStateChangeSchema: GenMessage<ChassisStateChange> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 1);

/**
 * @generated from message schema.v1alpha1.ChassisPowerInfo
 */
export type ChassisPowerInfo = Message<"schema.v1alpha1.ChassisPowerInfo"> & {
  /**
   * @generated from field: optional uint32 power_capacity_watts = 1;
   */
  powerCapacityWatts?: number;

  /**
   * @generated from field: optional uint32 power_consumed_watts = 2;
   */
  powerConsumedWatts?: number;

  /**
   * @generated from field: repeated schema.v1alpha1.ChassisPowerSupply power_supplies = 3;
   */
  powerSupplies: ChassisPowerSupply[];

  /**
   * @generated from field: repeated schema.v1alpha1.ChassisPowerDistribution power_distribution = 4;
   */
  powerDistribution: ChassisPowerDistribution[];

  /**
   * @generated from field: optional schema.v1alpha1.ChassisPowerRedundancy redundancy = 5;
   */
  redundancy?: ChassisPowerRedundancy;

  /**
   * @generated from field: repeated schema.v1alpha1.ChassisPowerBudget power_budgets = 6;
   */
  powerBudgets: ChassisPowerBudget[];
};

/**
 * Describes the message schema.v1alpha1.ChassisPowerInfo.
 * Use `create(ChassisPowerInfoSchema)` to create a new message.
 */
export const ChassisPowerInfoSchema: GenMessage<ChassisPowerInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 2);

/**
 * @generated from message schema.v1alpha1.ChassisPowerSupply
 */
export type ChassisPowerSupply = Message<"schema.v1alpha1.ChassisPowerSupply"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: schema.v1alpha1.AssetInfo asset = 2;
   */
  asset?: AssetInfo;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisPowerSupplyType type = 3;
   */
  type?: ChassisPowerSupplyType;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisPowerSupplyStatus status = 4;
   */
  status?: ChassisPowerSupplyStatus;

  /**
   * @generated from field: optional uint32 capacity_watts = 5;
   */
  capacityWatts?: number;

  /**
   * @generated from field: optional uint32 output_watts = 6;
   */
  outputWatts?: number;

  /**
   * @generated from field: optional string efficiency_rating = 7;
   */
  efficiencyRating?: string;

  /**
   * @generated from field: optional double input_voltage = 8;
   */
  inputVoltage?: number;

  /**
   * @generated from field: optional double output_voltage = 9;
   */
  outputVoltage?: number;

  /**
   * @generated from field: optional double input_current = 10;
   */
  inputCurrent?: number;

  /**
   * @generated from field: optional double output_current = 11;
   */
  outputCurrent?: number;

  /**
   * @generated from field: optional double temperature_celsius = 12;
   */
  temperatureCelsius?: number;

  /**
   * @generated from field: optional uint32 fan_speed_rpm = 13;
   */
  fanSpeedRpm?: number;

  /**
   * @generated from field: optional bool hot_swappable = 14;
   */
  hotSwappable?: boolean;

  /**
   * @generated from field: optional bool redundant = 15;
   */
  redundant?: boolean;

  /**
   * @generated from field: optional schema.v1alpha1.Location location = 16;
   */
  location?: Location;
};

/**
 * Describes the message schema.v1alpha1.ChassisPowerSupply.
 * Use `create(ChassisPowerSupplySchema)` to create a new message.
 */
export const ChassisPowerSupplySchema: GenMessage<ChassisPowerSupply> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 3);

/**
 * @generated from message schema.v1alpha1.ChassisPowerDistribution
 */
export type ChassisPowerDistribution = Message<"schema.v1alpha1.ChassisPowerDistribution"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional uint32 capacity_watts = 2;
   */
  capacityWatts?: number;

  /**
   * @generated from field: optional uint32 load_watts = 3;
   */
  loadWatts?: number;

  /**
   * @generated from field: repeated schema.v1alpha1.PowerCircuit circuits = 4;
   */
  circuits: PowerCircuit[];
};

/**
 * Describes the message schema.v1alpha1.ChassisPowerDistribution.
 * Use `create(ChassisPowerDistributionSchema)` to create a new message.
 */
export const ChassisPowerDistributionSchema: GenMessage<ChassisPowerDistribution> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 4);

/**
 * @generated from message schema.v1alpha1.PowerCircuit
 */
export type PowerCircuit = Message<"schema.v1alpha1.PowerCircuit"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional double voltage = 2;
   */
  voltage?: number;

  /**
   * @generated from field: optional double current_amps = 3;
   */
  currentAmps?: number;

  /**
   * @generated from field: optional double power_watts = 4;
   */
  powerWatts?: number;

  /**
   * @generated from field: optional double breaker_rating_amps = 5;
   */
  breakerRatingAmps?: number;

  /**
   * @generated from field: repeated string connected_loads = 6;
   */
  connectedLoads: string[];
};

/**
 * Describes the message schema.v1alpha1.PowerCircuit.
 * Use `create(PowerCircuitSchema)` to create a new message.
 */
export const PowerCircuitSchema: GenMessage<PowerCircuit> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 5);

/**
 * @generated from message schema.v1alpha1.ChassisPowerRedundancy
 */
export type ChassisPowerRedundancy = Message<"schema.v1alpha1.ChassisPowerRedundancy"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: optional string mode = 2;
   */
  mode?: string;

  /**
   * @generated from field: optional uint32 required_supplies = 3;
   */
  requiredSupplies?: number;

  /**
   * @generated from field: optional uint32 available_supplies = 4;
   */
  availableSupplies?: number;

  /**
   * @generated from field: optional string status = 5;
   */
  status?: string;
};

/**
 * Describes the message schema.v1alpha1.ChassisPowerRedundancy.
 * Use `create(ChassisPowerRedundancySchema)` to create a new message.
 */
export const ChassisPowerRedundancySchema: GenMessage<ChassisPowerRedundancy> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 6);

/**
 * @generated from message schema.v1alpha1.ChassisPowerBudget
 */
export type ChassisPowerBudget = Message<"schema.v1alpha1.ChassisPowerBudget"> & {
  /**
   * @generated from field: string allocated_to = 1;
   */
  allocatedTo: string;

  /**
   * @generated from field: optional uint32 allocated_watts = 2;
   */
  allocatedWatts?: number;

  /**
   * @generated from field: optional uint32 used_watts = 3;
   */
  usedWatts?: number;

  /**
   * @generated from field: optional uint32 max_watts = 4;
   */
  maxWatts?: number;

  /**
   * @generated from field: optional uint32 priority = 5;
   */
  priority?: number;
};

/**
 * Describes the message schema.v1alpha1.ChassisPowerBudget.
 * Use `create(ChassisPowerBudgetSchema)` to create a new message.
 */
export const ChassisPowerBudgetSchema: GenMessage<ChassisPowerBudget> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 7);

/**
 * @generated from message schema.v1alpha1.ChassisLED
 */
export type ChassisLED = Message<"schema.v1alpha1.ChassisLED"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisLEDType type = 2;
   */
  type?: ChassisLEDType;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisLEDState state = 3;
   */
  state?: ChassisLEDState;

  /**
   * @generated from field: optional string color = 4;
   */
  color?: string;

  /**
   * @generated from field: optional string blink_pattern = 5;
   */
  blinkPattern?: string;

  /**
   * @generated from field: optional bool controllable = 6;
   */
  controllable?: boolean;
};

/**
 * Describes the message schema.v1alpha1.ChassisLED.
 * Use `create(ChassisLEDSchema)` to create a new message.
 */
export const ChassisLEDSchema: GenMessage<ChassisLED> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 8);

/**
 * @generated from message schema.v1alpha1.ChassisIntrusion
 */
export type ChassisIntrusion = Message<"schema.v1alpha1.ChassisIntrusion"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: bool intrusion_detected = 2;
   */
  intrusionDetected: boolean;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_intrusion = 3;
   */
  lastIntrusion?: Timestamp;

  /**
   * @generated from field: optional uint32 intrusion_count = 4;
   */
  intrusionCount?: number;

  /**
   * @generated from field: optional bool reset_count = 5;
   */
  resetCount?: boolean;

  /**
   * @generated from field: optional string sensor_status = 6;
   */
  sensorStatus?: string;
};

/**
 * Describes the message schema.v1alpha1.ChassisIntrusion.
 * Use `create(ChassisIntrusionSchema)` to create a new message.
 */
export const ChassisIntrusionSchema: GenMessage<ChassisIntrusion> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 9);

/**
 * @generated from message schema.v1alpha1.ExpansionBay
 */
export type ExpansionBay = Message<"schema.v1alpha1.ExpansionBay"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string bay_type = 2;
   */
  bayType?: string;

  /**
   * @generated from field: optional bool occupied = 3;
   */
  occupied?: boolean;

  /**
   * @generated from field: optional string installed_component = 4;
   */
  installedComponent?: string;

  /**
   * @generated from field: optional schema.v1alpha1.Location location = 5;
   */
  location?: Location;
};

/**
 * Describes the message schema.v1alpha1.ExpansionBay.
 * Use `create(ExpansionBaySchema)` to create a new message.
 */
export const ExpansionBaySchema: GenMessage<ExpansionBay> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 10);

/**
 * @generated from message schema.v1alpha1.Slot
 */
export type Slot = Message<"schema.v1alpha1.Slot"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string slot_type = 2;
   */
  slotType?: string;

  /**
   * @generated from field: optional bool occupied = 3;
   */
  occupied?: boolean;

  /**
   * @generated from field: optional string installed_component = 4;
   */
  installedComponent?: string;

  /**
   * @generated from field: optional schema.v1alpha1.Location location = 5;
   */
  location?: Location;
};

/**
 * Describes the message schema.v1alpha1.Slot.
 * Use `create(SlotSchema)` to create a new message.
 */
export const SlotSchema: GenMessage<Slot> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 11);

/**
 * @generated from message schema.v1alpha1.GetChassisRequest
 */
export type GetChassisRequest = Message<"schema.v1alpha1.GetChassisRequest"> & {
  /**
   * @generated from oneof schema.v1alpha1.GetChassisRequest.identifier
   */
  identifier: {
    /**
     * @generated from field: string name = 1;
     */
    value: string;
    case: "name";
  } | {
    /**
     * @generated from field: schema.v1alpha1.ChassisType type = 2;
     */
    value: ChassisType;
    case: "type";
  } | {
    /**
     * @generated from field: schema.v1alpha1.ChassisStatus status = 3;
     */
    value: ChassisStatus;
    case: "status";
  } | {
    /**
     * @generated from field: schema.v1alpha1.Location location = 4;
     */
    value: Location;
    case: "location";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional google.protobuf.FieldMask field_mask = 5;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message schema.v1alpha1.GetChassisRequest.
 * Use `create(GetChassisRequestSchema)` to create a new message.
 */
export const GetChassisRequestSchema: GenMessage<GetChassisRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 12);

/**
 * @generated from message schema.v1alpha1.GetChassisResponse
 */
export type GetChassisResponse = Message<"schema.v1alpha1.GetChassisResponse"> & {
  /**
   * @generated from field: repeated schema.v1alpha1.Chassis chassis = 1;
   */
  chassis: Chassis[];
};

/**
 * Describes the message schema.v1alpha1.GetChassisResponse.
 * Use `create(GetChassisResponseSchema)` to create a new message.
 */
export const GetChassisResponseSchema: GenMessage<GetChassisResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 13);

/**
 * @generated from message schema.v1alpha1.ListChassisRequest
 */
export type ListChassisRequest = Message<"schema.v1alpha1.ListChassisRequest"> & {
  /**
   * @generated from field: optional schema.v1alpha1.ChassisType type = 1;
   */
  type?: ChassisType;

  /**
   * @generated from field: optional schema.v1alpha1.ChassisStatus status = 2;
   */
  status?: ChassisStatus;

  /**
   * @generated from field: optional google.protobuf.FieldMask field_mask = 3;
   */
  fieldMask?: FieldMask;

  /**
   * @generated from field: optional uint32 page_size = 4;
   */
  pageSize?: number;

  /**
   * @generated from field: optional string page_token = 5;
   */
  pageToken?: string;
};

/**
 * Describes the message schema.v1alpha1.ListChassisRequest.
 * Use `create(ListChassisRequestSchema)` to create a new message.
 */
export const ListChassisRequestSchema: GenMessage<ListChassisRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 14);

/**
 * @generated from message schema.v1alpha1.ListChassisResponse
 */
export type ListChassisResponse = Message<"schema.v1alpha1.ListChassisResponse"> & {
  /**
   * @generated from field: repeated schema.v1alpha1.Chassis chassis = 1;
   */
  chassis: Chassis[];

  /**
   * @generated from field: optional string next_page_token = 2;
   */
  nextPageToken?: string;

  /**
   * @generated from field: optional uint32 total_size = 3;
   */
  totalSize?: number;
};

/**
 * Describes the message schema.v1alpha1.ListChassisResponse.
 * Use `create(ListChassisResponseSchema)` to create a new message.
 */
export const ListChassisResponseSchema: GenMessage<ListChassisResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 15);

/**
 * @generated from message schema.v1alpha1.UpdateChassisRequest
 */
export type UpdateChassisRequest = Message<"schema.v1alpha1.UpdateChassisRequest"> & {
  /**
   * @generated from field: string chassis_name = 1;
   */
  chassisName: string;

  /**
   * @generated from field: schema.v1alpha1.Chassis chassis = 2;
   */
  chassis?: Chassis;

  /**
   * @generated from field: google.protobuf.FieldMask field_mask = 3;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message schema.v1alpha1.UpdateChassisRequest.
 * Use `create(UpdateChassisRequestSchema)` to create a new message.
 */
export const UpdateChassisRequestSchema: GenMessage<UpdateChassisRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 16);

/**
 * @generated from message schema.v1alpha1.UpdateChassisResponse
 */
export type UpdateChassisResponse = Message<"schema.v1alpha1.UpdateChassisResponse"> & {
  /**
   * @generated from field: schema.v1alpha1.Chassis chassis = 1;
   */
  chassis?: Chassis;
};

/**
 * Describes the message schema.v1alpha1.UpdateChassisResponse.
 * Use `create(UpdateChassisResponseSchema)` to create a new message.
 */
export const UpdateChassisResponseSchema: GenMessage<UpdateChassisResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 17);

/**
 * @generated from message schema.v1alpha1.ChangeChassisStateRequest
 */
export type ChangeChassisStateRequest = Message<"schema.v1alpha1.ChangeChassisStateRequest"> & {
  /**
   * @generated from field: string chassis_name = 1;
   */
  chassisName: string;

  /**
   * @generated from field: schema.v1alpha1.ChassisAction action = 2;
   */
  action: ChassisAction;
};

/**
 * Describes the message schema.v1alpha1.ChangeChassisStateRequest.
 * Use `create(ChangeChassisStateRequestSchema)` to create a new message.
 */
export const ChangeChassisStateRequestSchema: GenMessage<ChangeChassisStateRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 18);

/**
 * @generated from message schema.v1alpha1.ChangeChassisStateResponse
 */
export type ChangeChassisStateResponse = Message<"schema.v1alpha1.ChangeChassisStateResponse"> & {
  /**
   * @generated from field: schema.v1alpha1.ChassisStatus current_status = 1;
   */
  currentStatus: ChassisStatus;
};

/**
 * Describes the message schema.v1alpha1.ChangeChassisStateResponse.
 * Use `create(ChangeChassisStateResponseSchema)` to create a new message.
 */
export const ChangeChassisStateResponseSchema: GenMessage<ChangeChassisStateResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_chassis, 19);

/**
 * @generated from enum schema.v1alpha1.ChassisType
 */
export enum ChassisType {
  /**
   * @generated from enum value: CHASSIS_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_TYPE_RACK_MOUNT = 1;
   */
  RACK_MOUNT = 1,

  /**
   * @generated from enum value: CHASSIS_TYPE_BLADE = 2;
   */
  BLADE = 2,

  /**
   * @generated from enum value: CHASSIS_TYPE_STANDALONE = 3;
   */
  STANDALONE = 3,

  /**
   * @generated from enum value: CHASSIS_TYPE_CARD = 4;
   */
  CARD = 4,

  /**
   * @generated from enum value: CHASSIS_TYPE_TOWER = 5;
   */
  TOWER = 5,

  /**
   * @generated from enum value: CHASSIS_TYPE_DESKTOP = 6;
   */
  DESKTOP = 6,

  /**
   * @generated from enum value: CHASSIS_TYPE_ENCLOSURE = 7;
   */
  ENCLOSURE = 7,
}

/**
 * Describes the enum schema.v1alpha1.ChassisType.
 */
export const ChassisTypeSchema: GenEnum<ChassisType> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 0);

/**
 * @generated from enum schema.v1alpha1.ChassisFormFactor
 */
export enum ChassisFormFactor {
  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_UNSPECIFIED = 0;
   */
  CHASSIS_FORM_FACTOR_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_1U = 1;
   */
  CHASSIS_FORM_FACTOR_1U = 1,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_2U = 2;
   */
  CHASSIS_FORM_FACTOR_2U = 2,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_3U = 3;
   */
  CHASSIS_FORM_FACTOR_3U = 3,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_4U = 4;
   */
  CHASSIS_FORM_FACTOR_4U = 4,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_5U = 5;
   */
  CHASSIS_FORM_FACTOR_5U = 5,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_6U = 6;
   */
  CHASSIS_FORM_FACTOR_6U = 6,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_HALF_WIDTH = 7;
   */
  CHASSIS_FORM_FACTOR_HALF_WIDTH = 7,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_FULL_WIDTH = 8;
   */
  CHASSIS_FORM_FACTOR_FULL_WIDTH = 8,

  /**
   * @generated from enum value: CHASSIS_FORM_FACTOR_CUSTOM = 9;
   */
  CHASSIS_FORM_FACTOR_CUSTOM = 9,
}

/**
 * Describes the enum schema.v1alpha1.ChassisFormFactor.
 */
export const ChassisFormFactorSchema: GenEnum<ChassisFormFactor> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 1);

/**
 * @generated from enum schema.v1alpha1.ChassisStatus
 */
export enum ChassisStatus {
  /**
   * @generated from enum value: CHASSIS_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_STATUS_ON = 1;
   */
  ON = 1,

  /**
   * @generated from enum value: CHASSIS_STATUS_OFF = 2;
   */
  OFF = 2,

  /**
   * @generated from enum value: CHASSIS_STATUS_TRANSITIONING = 3;
   */
  TRANSITIONING = 3,

  /**
   * @generated from enum value: CHASSIS_STATUS_WARNING = 4;
   */
  WARNING = 4,

  /**
   * @generated from enum value: CHASSIS_STATUS_CRITICAL = 5;
   */
  CRITICAL = 5,

  /**
   * @generated from enum value: CHASSIS_STATUS_FAILED = 6;
   */
  FAILED = 6,

  /**
   * @generated from enum value: CHASSIS_STATUS_UNKNOWN = 7;
   */
  UNKNOWN = 7,
}

/**
 * Describes the enum schema.v1alpha1.ChassisStatus.
 */
export const ChassisStatusSchema: GenEnum<ChassisStatus> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 2);

/**
 * @generated from enum schema.v1alpha1.ChassisAction
 */
export enum ChassisAction {
  /**
   * @generated from enum value: CHASSIS_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_ACTION_ON = 1;
   */
  ON = 1,

  /**
   * @generated from enum value: CHASSIS_ACTION_OFF = 2;
   */
  OFF = 2,

  /**
   * @generated from enum value: CHASSIS_ACTION_POWER_CYCLE = 3;
   */
  POWER_CYCLE = 3,

  /**
   * @generated from enum value: CHASSIS_ACTION_IDENTIFY_ON = 4;
   */
  IDENTIFY_ON = 4,

  /**
   * @generated from enum value: CHASSIS_ACTION_IDENTIFY_OFF = 5;
   */
  IDENTIFY_OFF = 5,

  /**
   * @generated from enum value: CHASSIS_ACTION_EMERGENCY_SHUTDOWN = 6;
   */
  EMERGENCY_SHUTDOWN = 6,
}

/**
 * Describes the enum schema.v1alpha1.ChassisAction.
 */
export const ChassisActionSchema: GenEnum<ChassisAction> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 3);

/**
 * @generated from enum schema.v1alpha1.ChassisPowerSupplyType
 */
export enum ChassisPowerSupplyType {
  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_TYPE_AC = 1;
   */
  AC = 1,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_TYPE_DC = 2;
   */
  DC = 2,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_TYPE_UPS = 3;
   */
  UPS = 3,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_TYPE_REDUNDANT = 4;
   */
  REDUNDANT = 4,
}

/**
 * Describes the enum schema.v1alpha1.ChassisPowerSupplyType.
 */
export const ChassisPowerSupplyTypeSchema: GenEnum<ChassisPowerSupplyType> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 4);

/**
 * @generated from enum schema.v1alpha1.ChassisPowerSupplyStatus
 */
export enum ChassisPowerSupplyStatus {
  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_WARNING = 2;
   */
  WARNING = 2,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_CRITICAL = 3;
   */
  CRITICAL = 3,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_FAILED = 4;
   */
  FAILED = 4,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_NOT_PRESENT = 5;
   */
  NOT_PRESENT = 5,

  /**
   * @generated from enum value: CHASSIS_POWER_SUPPLY_STATUS_INPUT_LOST = 6;
   */
  INPUT_LOST = 6,
}

/**
 * Describes the enum schema.v1alpha1.ChassisPowerSupplyStatus.
 */
export const ChassisPowerSupplyStatusSchema: GenEnum<ChassisPowerSupplyStatus> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 5);

/**
 * @generated from enum schema.v1alpha1.ChassisLEDState
 */
export enum ChassisLEDState {
  /**
   * @generated from enum value: CHASSIS_LED_STATE_UNSPECIFIED = 0;
   */
  CHASSIS_LED_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_LED_STATE_OFF = 1;
   */
  CHASSIS_LED_STATE_OFF = 1,

  /**
   * @generated from enum value: CHASSIS_LED_STATE_ON = 2;
   */
  CHASSIS_LED_STATE_ON = 2,

  /**
   * @generated from enum value: CHASSIS_LED_STATE_BLINKING = 3;
   */
  CHASSIS_LED_STATE_BLINKING = 3,

  /**
   * @generated from enum value: CHASSIS_LED_STATE_UNKNOWN = 4;
   */
  CHASSIS_LED_STATE_UNKNOWN = 4,
}

/**
 * Describes the enum schema.v1alpha1.ChassisLEDState.
 */
export const ChassisLEDStateSchema: GenEnum<ChassisLEDState> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 6);

/**
 * @generated from enum schema.v1alpha1.ChassisLEDType
 */
export enum ChassisLEDType {
  /**
   * @generated from enum value: CHASSIS_LED_TYPE_UNSPECIFIED = 0;
   */
  CHASSIS_LED_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_LED_TYPE_POWER = 1;
   */
  CHASSIS_LED_TYPE_POWER = 1,

  /**
   * @generated from enum value: CHASSIS_LED_TYPE_FAULT = 2;
   */
  CHASSIS_LED_TYPE_FAULT = 2,

  /**
   * @generated from enum value: CHASSIS_LED_TYPE_IDENTIFY = 3;
   */
  CHASSIS_LED_TYPE_IDENTIFY = 3,

  /**
   * @generated from enum value: CHASSIS_LED_TYPE_STATUS = 4;
   */
  CHASSIS_LED_TYPE_STATUS = 4,

  /**
   * @generated from enum value: CHASSIS_LED_TYPE_HEARTBEAT = 5;
   */
  CHASSIS_LED_TYPE_HEARTBEAT = 5,
}

/**
 * Describes the enum schema.v1alpha1.ChassisLEDType.
 */
export const ChassisLEDTypeSchema: GenEnum<ChassisLEDType> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_chassis, 7);

