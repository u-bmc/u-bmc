// SPDX-License-Identifier: BSD-3-Clause

// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file schema/v1alpha1/user.proto (package proto.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file schema/v1alpha1/user.proto.
 */
export const file_schema_v1alpha1_user: GenFile = /*@__PURE__*/
  fileDesc("ChpzY2hlbWEvdjFhbHBoYTEvdXNlci5wcm90bxIOcHJvdG8udjFhbHBoYTEiqAQKBFVzZXISEwoCaWQYASABKAlCB7pIBHICEAESGQoIdXNlcm5hbWUYAiABKAlCB7pIBHICEAESGgoJZnVsbF9uYW1lGAMgASgJQge6SARyAhABEhYKBWVtYWlsGAQgASgJQge6SARyAmABEg8KB2VuYWJsZWQYBSABKAgSEgoKY3JlYXRlZF9hdBgGIAEoAxISCgp1cGRhdGVkX2F0GAcgASgDEhIKCmxhc3RfbG9naW4YCCABKAMSMQoNc291cmNlX3N5c3RlbRgJIAEoDjIaLnByb3RvLnYxYWxwaGExLlVzZXJTb3VyY2USNQoJYXV0aF9kYXRhGAogASgLMiIucHJvdG8udjFhbHBoYTEuQXV0aGVudGljYXRpb25EYXRhEi8KCXVuaXhfaW5mbxgLIAEoCzIcLnByb3RvLnYxYWxwaGExLlVuaXhVc2VySW5mbxIvCglsZGFwX2luZm8YDCABKAsyHC5wcm90by52MWFscGhhMS5MZGFwVXNlckluZm8SOAoMcmVkZmlzaF9pbmZvGA0gASgLMiIucHJvdG8udjFhbHBoYTEuUmVkZmlzaEFjY291bnRJbmZvEjIKCW5hdHNfaW5mbxgOIAEoCzIfLnByb3RvLnYxYWxwaGExLk5hdHNBY2NvdW50SW5mbxI1CgxzZWxpbnV4X2luZm8YDyABKAsyHy5wcm90by52MWFscGhhMS5TZWxpbnV4VXNlckluZm8iiwIKEkF1dGhlbnRpY2F0aW9uRGF0YRIVCg1wYXNzd29yZF9oYXNoGAEgASgJEhUKDXBhc3N3b3JkX3NhbHQYAiABKAkSPQoOaGFzaF9hbGdvcml0aG0YAyABKA4yJS5wcm90by52MWFscGhhMS5QYXNzd29yZEhhc2hBbGdvcml0aG0SEgoKaXRlcmF0aW9ucxgEIAEoBRIdChVwYXNzd29yZF9sYXN0X2NoYW5nZWQYBSABKAMSGwoTcGFzc3dvcmRfZXhwaXJlc19hdBgGIAEoAxI4Cgxsb2Nrb3V0X2luZm8YByABKAsyIi5wcm90by52MWFscGhhMS5BY2NvdW50TG9ja291dEluZm8inwEKEkFjY291bnRMb2Nrb3V0SW5mbxIOCgZsb2NrZWQYASABKAgSLQoGcmVhc29uGAIgASgOMh0ucHJvdG8udjFhbHBoYTEuTG9ja291dFJlYXNvbhIUCgxsb2Nrb3V0X3RpbWUYAyABKAMSFwoPZmFpbGVkX2F0dGVtcHRzGAQgASgFEhsKE2F0dGVtcHRzX3Jlc2V0X3RpbWUYBSABKAMieQoMVW5peFVzZXJJbmZvEhQKA3VpZBgBIAEoBUIHukgEGgIoABIUCgNnaWQYAiABKAVCB7pIBBoCKAASHwoOaG9tZV9kaXJlY3RvcnkYAyABKAlCB7pIBHICEAESDQoFc2hlbGwYBCABKAkSDQoFZ2Vjb3MYBSABKAkitgEKDExkYXBVc2VySW5mbxIYCgdsZGFwX2RuGAEgASgJQge6SARyAhABEhMKC29iamVjdF9ndWlkGAIgASgJEhgKEHNhbV9hY2NvdW50X25hbWUYAyABKAkSGwoTdXNlcl9wcmluY2lwYWxfbmFtZRgEIAEoCRIRCgltZW1iZXJfb2YYBSADKAkSFwoPYWNjb3VudF9leHBpcmVzGAYgASgDEhQKDHB3ZF9sYXN0X3NldBgHIAEoAyKAAQoSUmVkZmlzaEFjY291bnRJbmZvEhIKCmFjY291bnRfaWQYASABKAkSGAoHcm9sZV9pZBgCIAEoCUIHukgEcgIQARI8Cg5sb2Nrb3V0X3BvbGljeRgDIAEoCzIkLnByb3RvLnYxYWxwaGExLlJlZGZpc2hMb2Nrb3V0UG9saWN5IlkKFFJlZGZpc2hMb2Nrb3V0UG9saWN5EhoKCXRocmVzaG9sZBgBIAEoBUIHukgEGgIoABIQCghkdXJhdGlvbhgCIAEoCRITCgtyZXNldF9hZnRlchgDIAEoCSK7AQoPTmF0c0FjY291bnRJbmZvEg8KB2FjY291bnQYASABKAkSNAoLcGVybWlzc2lvbnMYAiABKAsyHy5wcm90by52MWFscGhhMS5OYXRzUGVybWlzc2lvbnMSKgoGbGltaXRzGAMgASgLMhoucHJvdG8udjFhbHBoYTEuTmF0c0xpbWl0cxIQCgh1c2VyX2p3dBgEIAEoCRIQCgh1c2VyX2tleRgFIAEoCRIRCgl1c2VyX2NyZWQYBiABKAkiTgoPTmF0c1Blcm1pc3Npb25zEg8KB3B1Ymxpc2gYASADKAkSEQoJc3Vic2NyaWJlGAIgAygJEhcKD2FsbG93X3Jlc3BvbnNlcxgDIAMoCSI5CgpOYXRzTGltaXRzEgwKBGRhdGEYASABKAMSDwoHcGF5bG9hZBgCIAEoAxIMCgRzdWJzGAMgASgDIkoKD1NlbGludXhVc2VySW5mbxIMCgR1c2VyGAEgASgJEgwKBHJvbGUYAiABKAkSDAoEdHlwZRgDIAEoCRINCgVsZXZlbBgEIAEoCSJaChFDcmVhdGVVc2VyUmVxdWVzdBIqCgR1c2VyGAEgASgLMhQucHJvdG8udjFhbHBoYTEuVXNlckIGukgDyAEBEhkKCHBhc3N3b3JkGAIgASgJQge6SARyAhAIIjgKEkNyZWF0ZVVzZXJSZXNwb25zZRIiCgR1c2VyGAEgASgLMhQucHJvdG8udjFhbHBoYTEuVXNlciIlCg5HZXRVc2VyUmVxdWVzdBITCgJpZBgBIAEoCUIHukgEcgIQASI1Cg9HZXRVc2VyUmVzcG9uc2USIgoEdXNlchgBIAEoCzIULnByb3RvLnYxYWxwaGExLlVzZXIiPwoRVXBkYXRlVXNlclJlcXVlc3QSKgoEdXNlchgBIAEoCzIULnByb3RvLnYxYWxwaGExLlVzZXJCBrpIA8gBASI4ChJVcGRhdGVVc2VyUmVzcG9uc2USIgoEdXNlchgBIAEoCzIULnByb3RvLnYxYWxwaGExLlVzZXIiKAoRRGVsZXRlVXNlclJlcXVlc3QSEwoCaWQYASABKAlCB7pIBHICEAEiJQoSRGVsZXRlVXNlclJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiaAoQTGlzdFVzZXJzUmVxdWVzdBIqCgZzb3VyY2UYASABKA4yGi5wcm90by52MWFscGhhMS5Vc2VyU291cmNlEg8KB2VuYWJsZWQYAiABKAgSFwoPdXNlcm5hbWVfcHJlZml4GAMgASgJIjgKEUxpc3RVc2Vyc1Jlc3BvbnNlEiMKBXVzZXJzGAEgAygLMhQucHJvdG8udjFhbHBoYTEuVXNlciJuChVDaGFuZ2VQYXNzd29yZFJlcXVlc3QSEwoCaWQYASABKAlCB7pIBHICEAESIQoQY3VycmVudF9wYXNzd29yZBgCIAEoCUIHukgEcgIQARIdCgxuZXdfcGFzc3dvcmQYAyABKAlCB7pIBHICEAgiKQoWQ2hhbmdlUGFzc3dvcmRSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIlkKFFJlc2V0UGFzc3dvcmRSZXF1ZXN0EhMKAmlkGAEgASgJQge6SARyAhABEh0KDG5ld19wYXNzd29yZBgCIAEoCUIHukgEcgIQCBINCgVmb3JjZRgDIAEoCCI+ChVSZXNldFBhc3N3b3JkUmVzcG9uc2USFAoMbmV3X3Bhc3N3b3JkGAEgASgJEg8KB3N1Y2Nlc3MYAiABKAgiTwoXQXV0aGVudGljYXRlVXNlclJlcXVlc3QSGQoIdXNlcm5hbWUYASABKAlCB7pIBHICEAESGQoIcGFzc3dvcmQYAiABKAlCB7pIBHICEAEiYwoYQXV0aGVudGljYXRlVXNlclJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHdXNlcl9pZBgCIAEoCRINCgV0b2tlbhgDIAEoCRIWCg5mYWlsdXJlX3JlYXNvbhgEIAEoCSqvAQoKVXNlclNvdXJjZRIbChdVU0VSX1NPVVJDRV9VTlNQRUNJRklFRBAAEhUKEVVTRVJfU09VUkNFX0xPQ0FMEAESFAoQVVNFUl9TT1VSQ0VfTERBUBACEhIKDlVTRVJfU09VUkNFX0FEEAMSFAoQVVNFUl9TT1VSQ0VfSVBNSRAEEhcKE1VTRVJfU09VUkNFX1JFREZJU0gQBRIUChBVU0VSX1NPVVJDRV9OQVRTEAYq0AEKFVBhc3N3b3JkSGFzaEFsZ29yaXRobRInCiNQQVNTV09SRF9IQVNIX0FMR09SSVRITV9VTlNQRUNJRklFRBAAEiIKHlBBU1NXT1JEX0hBU0hfQUxHT1JJVEhNX0JDUllQVBABEiIKHlBBU1NXT1JEX0hBU0hfQUxHT1JJVEhNX0FSR09OMhACEiIKHlBBU1NXT1JEX0hBU0hfQUxHT1JJVEhNX1NIQTI1NhADEiIKHlBBU1NXT1JEX0hBU0hfQUxHT1JJVEhNX1NIQTUxMhAEKqEBCg1Mb2Nrb3V0UmVhc29uEh4KGkxPQ0tPVVRfUkVBU09OX1VOU1BFQ0lGSUVEEAASKAokTE9DS09VVF9SRUFTT05fRkFJTEVEX0xPR0lOX0FUVEVNUFRTEAESIQodTE9DS09VVF9SRUFTT05fQURNSU5JU1RSQVRJVkUQAhIjCh9MT0NLT1VUX1JFQVNPTl9QQVNTV09SRF9FWFBJUkVEEAMy4AUKC1VzZXJTZXJ2aWNlElUKCkNyZWF0ZVVzZXISIS5wcm90by52MWFscGhhMS5DcmVhdGVVc2VyUmVxdWVzdBoiLnByb3RvLnYxYWxwaGExLkNyZWF0ZVVzZXJSZXNwb25zZSIAEkwKB0dldFVzZXISHi5wcm90by52MWFscGhhMS5HZXRVc2VyUmVxdWVzdBofLnByb3RvLnYxYWxwaGExLkdldFVzZXJSZXNwb25zZSIAElUKClVwZGF0ZVVzZXISIS5wcm90by52MWFscGhhMS5VcGRhdGVVc2VyUmVxdWVzdBoiLnByb3RvLnYxYWxwaGExLlVwZGF0ZVVzZXJSZXNwb25zZSIAElUKCkRlbGV0ZVVzZXISIS5wcm90by52MWFscGhhMS5EZWxldGVVc2VyUmVxdWVzdBoiLnByb3RvLnYxYWxwaGExLkRlbGV0ZVVzZXJSZXNwb25zZSIAElIKCUxpc3RVc2VycxIgLnByb3RvLnYxYWxwaGExLkxpc3RVc2Vyc1JlcXVlc3QaIS5wcm90by52MWFscGhhMS5MaXN0VXNlcnNSZXNwb25zZSIAEmEKDkNoYW5nZVBhc3N3b3JkEiUucHJvdG8udjFhbHBoYTEuQ2hhbmdlUGFzc3dvcmRSZXF1ZXN0GiYucHJvdG8udjFhbHBoYTEuQ2hhbmdlUGFzc3dvcmRSZXNwb25zZSIAEl4KDVJlc2V0UGFzc3dvcmQSJC5wcm90by52MWFscGhhMS5SZXNldFBhc3N3b3JkUmVxdWVzdBolLnByb3RvLnYxYWxwaGExLlJlc2V0UGFzc3dvcmRSZXNwb25zZSIAEmcKEEF1dGhlbnRpY2F0ZVVzZXISJy5wcm90by52MWFscGhhMS5BdXRoZW50aWNhdGVVc2VyUmVxdWVzdBooLnByb3RvLnYxYWxwaGExLkF1dGhlbnRpY2F0ZVVzZXJSZXNwb25zZSIAQrYBChJjb20ucHJvdG8udjFhbHBoYTFCCVVzZXJQcm90b1ABWjxnaXRodWIuY29tL3UtYm1jL3UtYm1jL2FwaS9nZW4vc2NoZW1hL3YxYWxwaGExO3Byb3RvdjFhbHBoYTGiAgNQWFiqAg5Qcm90by5WMWFscGhhMcoCDlByb3RvXFYxYWxwaGEx4gIaUHJvdG9cVjFhbHBoYTFcR1BCTWV0YWRhdGHqAg9Qcm90bzo6VjFhbHBoYTFiBnByb3RvMw", [file_buf_validate_validate]);

/**
 * User represents a user account in the system
 *
 * @generated from message proto.v1alpha1.User
 */
export type User = Message<"proto.v1alpha1.User"> & {
  /**
   * Unique identifier for the user
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Username for login
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * Full name of the user
   *
   * @generated from field: string full_name = 3;
   */
  fullName: string;

  /**
   * Email address
   *
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * Whether the user account is enabled
   *
   * @generated from field: bool enabled = 5;
   */
  enabled: boolean;

  /**
   * Timestamp when the user was created
   *
   * @generated from field: int64 created_at = 6;
   */
  createdAt: bigint;

  /**
   * Timestamp when the user was last updated
   *
   * @generated from field: int64 updated_at = 7;
   */
  updatedAt: bigint;

  /**
   * Timestamp of last successful login
   *
   * @generated from field: int64 last_login = 8;
   */
  lastLogin: bigint;

  /**
   * Source system where the user is managed
   *
   * @generated from field: proto.v1alpha1.UserSource source_system = 9;
   */
  sourceSystem: UserSource;

  /**
   * Authentication data
   *
   * @generated from field: proto.v1alpha1.AuthenticationData auth_data = 10;
   */
  authData?: AuthenticationData;

  /**
   * Unix-specific user information (if mapped)
   *
   * @generated from field: proto.v1alpha1.UnixUserInfo unix_info = 11;
   */
  unixInfo?: UnixUserInfo;

  /**
   * LDAP-specific user information (if mapped)
   *
   * @generated from field: proto.v1alpha1.LdapUserInfo ldap_info = 12;
   */
  ldapInfo?: LdapUserInfo;

  /**
   * Redfish-specific account information
   *
   * @generated from field: proto.v1alpha1.RedfishAccountInfo redfish_info = 13;
   */
  redfishInfo?: RedfishAccountInfo;

  /**
   * NATS-specific account information
   *
   * @generated from field: proto.v1alpha1.NatsAccountInfo nats_info = 14;
   */
  natsInfo?: NatsAccountInfo;

  /**
   * SELinux-specific user mapping
   *
   * @generated from field: proto.v1alpha1.SelinuxUserInfo selinux_info = 15;
   */
  selinuxInfo?: SelinuxUserInfo;
};

/**
 * Describes the message proto.v1alpha1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 0);

/**
 * AuthenticationData contains password and authentication-related information
 *
 * @generated from message proto.v1alpha1.AuthenticationData
 */
export type AuthenticationData = Message<"proto.v1alpha1.AuthenticationData"> & {
  /**
   * Hashed password
   *
   * @generated from field: string password_hash = 1;
   */
  passwordHash: string;

  /**
   * Salt used for hashing
   *
   * @generated from field: string password_salt = 2;
   */
  passwordSalt: string;

  /**
   * Hashing algorithm used
   *
   * @generated from field: proto.v1alpha1.PasswordHashAlgorithm hash_algorithm = 3;
   */
  hashAlgorithm: PasswordHashAlgorithm;

  /**
   * Number of iterations for key derivation (if applicable)
   *
   * @generated from field: int32 iterations = 4;
   */
  iterations: number;

  /**
   * Timestamp of last password change
   *
   * @generated from field: int64 password_last_changed = 5;
   */
  passwordLastChanged: bigint;

  /**
   * Password expiration timestamp
   *
   * @generated from field: int64 password_expires_at = 6;
   */
  passwordExpiresAt: bigint;

  /**
   * Account lockout information
   *
   * @generated from field: proto.v1alpha1.AccountLockoutInfo lockout_info = 7;
   */
  lockoutInfo?: AccountLockoutInfo;
};

/**
 * Describes the message proto.v1alpha1.AuthenticationData.
 * Use `create(AuthenticationDataSchema)` to create a new message.
 */
export const AuthenticationDataSchema: GenMessage<AuthenticationData> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 1);

/**
 * AccountLockoutInfo contains information about account lockout status
 *
 * @generated from message proto.v1alpha1.AccountLockoutInfo
 */
export type AccountLockoutInfo = Message<"proto.v1alpha1.AccountLockoutInfo"> & {
  /**
   * Whether the account is currently locked
   *
   * @generated from field: bool locked = 1;
   */
  locked: boolean;

  /**
   * Reason for lockout
   *
   * @generated from field: proto.v1alpha1.LockoutReason reason = 2;
   */
  reason: LockoutReason;

  /**
   * Timestamp when lockout occurred
   *
   * @generated from field: int64 lockout_time = 3;
   */
  lockoutTime: bigint;

  /**
   * Number of failed login attempts
   *
   * @generated from field: int32 failed_attempts = 4;
   */
  failedAttempts: number;

  /**
   * Timestamp when failed attempts counter was last reset
   *
   * @generated from field: int64 attempts_reset_time = 5;
   */
  attemptsResetTime: bigint;
};

/**
 * Describes the message proto.v1alpha1.AccountLockoutInfo.
 * Use `create(AccountLockoutInfoSchema)` to create a new message.
 */
export const AccountLockoutInfoSchema: GenMessage<AccountLockoutInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 2);

/**
 * UnixUserInfo contains Unix-specific user information
 *
 * @generated from message proto.v1alpha1.UnixUserInfo
 */
export type UnixUserInfo = Message<"proto.v1alpha1.UnixUserInfo"> & {
  /**
   * Unix user ID
   *
   * @generated from field: int32 uid = 1;
   */
  uid: number;

  /**
   * Unix group ID
   *
   * @generated from field: int32 gid = 2;
   */
  gid: number;

  /**
   * Home directory path
   *
   * @generated from field: string home_directory = 3;
   */
  homeDirectory: string;

  /**
   * Login shell
   *
   * @generated from field: string shell = 4;
   */
  shell: string;

  /**
   * GECOS field (user information)
   *
   * @generated from field: string gecos = 5;
   */
  gecos: string;
};

/**
 * Describes the message proto.v1alpha1.UnixUserInfo.
 * Use `create(UnixUserInfoSchema)` to create a new message.
 */
export const UnixUserInfoSchema: GenMessage<UnixUserInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 3);

/**
 * LdapUserInfo contains LDAP-specific user information
 *
 * @generated from message proto.v1alpha1.LdapUserInfo
 */
export type LdapUserInfo = Message<"proto.v1alpha1.LdapUserInfo"> & {
  /**
   * LDAP Distinguished Name
   *
   * @generated from field: string ldap_dn = 1;
   */
  ldapDn: string;

  /**
   * Object GUID
   *
   * @generated from field: string object_guid = 2;
   */
  objectGuid: string;

  /**
   * SAM Account Name
   *
   * @generated from field: string sam_account_name = 3;
   */
  samAccountName: string;

  /**
   * User Principal Name
   *
   * @generated from field: string user_principal_name = 4;
   */
  userPrincipalName: string;

  /**
   * Groups the user is a member of
   *
   * @generated from field: repeated string member_of = 5;
   */
  memberOf: string[];

  /**
   * Account expiration timestamp
   *
   * @generated from field: int64 account_expires = 6;
   */
  accountExpires: bigint;

  /**
   * Timestamp when password was last set
   *
   * @generated from field: int64 pwd_last_set = 7;
   */
  pwdLastSet: bigint;
};

/**
 * Describes the message proto.v1alpha1.LdapUserInfo.
 * Use `create(LdapUserInfoSchema)` to create a new message.
 */
export const LdapUserInfoSchema: GenMessage<LdapUserInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 4);

/**
 * RedfishAccountInfo contains Redfish-specific account information
 *
 * @generated from message proto.v1alpha1.RedfishAccountInfo
 */
export type RedfishAccountInfo = Message<"proto.v1alpha1.RedfishAccountInfo"> & {
  /**
   * Redfish account ID
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Redfish role ID
   *
   * @generated from field: string role_id = 2;
   */
  roleId: string;

  /**
   * Account lockout policy information
   *
   * @generated from field: proto.v1alpha1.RedfishLockoutPolicy lockout_policy = 3;
   */
  lockoutPolicy?: RedfishLockoutPolicy;
};

/**
 * Describes the message proto.v1alpha1.RedfishAccountInfo.
 * Use `create(RedfishAccountInfoSchema)` to create a new message.
 */
export const RedfishAccountInfoSchema: GenMessage<RedfishAccountInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 5);

/**
 * RedfishLockoutPolicy contains Redfish-specific lockout policy settings
 *
 * @generated from message proto.v1alpha1.RedfishLockoutPolicy
 */
export type RedfishLockoutPolicy = Message<"proto.v1alpha1.RedfishLockoutPolicy"> & {
  /**
   * Number of failed login attempts before lockout
   *
   * @generated from field: int32 threshold = 1;
   */
  threshold: number;

  /**
   * Duration of lockout
   *
   * @generated from field: string duration = 2;
   */
  duration: string;

  /**
   * Time after which failed attempts counter is reset
   *
   * @generated from field: string reset_after = 3;
   */
  resetAfter: string;
};

/**
 * Describes the message proto.v1alpha1.RedfishLockoutPolicy.
 * Use `create(RedfishLockoutPolicySchema)` to create a new message.
 */
export const RedfishLockoutPolicySchema: GenMessage<RedfishLockoutPolicy> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 6);

/**
 * NatsAccountInfo contains NATS-specific account information
 *
 * @generated from message proto.v1alpha1.NatsAccountInfo
 */
export type NatsAccountInfo = Message<"proto.v1alpha1.NatsAccountInfo"> & {
  /**
   * NATS account identifier
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * NATS permissions
   *
   * @generated from field: proto.v1alpha1.NatsPermissions permissions = 2;
   */
  permissions?: NatsPermissions;

  /**
   * NATS limits
   *
   * @generated from field: proto.v1alpha1.NatsLimits limits = 3;
   */
  limits?: NatsLimits;

  /**
   * NATS user JWT
   *
   * @generated from field: string user_jwt = 4;
   */
  userJwt: string;

  /**
   * NATS user public key
   *
   * @generated from field: string user_key = 5;
   */
  userKey: string;

  /**
   * NATS user credentials
   *
   * @generated from field: string user_cred = 6;
   */
  userCred: string;
};

/**
 * Describes the message proto.v1alpha1.NatsAccountInfo.
 * Use `create(NatsAccountInfoSchema)` to create a new message.
 */
export const NatsAccountInfoSchema: GenMessage<NatsAccountInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 7);

/**
 * NatsPermissions contains NATS publish/subscribe permissions
 *
 * @generated from message proto.v1alpha1.NatsPermissions
 */
export type NatsPermissions = Message<"proto.v1alpha1.NatsPermissions"> & {
  /**
   * Subjects the user can publish to
   *
   * @generated from field: repeated string publish = 1;
   */
  publish: string[];

  /**
   * Subjects the user can subscribe to
   *
   * @generated from field: repeated string subscribe = 2;
   */
  subscribe: string[];

  /**
   * Subjects for allowing responses
   *
   * @generated from field: repeated string allow_responses = 3;
   */
  allowResponses: string[];
};

/**
 * Describes the message proto.v1alpha1.NatsPermissions.
 * Use `create(NatsPermissionsSchema)` to create a new message.
 */
export const NatsPermissionsSchema: GenMessage<NatsPermissions> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 8);

/**
 * NatsLimits contains NATS resource limits for the user
 *
 * @generated from message proto.v1alpha1.NatsLimits
 */
export type NatsLimits = Message<"proto.v1alpha1.NatsLimits"> & {
  /**
   * Maximum data limit in bytes
   *
   * @generated from field: int64 data = 1;
   */
  data: bigint;

  /**
   * Maximum payload size in bytes
   *
   * @generated from field: int64 payload = 2;
   */
  payload: bigint;

  /**
   * Maximum number of subscriptions
   *
   * @generated from field: int64 subs = 3;
   */
  subs: bigint;
};

/**
 * Describes the message proto.v1alpha1.NatsLimits.
 * Use `create(NatsLimitsSchema)` to create a new message.
 */
export const NatsLimitsSchema: GenMessage<NatsLimits> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 9);

/**
 * SelinuxUserInfo contains SELinux-specific user mapping information
 *
 * @generated from message proto.v1alpha1.SelinuxUserInfo
 */
export type SelinuxUserInfo = Message<"proto.v1alpha1.SelinuxUserInfo"> & {
  /**
   * SELinux user
   *
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * SELinux role
   *
   * @generated from field: string role = 2;
   */
  role: string;

  /**
   * SELinux type
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * SELinux level
   *
   * @generated from field: string level = 4;
   */
  level: string;
};

/**
 * Describes the message proto.v1alpha1.SelinuxUserInfo.
 * Use `create(SelinuxUserInfoSchema)` to create a new message.
 */
export const SelinuxUserInfoSchema: GenMessage<SelinuxUserInfo> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 10);

/**
 * Request message for creating a new user
 *
 * @generated from message proto.v1alpha1.CreateUserRequest
 */
export type CreateUserRequest = Message<"proto.v1alpha1.CreateUserRequest"> & {
  /**
   * User to create
   *
   * @generated from field: proto.v1alpha1.User user = 1;
   */
  user?: User;

  /**
   * Plain text password (will be hashed server-side)
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message proto.v1alpha1.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export const CreateUserRequestSchema: GenMessage<CreateUserRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 11);

/**
 * Response message for creating a new user
 *
 * @generated from message proto.v1alpha1.CreateUserResponse
 */
export type CreateUserResponse = Message<"proto.v1alpha1.CreateUserResponse"> & {
  /**
   * Created user with server-generated fields
   *
   * @generated from field: proto.v1alpha1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message proto.v1alpha1.CreateUserResponse.
 * Use `create(CreateUserResponseSchema)` to create a new message.
 */
export const CreateUserResponseSchema: GenMessage<CreateUserResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 12);

/**
 * Request message for getting a user by ID
 *
 * @generated from message proto.v1alpha1.GetUserRequest
 */
export type GetUserRequest = Message<"proto.v1alpha1.GetUserRequest"> & {
  /**
   * User ID
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.v1alpha1.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export const GetUserRequestSchema: GenMessage<GetUserRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 13);

/**
 * Response message for getting a user
 *
 * @generated from message proto.v1alpha1.GetUserResponse
 */
export type GetUserResponse = Message<"proto.v1alpha1.GetUserResponse"> & {
  /**
   * Retrieved user
   *
   * @generated from field: proto.v1alpha1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message proto.v1alpha1.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export const GetUserResponseSchema: GenMessage<GetUserResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 14);

/**
 * Request message for updating a user
 *
 * @generated from message proto.v1alpha1.UpdateUserRequest
 */
export type UpdateUserRequest = Message<"proto.v1alpha1.UpdateUserRequest"> & {
  /**
   * Updated user information
   *
   * @generated from field: proto.v1alpha1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message proto.v1alpha1.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export const UpdateUserRequestSchema: GenMessage<UpdateUserRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 15);

/**
 * Response message for updating a user
 *
 * @generated from message proto.v1alpha1.UpdateUserResponse
 */
export type UpdateUserResponse = Message<"proto.v1alpha1.UpdateUserResponse"> & {
  /**
   * Updated user
   *
   * @generated from field: proto.v1alpha1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message proto.v1alpha1.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export const UpdateUserResponseSchema: GenMessage<UpdateUserResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 16);

/**
 * Request message for deleting a user
 *
 * @generated from message proto.v1alpha1.DeleteUserRequest
 */
export type DeleteUserRequest = Message<"proto.v1alpha1.DeleteUserRequest"> & {
  /**
   * User ID to delete
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.v1alpha1.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export const DeleteUserRequestSchema: GenMessage<DeleteUserRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 17);

/**
 * Response message for deleting a user
 *
 * @generated from message proto.v1alpha1.DeleteUserResponse
 */
export type DeleteUserResponse = Message<"proto.v1alpha1.DeleteUserResponse"> & {
  /**
   * Success indicator
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message proto.v1alpha1.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export const DeleteUserResponseSchema: GenMessage<DeleteUserResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 18);

/**
 * Request message for listing users with optional filtering
 *
 * @generated from message proto.v1alpha1.ListUsersRequest
 */
export type ListUsersRequest = Message<"proto.v1alpha1.ListUsersRequest"> & {
  /**
   * Optional filter by user source
   *
   * @generated from field: proto.v1alpha1.UserSource source = 1;
   */
  source: UserSource;

  /**
   * Optional filter by enabled status
   *
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;

  /**
   * Optional filter by username (prefix match)
   *
   * @generated from field: string username_prefix = 3;
   */
  usernamePrefix: string;
};

/**
 * Describes the message proto.v1alpha1.ListUsersRequest.
 * Use `create(ListUsersRequestSchema)` to create a new message.
 */
export const ListUsersRequestSchema: GenMessage<ListUsersRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 19);

/**
 * Response message for listing users
 *
 * @generated from message proto.v1alpha1.ListUsersResponse
 */
export type ListUsersResponse = Message<"proto.v1alpha1.ListUsersResponse"> & {
  /**
   * List of users matching the criteria
   *
   * @generated from field: repeated proto.v1alpha1.User users = 1;
   */
  users: User[];
};

/**
 * Describes the message proto.v1alpha1.ListUsersResponse.
 * Use `create(ListUsersResponseSchema)` to create a new message.
 */
export const ListUsersResponseSchema: GenMessage<ListUsersResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 20);

/**
 * Request message for changing a user's password
 *
 * @generated from message proto.v1alpha1.ChangePasswordRequest
 */
export type ChangePasswordRequest = Message<"proto.v1alpha1.ChangePasswordRequest"> & {
  /**
   * User ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Current password (for verification)
   *
   * @generated from field: string current_password = 2;
   */
  currentPassword: string;

  /**
   * New password
   *
   * @generated from field: string new_password = 3;
   */
  newPassword: string;
};

/**
 * Describes the message proto.v1alpha1.ChangePasswordRequest.
 * Use `create(ChangePasswordRequestSchema)` to create a new message.
 */
export const ChangePasswordRequestSchema: GenMessage<ChangePasswordRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 21);

/**
 * Response message for changing a user's password
 *
 * @generated from message proto.v1alpha1.ChangePasswordResponse
 */
export type ChangePasswordResponse = Message<"proto.v1alpha1.ChangePasswordResponse"> & {
  /**
   * Success indicator
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message proto.v1alpha1.ChangePasswordResponse.
 * Use `create(ChangePasswordResponseSchema)` to create a new message.
 */
export const ChangePasswordResponseSchema: GenMessage<ChangePasswordResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 22);

/**
 * Request message for resetting a user's password
 *
 * @generated from message proto.v1alpha1.ResetPasswordRequest
 */
export type ResetPasswordRequest = Message<"proto.v1alpha1.ResetPasswordRequest"> & {
  /**
   * User ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * New password (if not provided, system generates one)
   *
   * @generated from field: string new_password = 2;
   */
  newPassword: string;

  /**
   * Whether to force reset regardless of current state
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message proto.v1alpha1.ResetPasswordRequest.
 * Use `create(ResetPasswordRequestSchema)` to create a new message.
 */
export const ResetPasswordRequestSchema: GenMessage<ResetPasswordRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 23);

/**
 * Response message for resetting a user's password
 *
 * @generated from message proto.v1alpha1.ResetPasswordResponse
 */
export type ResetPasswordResponse = Message<"proto.v1alpha1.ResetPasswordResponse"> & {
  /**
   * The new password (if system-generated)
   *
   * @generated from field: string new_password = 1;
   */
  newPassword: string;

  /**
   * Success indicator
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;
};

/**
 * Describes the message proto.v1alpha1.ResetPasswordResponse.
 * Use `create(ResetPasswordResponseSchema)` to create a new message.
 */
export const ResetPasswordResponseSchema: GenMessage<ResetPasswordResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 24);

/**
 * Request message for authenticating a user
 *
 * @generated from message proto.v1alpha1.AuthenticateUserRequest
 */
export type AuthenticateUserRequest = Message<"proto.v1alpha1.AuthenticateUserRequest"> & {
  /**
   * Username
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Password
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message proto.v1alpha1.AuthenticateUserRequest.
 * Use `create(AuthenticateUserRequestSchema)` to create a new message.
 */
export const AuthenticateUserRequestSchema: GenMessage<AuthenticateUserRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 25);

/**
 * Response message for authenticating a user
 *
 * @generated from message proto.v1alpha1.AuthenticateUserResponse
 */
export type AuthenticateUserResponse = Message<"proto.v1alpha1.AuthenticateUserResponse"> & {
  /**
   * Authentication success
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * User ID if authentication successful
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Authentication token (if successful)
   *
   * @generated from field: string token = 3;
   */
  token: string;

  /**
   * Reason for authentication failure (if unsuccessful)
   *
   * @generated from field: string failure_reason = 4;
   */
  failureReason: string;
};

/**
 * Describes the message proto.v1alpha1.AuthenticateUserResponse.
 * Use `create(AuthenticateUserResponseSchema)` to create a new message.
 */
export const AuthenticateUserResponseSchema: GenMessage<AuthenticateUserResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_user, 26);

/**
 * UserSource represents the source system for a user account
 *
 * @generated from enum proto.v1alpha1.UserSource
 */
export enum UserSource {
  /**
   * @generated from enum value: USER_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_SOURCE_LOCAL = 1;
   */
  LOCAL = 1,

  /**
   * @generated from enum value: USER_SOURCE_LDAP = 2;
   */
  LDAP = 2,

  /**
   * @generated from enum value: USER_SOURCE_AD = 3;
   */
  AD = 3,

  /**
   * @generated from enum value: USER_SOURCE_IPMI = 4;
   */
  IPMI = 4,

  /**
   * @generated from enum value: USER_SOURCE_REDFISH = 5;
   */
  REDFISH = 5,

  /**
   * @generated from enum value: USER_SOURCE_NATS = 6;
   */
  NATS = 6,
}

/**
 * Describes the enum proto.v1alpha1.UserSource.
 */
export const UserSourceSchema: GenEnum<UserSource> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_user, 0);

/**
 * PasswordHashAlgorithm represents the algorithm used for password hashing
 *
 * @generated from enum proto.v1alpha1.PasswordHashAlgorithm
 */
export enum PasswordHashAlgorithm {
  /**
   * @generated from enum value: PASSWORD_HASH_ALGORITHM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PASSWORD_HASH_ALGORITHM_BCRYPT = 1;
   */
  BCRYPT = 1,

  /**
   * @generated from enum value: PASSWORD_HASH_ALGORITHM_ARGON2 = 2;
   */
  ARGON2 = 2,

  /**
   * @generated from enum value: PASSWORD_HASH_ALGORITHM_SHA256 = 3;
   */
  SHA256 = 3,

  /**
   * @generated from enum value: PASSWORD_HASH_ALGORITHM_SHA512 = 4;
   */
  SHA512 = 4,
}

/**
 * Describes the enum proto.v1alpha1.PasswordHashAlgorithm.
 */
export const PasswordHashAlgorithmSchema: GenEnum<PasswordHashAlgorithm> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_user, 1);

/**
 * LockoutReason represents the reason for account lockout
 *
 * @generated from enum proto.v1alpha1.LockoutReason
 */
export enum LockoutReason {
  /**
   * @generated from enum value: LOCKOUT_REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOCKOUT_REASON_FAILED_LOGIN_ATTEMPTS = 1;
   */
  FAILED_LOGIN_ATTEMPTS = 1,

  /**
   * @generated from enum value: LOCKOUT_REASON_ADMINISTRATIVE = 2;
   */
  ADMINISTRATIVE = 2,

  /**
   * @generated from enum value: LOCKOUT_REASON_PASSWORD_EXPIRED = 3;
   */
  PASSWORD_EXPIRED = 3,
}

/**
 * Describes the enum proto.v1alpha1.LockoutReason.
 */
export const LockoutReasonSchema: GenEnum<LockoutReason> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_user, 2);

/**
 * Service definition for user management operations
 *
 * @generated from service proto.v1alpha1.UserService
 */
export const UserService: GenService<{
  /**
   * Create a new user
   *
   * @generated from rpc proto.v1alpha1.UserService.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof CreateUserResponseSchema;
  },
  /**
   * Get a user by ID
   *
   * @generated from rpc proto.v1alpha1.UserService.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof GetUserResponseSchema;
  },
  /**
   * Update an existing user
   *
   * @generated from rpc proto.v1alpha1.UserService.UpdateUser
   */
  updateUser: {
    methodKind: "unary";
    input: typeof UpdateUserRequestSchema;
    output: typeof UpdateUserResponseSchema;
  },
  /**
   * Delete a user
   *
   * @generated from rpc proto.v1alpha1.UserService.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof DeleteUserRequestSchema;
    output: typeof DeleteUserResponseSchema;
  },
  /**
   * List users with optional filtering
   *
   * @generated from rpc proto.v1alpha1.UserService.ListUsers
   */
  listUsers: {
    methodKind: "unary";
    input: typeof ListUsersRequestSchema;
    output: typeof ListUsersResponseSchema;
  },
  /**
   * Change a user's password
   *
   * @generated from rpc proto.v1alpha1.UserService.ChangePassword
   */
  changePassword: {
    methodKind: "unary";
    input: typeof ChangePasswordRequestSchema;
    output: typeof ChangePasswordResponseSchema;
  },
  /**
   * Reset a user's password
   *
   * @generated from rpc proto.v1alpha1.UserService.ResetPassword
   */
  resetPassword: {
    methodKind: "unary";
    input: typeof ResetPasswordRequestSchema;
    output: typeof ResetPasswordResponseSchema;
  },
  /**
   * Authenticate a user
   *
   * @generated from rpc proto.v1alpha1.UserService.AuthenticateUser
   */
  authenticateUser: {
    methodKind: "unary";
    input: typeof AuthenticateUserRequestSchema;
    output: typeof AuthenticateUserResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_schema_v1alpha1_user, 0);

