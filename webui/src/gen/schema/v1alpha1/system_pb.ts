// SPDX-License-Identifier: BSD-3-Clause

// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file schema/v1alpha1/system.proto (package proto.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file schema/v1alpha1/system.proto.
 */
export const file_schema_v1alpha1_system: GenFile = /*@__PURE__*/
  fileDesc("ChxzY2hlbWEvdjFhbHBoYTEvc3lzdGVtLnByb3RvEg5wcm90by52MWFscGhhMSL0AQoOSG9zdE1hbmFnZW1lbnQSEwoCaWQYASABKAlCB7pIBHICEAESFQoEbmFtZRgCIAEoCUIHukgEcgIQARIyCgdjaGFzc2lzGAMgAygLMhcucHJvdG8udjFhbHBoYTEuQ2hhc3Npc0IIukgFkgECCAESLQoFaG9zdHMYBCADKAsyFC5wcm90by52MWFscGhhMS5Ib3N0Qgi6SAWSAQIIARI0Cgh0b3BvbG9neRgFIAEoCzIiLnByb3RvLnYxYWxwaGExLk1hbmFnZW1lbnRUb3BvbG9neRIdChVsYXN0X3VwZGF0ZV90aW1lc3RhbXAYBiABKAMi2AIKB0NoYXNzaXMSEwoCaWQYASABKAlCB7pIBHICEAESFQoEbmFtZRgCIAEoCUIHukgEcgIQARIpCgR0eXBlGAMgASgOMhsucHJvdG8udjFhbHBoYTEuQ2hhc3Npc1R5cGUSLwoLcG93ZXJfc3RhdGUYBCABKA4yGi5wcm90by52MWFscGhhMS5Qb3dlclN0YXRlEhkKEXBoeXNpY2FsX2xvY2F0aW9uGAUgASgJEhoKCGhvc3RfaWRzGAYgAygJQgi6SAWSAQIIABIcCgpzZW5zb3JfaWRzGAcgAygJQgi6SAWSAQIIABIiChB0aGVybWFsX3pvbmVfaWRzGAggAygJQgi6SAWSAQIIABItCgZzdGF0dXMYCSABKA4yHS5wcm90by52MWFscGhhMS5DaGFzc2lzU3RhdHVzEh0KFWxhc3RfdXBkYXRlX3RpbWVzdGFtcBgKIAEoAyLaAgoESG9zdBITCgJpZBgBIAEoCUIHukgEcgIQARIVCgRuYW1lGAIgASgJQge6SARyAhABEigKBXN0YXRlGAMgASgOMhkucHJvdG8udjFhbHBoYTEuSG9zdFN0YXRlEjIKD3JlcXVlc3RlZF9zdGF0ZRgEIAEoDjIZLnByb3RvLnYxYWxwaGExLkhvc3RTdGF0ZRIqCgZoZWFsdGgYBSABKA4yGi5wcm90by52MWFscGhhMS5Ib3N0SGVhbHRoEhsKCmNoYXNzaXNfaWQYBiABKAlCB7pIBHICEAESGQoRcGh5c2ljYWxfbG9jYXRpb24YByABKAkSFAoMYmlvc192ZXJzaW9uGAggASgJEi8KC3Bvd2VyX3N0YXRlGAkgASgOMhoucHJvdG8udjFhbHBoYTEuUG93ZXJTdGF0ZRIdChVsYXN0X3VwZGF0ZV90aW1lc3RhbXAYCiABKAMiXgoSTWFuYWdlbWVudFRvcG9sb2d5EkgKEHJvb3RfY29udHJvbGxlcnMYASADKAsyJC5wcm90by52MWFscGhhMS5NYW5hZ2VtZW50Q29udHJvbGxlckIIukgFkgECCAEihgMKFE1hbmFnZW1lbnRDb250cm9sbGVyEhMKAmlkGAEgASgJQge6SARyAhABEhUKBG5hbWUYAiABKAlCB7pIBHICEAESNgoEdHlwZRgDIAEoDjIoLnByb3RvLnYxYWxwaGExLk1hbmFnZW1lbnRDb250cm9sbGVyVHlwZRIiChBtYW5hZ2VkX2hvc3RfaWRzGAQgAygJQgi6SAWSAQIIABIlChNtYW5hZ2VkX2NoYXNzaXNfaWRzGAUgAygJQgi6SAWSAQIIABJJChFjaGlsZF9jb250cm9sbGVycxgGIAMoCzIkLnByb3RvLnYxYWxwaGExLk1hbmFnZW1lbnRDb250cm9sbGVyQgi6SAWSAQIIABIZChFwaHlzaWNhbF9sb2NhdGlvbhgHIAEoCRI6CgZzdGF0dXMYCCABKA4yKi5wcm90by52MWFscGhhMS5NYW5hZ2VtZW50Q29udHJvbGxlclN0YXR1cxIdChVsYXN0X3VwZGF0ZV90aW1lc3RhbXAYCSABKAMiLwoYR2V0SG9zdE1hbmFnZW1lbnRSZXF1ZXN0EhMKAmlkGAEgASgJQge6SARyAhABIlQKGUdldEhvc3RNYW5hZ2VtZW50UmVzcG9uc2USNwoPaG9zdF9tYW5hZ2VtZW50GAEgASgLMh4ucHJvdG8udjFhbHBoYTEuSG9zdE1hbmFnZW1lbnQiGwoZTGlzdEhvc3RNYW5hZ2VtZW50UmVxdWVzdCJWChpMaXN0SG9zdE1hbmFnZW1lbnRSZXNwb25zZRI4ChBob3N0X21hbmFnZW1lbnRzGAEgAygLMh4ucHJvdG8udjFhbHBoYTEuSG9zdE1hbmFnZW1lbnQiKAoRR2V0Q2hhc3Npc1JlcXVlc3QSEwoCaWQYASABKAlCB7pIBHICEAEiPgoSR2V0Q2hhc3Npc1Jlc3BvbnNlEigKB2NoYXNzaXMYASABKAsyFy5wcm90by52MWFscGhhMS5DaGFzc2lzIm4KEkxpc3RDaGFzc2lzUmVxdWVzdBIpCgR0eXBlGAEgASgOMhsucHJvdG8udjFhbHBoYTEuQ2hhc3Npc1R5cGUSLQoGc3RhdHVzGAIgASgOMh0ucHJvdG8udjFhbHBoYTEuQ2hhc3Npc1N0YXR1cyI/ChNMaXN0Q2hhc3Npc1Jlc3BvbnNlEigKB2NoYXNzaXMYASADKAsyFy5wcm90by52MWFscGhhMS5DaGFzc2lzIiUKDkdldEhvc3RSZXF1ZXN0EhMKAmlkGAEgASgJQge6SARyAhABIjUKD0dldEhvc3RSZXNwb25zZRIiCgRob3N0GAEgASgLMhQucHJvdG8udjFhbHBoYTEuSG9zdCJ8ChBMaXN0SG9zdHNSZXF1ZXN0EigKBXN0YXRlGAEgASgOMhkucHJvdG8udjFhbHBoYTEuSG9zdFN0YXRlEioKBmhlYWx0aBgCIAEoDjIaLnByb3RvLnYxYWxwaGExLkhvc3RIZWFsdGgSEgoKY2hhc3Npc19pZBgDIAEoCSI4ChFMaXN0SG9zdHNSZXNwb25zZRIjCgVob3N0cxgBIAMoCzIULnByb3RvLnYxYWxwaGExLkhvc3QiNQoeR2V0TWFuYWdlbWVudENvbnRyb2xsZXJSZXF1ZXN0EhMKAmlkGAEgASgJQge6SARyAhABImYKH0dldE1hbmFnZW1lbnRDb250cm9sbGVyUmVzcG9uc2USQwoVbWFuYWdlbWVudF9jb250cm9sbGVyGAEgASgLMiQucHJvdG8udjFhbHBoYTEuTWFuYWdlbWVudENvbnRyb2xsZXIilgEKIExpc3RNYW5hZ2VtZW50Q29udHJvbGxlcnNSZXF1ZXN0EjYKBHR5cGUYASABKA4yKC5wcm90by52MWFscGhhMS5NYW5hZ2VtZW50Q29udHJvbGxlclR5cGUSOgoGc3RhdHVzGAIgASgOMioucHJvdG8udjFhbHBoYTEuTWFuYWdlbWVudENvbnRyb2xsZXJTdGF0dXMiaQohTGlzdE1hbmFnZW1lbnRDb250cm9sbGVyc1Jlc3BvbnNlEkQKFm1hbmFnZW1lbnRfY29udHJvbGxlcnMYASADKAsyJC5wcm90by52MWFscGhhMS5NYW5hZ2VtZW50Q29udHJvbGxlciquAQoJSG9zdFN0YXRlEhoKFkhPU1RfU1RBVEVfVU5TUEVDSUZJRUQQABIRCg1IT1NUX1NUQVRFX09OEAESEgoOSE9TVF9TVEFURV9PRkYQAhIUChBIT1NUX1NUQVRFX0VSUk9SEAMSFgoSSE9TVF9TVEFURV9VTktOT1dOEAQSFwoTSE9TVF9TVEFURV9TVEFSVElORxAFEhcKE0hPU1RfU1RBVEVfU1RPUFBJTkcQBiqJAQoKSG9zdEhlYWx0aBIbChdIT1NUX0hFQUxUSF9VTlNQRUNJRklFRBAAEhIKDkhPU1RfSEVBTFRIX09LEAESFwoTSE9TVF9IRUFMVEhfV0FSTklORxACEhgKFEhPU1RfSEVBTFRIX0NSSVRJQ0FMEAMSFwoTSE9TVF9IRUFMVEhfVU5LTk9XThAEKmsKClBvd2VyU3RhdGUSGwoXUE9XRVJfU1RBVEVfVU5TUEVDSUZJRUQQABISCg5QT1dFUl9TVEFURV9PThABEhMKD1BPV0VSX1NUQVRFX09GRhACEhcKE1BPV0VSX1NUQVRFX1VOS05PV04QAyqOAQoLQ2hhc3Npc1R5cGUSHAoYQ0hBU1NJU19UWVBFX1VOU1BFQ0lGSUVEEAASFQoRQ0hBU1NJU19UWVBFX1JBQ0sQARIWChJDSEFTU0lTX1RZUEVfQkxBREUQAhIbChdDSEFTU0lTX1RZUEVfU1RBTkRBTE9ORRADEhUKEUNIQVNTSVNfVFlQRV9DQVJEEAQqmwEKDUNoYXNzaXNTdGF0dXMSHgoaQ0hBU1NJU19TVEFUVVNfVU5TUEVDSUZJRUQQABIVChFDSEFTU0lTX1NUQVRVU19PSxABEhoKFkNIQVNTSVNfU1RBVFVTX1dBUk5JTkcQAhIbChdDSEFTU0lTX1NUQVRVU19DUklUSUNBTBADEhoKFkNIQVNTSVNfU1RBVFVTX1VOS05PV04QBCrHAQoYTWFuYWdlbWVudENvbnRyb2xsZXJUeXBlEioKJk1BTkFHRU1FTlRfQ09OVFJPTExFUl9UWVBFX1VOU1BFQ0lGSUVEEAASKAokTUFOQUdFTUVOVF9DT05UUk9MTEVSX1RZUEVfU0FURUxMSVRFEAESIgoeTUFOQUdFTUVOVF9DT05UUk9MTEVSX1RZUEVfQk1DEAISMQotTUFOQUdFTUVOVF9DT05UUk9MTEVSX1RZUEVfQ0hBU1NJU19DT05UUk9MTEVSEAMq6wEKGk1hbmFnZW1lbnRDb250cm9sbGVyU3RhdHVzEiwKKE1BTkFHRU1FTlRfQ09OVFJPTExFUl9TVEFUVVNfVU5TUEVDSUZJRUQQABIjCh9NQU5BR0VNRU5UX0NPTlRST0xMRVJfU1RBVFVTX09LEAESKAokTUFOQUdFTUVOVF9DT05UUk9MTEVSX1NUQVRVU19XQVJOSU5HEAISJgoiTUFOQUdFTUVOVF9DT05UUk9MTEVSX1NUQVRVU19FUlJPUhADEigKJE1BTkFHRU1FTlRfQ09OVFJPTExFUl9TVEFUVVNfVU5LTk9XThAEMvIBChVIb3N0TWFuYWdlbWVudFNlcnZpY2USagoRR2V0SG9zdE1hbmFnZW1lbnQSKC5wcm90by52MWFscGhhMS5HZXRIb3N0TWFuYWdlbWVudFJlcXVlc3QaKS5wcm90by52MWFscGhhMS5HZXRIb3N0TWFuYWdlbWVudFJlc3BvbnNlIgASbQoSTGlzdEhvc3RNYW5hZ2VtZW50EikucHJvdG8udjFhbHBoYTEuTGlzdEhvc3RNYW5hZ2VtZW50UmVxdWVzdBoqLnByb3RvLnYxYWxwaGExLkxpc3RIb3N0TWFuYWdlbWVudFJlc3BvbnNlIgAywQEKDkNoYXNzaXNTZXJ2aWNlElUKCkdldENoYXNzaXMSIS5wcm90by52MWFscGhhMS5HZXRDaGFzc2lzUmVxdWVzdBoiLnByb3RvLnYxYWxwaGExLkdldENoYXNzaXNSZXNwb25zZSIAElgKC0xpc3RDaGFzc2lzEiIucHJvdG8udjFhbHBoYTEuTGlzdENoYXNzaXNSZXF1ZXN0GiMucHJvdG8udjFhbHBoYTEuTGlzdENoYXNzaXNSZXNwb25zZSIAMq8BCgtIb3N0U2VydmljZRJMCgdHZXRIb3N0Eh4ucHJvdG8udjFhbHBoYTEuR2V0SG9zdFJlcXVlc3QaHy5wcm90by52MWFscGhhMS5HZXRIb3N0UmVzcG9uc2UiABJSCglMaXN0SG9zdHMSIC5wcm90by52MWFscGhhMS5MaXN0SG9zdHNSZXF1ZXN0GiEucHJvdG8udjFhbHBoYTEuTGlzdEhvc3RzUmVzcG9uc2UiADKgAgobTWFuYWdlbWVudENvbnRyb2xsZXJTZXJ2aWNlEnwKF0dldE1hbmFnZW1lbnRDb250cm9sbGVyEi4ucHJvdG8udjFhbHBoYTEuR2V0TWFuYWdlbWVudENvbnRyb2xsZXJSZXF1ZXN0Gi8ucHJvdG8udjFhbHBoYTEuR2V0TWFuYWdlbWVudENvbnRyb2xsZXJSZXNwb25zZSIAEoIBChlMaXN0TWFuYWdlbWVudENvbnRyb2xsZXJzEjAucHJvdG8udjFhbHBoYTEuTGlzdE1hbmFnZW1lbnRDb250cm9sbGVyc1JlcXVlc3QaMS5wcm90by52MWFscGhhMS5MaXN0TWFuYWdlbWVudENvbnRyb2xsZXJzUmVzcG9uc2UiAEKxAQoSY29tLnByb3RvLnYxYWxwaGExQgtTeXN0ZW1Qcm90b1ABWjV1LWJtYy5vcmcvdS1ibWMvYXBpL2dlbi9zY2hlbWEvdjFhbHBoYTE7cHJvdG92MWFscGhhMaICA1BYWKoCDlByb3RvLlYxYWxwaGExygIOUHJvdG9cVjFhbHBoYTHiAhpQcm90b1xWMWFscGhhMVxHUEJNZXRhZGF0YeoCD1Byb3RvOjpWMWFscGhhMWIGcHJvdG8z", [file_buf_validate_validate]);

/**
 * HostManagement represents the overall host and chassis management configuration
 *
 * @generated from message proto.v1alpha1.HostManagement
 */
export type HostManagement = Message<"proto.v1alpha1.HostManagement"> & {
  /**
   * Unique identifier for the host management instance
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable name for the host management instance
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * List of chassis managed by this host management instance
   *
   * @generated from field: repeated proto.v1alpha1.Chassis chassis = 3;
   */
  chassis: Chassis[];

  /**
   * List of hosts managed by this host management instance
   *
   * @generated from field: repeated proto.v1alpha1.Host hosts = 4;
   */
  hosts: Host[];

  /**
   * Management hierarchy topology
   *
   * @generated from field: proto.v1alpha1.ManagementTopology topology = 5;
   */
  topology?: ManagementTopology;

  /**
   * Timestamp of the last update
   *
   * @generated from field: int64 last_update_timestamp = 6;
   */
  lastUpdateTimestamp: bigint;
};

/**
 * Describes the message proto.v1alpha1.HostManagement.
 * Use `create(HostManagementSchema)` to create a new message.
 */
export const HostManagementSchema: GenMessage<HostManagement> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 0);

/**
 * Chassis represents a physical or virtual chassis containing hosts and other components
 *
 * @generated from message proto.v1alpha1.Chassis
 */
export type Chassis = Message<"proto.v1alpha1.Chassis"> & {
  /**
   * Unique identifier for the chassis
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable name for the chassis
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Chassis type (e.g., Rack, Blade, Standalone)
   *
   * @generated from field: proto.v1alpha1.ChassisType type = 3;
   */
  type: ChassisType;

  /**
   * Current power state of the chassis
   *
   * @generated from field: proto.v1alpha1.PowerState power_state = 4;
   */
  powerState: PowerState;

  /**
   * Physical location of the chassis
   *
   * @generated from field: string physical_location = 5;
   */
  physicalLocation: string;

  /**
   * List of host IDs contained in this chassis
   *
   * @generated from field: repeated string host_ids = 6;
   */
  hostIds: string[];

  /**
   * List of sensor IDs associated with this chassis
   *
   * @generated from field: repeated string sensor_ids = 7;
   */
  sensorIds: string[];

  /**
   * List of thermal zone IDs associated with this chassis
   *
   * @generated from field: repeated string thermal_zone_ids = 8;
   */
  thermalZoneIds: string[];

  /**
   * Status of the chassis
   *
   * @generated from field: proto.v1alpha1.ChassisStatus status = 9;
   */
  status: ChassisStatus;

  /**
   * Timestamp of the last update
   *
   * @generated from field: int64 last_update_timestamp = 10;
   */
  lastUpdateTimestamp: bigint;
};

/**
 * Describes the message proto.v1alpha1.Chassis.
 * Use `create(ChassisSchema)` to create a new message.
 */
export const ChassisSchema: GenMessage<Chassis> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 1);

/**
 * Host represents a compute host within a chassis
 *
 * @generated from message proto.v1alpha1.Host
 */
export type Host = Message<"proto.v1alpha1.Host"> & {
  /**
   * Unique identifier for the host
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable name for the host
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Host state (on, off, error, etc.)
   *
   * @generated from field: proto.v1alpha1.HostState state = 3;
   */
  state: HostState;

  /**
   * Requested host state (what we want the host to be)
   *
   * @generated from field: proto.v1alpha1.HostState requested_state = 4;
   */
  requestedState: HostState;

  /**
   * Host health status
   *
   * @generated from field: proto.v1alpha1.HostHealth health = 5;
   */
  health: HostHealth;

  /**
   * Chassis ID this host belongs to
   *
   * @generated from field: string chassis_id = 6;
   */
  chassisId: string;

  /**
   * Physical location of the host within the chassis
   *
   * @generated from field: string physical_location = 7;
   */
  physicalLocation: string;

  /**
   * BIOS/UEFI version
   *
   * @generated from field: string bios_version = 8;
   */
  biosVersion: string;

  /**
   * Host power state
   *
   * @generated from field: proto.v1alpha1.PowerState power_state = 9;
   */
  powerState: PowerState;

  /**
   * Timestamp of the last update
   *
   * @generated from field: int64 last_update_timestamp = 10;
   */
  lastUpdateTimestamp: bigint;
};

/**
 * Describes the message proto.v1alpha1.Host.
 * Use `create(HostSchema)` to create a new message.
 */
export const HostSchema: GenMessage<Host> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 2);

/**
 * ManagementTopology represents the hierarchical management structure
 *
 * @generated from message proto.v1alpha1.ManagementTopology
 */
export type ManagementTopology = Message<"proto.v1alpha1.ManagementTopology"> & {
  /**
   * Root management controllers
   *
   * @generated from field: repeated proto.v1alpha1.ManagementController root_controllers = 1;
   */
  rootControllers: ManagementController[];
};

/**
 * Describes the message proto.v1alpha1.ManagementTopology.
 * Use `create(ManagementTopologySchema)` to create a new message.
 */
export const ManagementTopologySchema: GenMessage<ManagementTopology> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 3);

/**
 * ManagementController represents a management controller in the hierarchy
 *
 * @generated from message proto.v1alpha1.ManagementController
 */
export type ManagementController = Message<"proto.v1alpha1.ManagementController"> & {
  /**
   * Unique identifier for the management controller
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable name for the management controller
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Type of management controller
   *
   * @generated from field: proto.v1alpha1.ManagementControllerType type = 3;
   */
  type: ManagementControllerType;

  /**
   * Host IDs managed by this controller
   *
   * @generated from field: repeated string managed_host_ids = 4;
   */
  managedHostIds: string[];

  /**
   * Chassis IDs managed by this controller
   *
   * @generated from field: repeated string managed_chassis_ids = 5;
   */
  managedChassisIds: string[];

  /**
   * Child management controllers (e.g., BMCs managed by an SMC)
   *
   * @generated from field: repeated proto.v1alpha1.ManagementController child_controllers = 6;
   */
  childControllers: ManagementController[];

  /**
   * Physical location of the management controller
   *
   * @generated from field: string physical_location = 7;
   */
  physicalLocation: string;

  /**
   * Status of the management controller
   *
   * @generated from field: proto.v1alpha1.ManagementControllerStatus status = 8;
   */
  status: ManagementControllerStatus;

  /**
   * Timestamp of the last update
   *
   * @generated from field: int64 last_update_timestamp = 9;
   */
  lastUpdateTimestamp: bigint;
};

/**
 * Describes the message proto.v1alpha1.ManagementController.
 * Use `create(ManagementControllerSchema)` to create a new message.
 */
export const ManagementControllerSchema: GenMessage<ManagementController> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 4);

/**
 * Request message for getting a host management configuration by ID
 *
 * @generated from message proto.v1alpha1.GetHostManagementRequest
 */
export type GetHostManagementRequest = Message<"proto.v1alpha1.GetHostManagementRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.v1alpha1.GetHostManagementRequest.
 * Use `create(GetHostManagementRequestSchema)` to create a new message.
 */
export const GetHostManagementRequestSchema: GenMessage<GetHostManagementRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 5);

/**
 * Response message for getting a host management configuration
 *
 * @generated from message proto.v1alpha1.GetHostManagementResponse
 */
export type GetHostManagementResponse = Message<"proto.v1alpha1.GetHostManagementResponse"> & {
  /**
   * @generated from field: proto.v1alpha1.HostManagement host_management = 1;
   */
  hostManagement?: HostManagement;
};

/**
 * Describes the message proto.v1alpha1.GetHostManagementResponse.
 * Use `create(GetHostManagementResponseSchema)` to create a new message.
 */
export const GetHostManagementResponseSchema: GenMessage<GetHostManagementResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 6);

/**
 * Request message for listing host management configurations
 *
 * @generated from message proto.v1alpha1.ListHostManagementRequest
 */
export type ListHostManagementRequest = Message<"proto.v1alpha1.ListHostManagementRequest"> & {
};

/**
 * Describes the message proto.v1alpha1.ListHostManagementRequest.
 * Use `create(ListHostManagementRequestSchema)` to create a new message.
 */
export const ListHostManagementRequestSchema: GenMessage<ListHostManagementRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 7);

/**
 * Response message for listing host management configurations
 *
 * @generated from message proto.v1alpha1.ListHostManagementResponse
 */
export type ListHostManagementResponse = Message<"proto.v1alpha1.ListHostManagementResponse"> & {
  /**
   * @generated from field: repeated proto.v1alpha1.HostManagement host_managements = 1;
   */
  hostManagements: HostManagement[];
};

/**
 * Describes the message proto.v1alpha1.ListHostManagementResponse.
 * Use `create(ListHostManagementResponseSchema)` to create a new message.
 */
export const ListHostManagementResponseSchema: GenMessage<ListHostManagementResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 8);

/**
 * Request message for getting a chassis by ID
 *
 * @generated from message proto.v1alpha1.GetChassisRequest
 */
export type GetChassisRequest = Message<"proto.v1alpha1.GetChassisRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.v1alpha1.GetChassisRequest.
 * Use `create(GetChassisRequestSchema)` to create a new message.
 */
export const GetChassisRequestSchema: GenMessage<GetChassisRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 9);

/**
 * Response message for getting a chassis
 *
 * @generated from message proto.v1alpha1.GetChassisResponse
 */
export type GetChassisResponse = Message<"proto.v1alpha1.GetChassisResponse"> & {
  /**
   * @generated from field: proto.v1alpha1.Chassis chassis = 1;
   */
  chassis?: Chassis;
};

/**
 * Describes the message proto.v1alpha1.GetChassisResponse.
 * Use `create(GetChassisResponseSchema)` to create a new message.
 */
export const GetChassisResponseSchema: GenMessage<GetChassisResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 10);

/**
 * Request message for listing chassis with optional filtering
 *
 * @generated from message proto.v1alpha1.ListChassisRequest
 */
export type ListChassisRequest = Message<"proto.v1alpha1.ListChassisRequest"> & {
  /**
   * @generated from field: proto.v1alpha1.ChassisType type = 1;
   */
  type: ChassisType;

  /**
   * @generated from field: proto.v1alpha1.ChassisStatus status = 2;
   */
  status: ChassisStatus;
};

/**
 * Describes the message proto.v1alpha1.ListChassisRequest.
 * Use `create(ListChassisRequestSchema)` to create a new message.
 */
export const ListChassisRequestSchema: GenMessage<ListChassisRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 11);

/**
 * Response message for listing chassis
 *
 * @generated from message proto.v1alpha1.ListChassisResponse
 */
export type ListChassisResponse = Message<"proto.v1alpha1.ListChassisResponse"> & {
  /**
   * @generated from field: repeated proto.v1alpha1.Chassis chassis = 1;
   */
  chassis: Chassis[];
};

/**
 * Describes the message proto.v1alpha1.ListChassisResponse.
 * Use `create(ListChassisResponseSchema)` to create a new message.
 */
export const ListChassisResponseSchema: GenMessage<ListChassisResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 12);

/**
 * Request message for getting a host by ID
 *
 * @generated from message proto.v1alpha1.GetHostRequest
 */
export type GetHostRequest = Message<"proto.v1alpha1.GetHostRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.v1alpha1.GetHostRequest.
 * Use `create(GetHostRequestSchema)` to create a new message.
 */
export const GetHostRequestSchema: GenMessage<GetHostRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 13);

/**
 * Response message for getting a host
 *
 * @generated from message proto.v1alpha1.GetHostResponse
 */
export type GetHostResponse = Message<"proto.v1alpha1.GetHostResponse"> & {
  /**
   * @generated from field: proto.v1alpha1.Host host = 1;
   */
  host?: Host;
};

/**
 * Describes the message proto.v1alpha1.GetHostResponse.
 * Use `create(GetHostResponseSchema)` to create a new message.
 */
export const GetHostResponseSchema: GenMessage<GetHostResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 14);

/**
 * Request message for listing hosts with optional filtering
 *
 * @generated from message proto.v1alpha1.ListHostsRequest
 */
export type ListHostsRequest = Message<"proto.v1alpha1.ListHostsRequest"> & {
  /**
   * @generated from field: proto.v1alpha1.HostState state = 1;
   */
  state: HostState;

  /**
   * @generated from field: proto.v1alpha1.HostHealth health = 2;
   */
  health: HostHealth;

  /**
   * @generated from field: string chassis_id = 3;
   */
  chassisId: string;
};

/**
 * Describes the message proto.v1alpha1.ListHostsRequest.
 * Use `create(ListHostsRequestSchema)` to create a new message.
 */
export const ListHostsRequestSchema: GenMessage<ListHostsRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 15);

/**
 * Response message for listing hosts
 *
 * @generated from message proto.v1alpha1.ListHostsResponse
 */
export type ListHostsResponse = Message<"proto.v1alpha1.ListHostsResponse"> & {
  /**
   * @generated from field: repeated proto.v1alpha1.Host hosts = 1;
   */
  hosts: Host[];
};

/**
 * Describes the message proto.v1alpha1.ListHostsResponse.
 * Use `create(ListHostsResponseSchema)` to create a new message.
 */
export const ListHostsResponseSchema: GenMessage<ListHostsResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 16);

/**
 * Request message for getting a management controller by ID
 *
 * @generated from message proto.v1alpha1.GetManagementControllerRequest
 */
export type GetManagementControllerRequest = Message<"proto.v1alpha1.GetManagementControllerRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.v1alpha1.GetManagementControllerRequest.
 * Use `create(GetManagementControllerRequestSchema)` to create a new message.
 */
export const GetManagementControllerRequestSchema: GenMessage<GetManagementControllerRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 17);

/**
 * Response message for getting a management controller
 *
 * @generated from message proto.v1alpha1.GetManagementControllerResponse
 */
export type GetManagementControllerResponse = Message<"proto.v1alpha1.GetManagementControllerResponse"> & {
  /**
   * @generated from field: proto.v1alpha1.ManagementController management_controller = 1;
   */
  managementController?: ManagementController;
};

/**
 * Describes the message proto.v1alpha1.GetManagementControllerResponse.
 * Use `create(GetManagementControllerResponseSchema)` to create a new message.
 */
export const GetManagementControllerResponseSchema: GenMessage<GetManagementControllerResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 18);

/**
 * Request message for listing management controllers with optional filtering
 *
 * @generated from message proto.v1alpha1.ListManagementControllersRequest
 */
export type ListManagementControllersRequest = Message<"proto.v1alpha1.ListManagementControllersRequest"> & {
  /**
   * @generated from field: proto.v1alpha1.ManagementControllerType type = 1;
   */
  type: ManagementControllerType;

  /**
   * @generated from field: proto.v1alpha1.ManagementControllerStatus status = 2;
   */
  status: ManagementControllerStatus;
};

/**
 * Describes the message proto.v1alpha1.ListManagementControllersRequest.
 * Use `create(ListManagementControllersRequestSchema)` to create a new message.
 */
export const ListManagementControllersRequestSchema: GenMessage<ListManagementControllersRequest> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 19);

/**
 * Response message for listing management controllers
 *
 * @generated from message proto.v1alpha1.ListManagementControllersResponse
 */
export type ListManagementControllersResponse = Message<"proto.v1alpha1.ListManagementControllersResponse"> & {
  /**
   * @generated from field: repeated proto.v1alpha1.ManagementController management_controllers = 1;
   */
  managementControllers: ManagementController[];
};

/**
 * Describes the message proto.v1alpha1.ListManagementControllersResponse.
 * Use `create(ListManagementControllersResponseSchema)` to create a new message.
 */
export const ListManagementControllersResponseSchema: GenMessage<ListManagementControllersResponse> = /*@__PURE__*/
  messageDesc(file_schema_v1alpha1_system, 20);

/**
 * HostState represents the operational state of a host
 *
 * @generated from enum proto.v1alpha1.HostState
 */
export enum HostState {
  /**
   * @generated from enum value: HOST_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: HOST_STATE_ON = 1;
   */
  ON = 1,

  /**
   * @generated from enum value: HOST_STATE_OFF = 2;
   */
  OFF = 2,

  /**
   * @generated from enum value: HOST_STATE_ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: HOST_STATE_UNKNOWN = 4;
   */
  UNKNOWN = 4,

  /**
   * @generated from enum value: HOST_STATE_STARTING = 5;
   */
  STARTING = 5,

  /**
   * @generated from enum value: HOST_STATE_STOPPING = 6;
   */
  STOPPING = 6,
}

/**
 * Describes the enum proto.v1alpha1.HostState.
 */
export const HostStateSchema: GenEnum<HostState> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 0);

/**
 * HostHealth represents the health status of a host
 *
 * @generated from enum proto.v1alpha1.HostHealth
 */
export enum HostHealth {
  /**
   * @generated from enum value: HOST_HEALTH_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: HOST_HEALTH_OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: HOST_HEALTH_WARNING = 2;
   */
  WARNING = 2,

  /**
   * @generated from enum value: HOST_HEALTH_CRITICAL = 3;
   */
  CRITICAL = 3,

  /**
   * @generated from enum value: HOST_HEALTH_UNKNOWN = 4;
   */
  UNKNOWN = 4,
}

/**
 * Describes the enum proto.v1alpha1.HostHealth.
 */
export const HostHealthSchema: GenEnum<HostHealth> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 1);

/**
 * PowerState represents the power state of a component
 *
 * @generated from enum proto.v1alpha1.PowerState
 */
export enum PowerState {
  /**
   * @generated from enum value: POWER_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: POWER_STATE_ON = 1;
   */
  ON = 1,

  /**
   * @generated from enum value: POWER_STATE_OFF = 2;
   */
  OFF = 2,

  /**
   * @generated from enum value: POWER_STATE_UNKNOWN = 3;
   */
  UNKNOWN = 3,
}

/**
 * Describes the enum proto.v1alpha1.PowerState.
 */
export const PowerStateSchema: GenEnum<PowerState> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 2);

/**
 * ChassisType represents the type of chassis
 *
 * @generated from enum proto.v1alpha1.ChassisType
 */
export enum ChassisType {
  /**
   * @generated from enum value: CHASSIS_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_TYPE_RACK = 1;
   */
  RACK = 1,

  /**
   * @generated from enum value: CHASSIS_TYPE_BLADE = 2;
   */
  BLADE = 2,

  /**
   * @generated from enum value: CHASSIS_TYPE_STANDALONE = 3;
   */
  STANDALONE = 3,

  /**
   * @generated from enum value: CHASSIS_TYPE_CARD = 4;
   */
  CARD = 4,
}

/**
 * Describes the enum proto.v1alpha1.ChassisType.
 */
export const ChassisTypeSchema: GenEnum<ChassisType> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 3);

/**
 * ChassisStatus represents the operational status of a chassis
 *
 * @generated from enum proto.v1alpha1.ChassisStatus
 */
export enum ChassisStatus {
  /**
   * @generated from enum value: CHASSIS_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHASSIS_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: CHASSIS_STATUS_WARNING = 2;
   */
  WARNING = 2,

  /**
   * @generated from enum value: CHASSIS_STATUS_CRITICAL = 3;
   */
  CRITICAL = 3,

  /**
   * @generated from enum value: CHASSIS_STATUS_UNKNOWN = 4;
   */
  UNKNOWN = 4,
}

/**
 * Describes the enum proto.v1alpha1.ChassisStatus.
 */
export const ChassisStatusSchema: GenEnum<ChassisStatus> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 4);

/**
 * ManagementControllerType represents the type of management controller
 *
 * @generated from enum proto.v1alpha1.ManagementControllerType
 */
export enum ManagementControllerType {
  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_TYPE_SATELLITE = 1;
   */
  SATELLITE = 1,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_TYPE_BMC = 2;
   */
  BMC = 2,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER = 3;
   */
  CHASSIS_CONTROLLER = 3,
}

/**
 * Describes the enum proto.v1alpha1.ManagementControllerType.
 */
export const ManagementControllerTypeSchema: GenEnum<ManagementControllerType> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 5);

/**
 * ManagementControllerStatus represents the operational status of a management controller
 *
 * @generated from enum proto.v1alpha1.ManagementControllerStatus
 */
export enum ManagementControllerStatus {
  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_STATUS_WARNING = 2;
   */
  WARNING = 2,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_STATUS_ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: MANAGEMENT_CONTROLLER_STATUS_UNKNOWN = 4;
   */
  UNKNOWN = 4,
}

/**
 * Describes the enum proto.v1alpha1.ManagementControllerStatus.
 */
export const ManagementControllerStatusSchema: GenEnum<ManagementControllerStatus> = /*@__PURE__*/
  enumDesc(file_schema_v1alpha1_system, 6);

/**
 * Service definition for host management operations
 *
 * @generated from service proto.v1alpha1.HostManagementService
 */
export const HostManagementService: GenService<{
  /**
   * Get a host management configuration by ID
   *
   * @generated from rpc proto.v1alpha1.HostManagementService.GetHostManagement
   */
  getHostManagement: {
    methodKind: "unary";
    input: typeof GetHostManagementRequestSchema;
    output: typeof GetHostManagementResponseSchema;
  },
  /**
   * List all host management configurations
   *
   * @generated from rpc proto.v1alpha1.HostManagementService.ListHostManagement
   */
  listHostManagement: {
    methodKind: "unary";
    input: typeof ListHostManagementRequestSchema;
    output: typeof ListHostManagementResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_schema_v1alpha1_system, 0);

/**
 * Service definition for chassis operations
 *
 * @generated from service proto.v1alpha1.ChassisService
 */
export const ChassisService: GenService<{
  /**
   * Get a chassis by ID
   *
   * @generated from rpc proto.v1alpha1.ChassisService.GetChassis
   */
  getChassis: {
    methodKind: "unary";
    input: typeof GetChassisRequestSchema;
    output: typeof GetChassisResponseSchema;
  },
  /**
   * List all chassis with optional filtering
   *
   * @generated from rpc proto.v1alpha1.ChassisService.ListChassis
   */
  listChassis: {
    methodKind: "unary";
    input: typeof ListChassisRequestSchema;
    output: typeof ListChassisResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_schema_v1alpha1_system, 1);

/**
 * Service definition for host operations
 *
 * @generated from service proto.v1alpha1.HostService
 */
export const HostService: GenService<{
  /**
   * Get a host by ID
   *
   * @generated from rpc proto.v1alpha1.HostService.GetHost
   */
  getHost: {
    methodKind: "unary";
    input: typeof GetHostRequestSchema;
    output: typeof GetHostResponseSchema;
  },
  /**
   * List all hosts with optional filtering
   *
   * @generated from rpc proto.v1alpha1.HostService.ListHosts
   */
  listHosts: {
    methodKind: "unary";
    input: typeof ListHostsRequestSchema;
    output: typeof ListHostsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_schema_v1alpha1_system, 2);

/**
 * Service definition for management controller operations
 *
 * @generated from service proto.v1alpha1.ManagementControllerService
 */
export const ManagementControllerService: GenService<{
  /**
   * Get a management controller by ID
   *
   * @generated from rpc proto.v1alpha1.ManagementControllerService.GetManagementController
   */
  getManagementController: {
    methodKind: "unary";
    input: typeof GetManagementControllerRequestSchema;
    output: typeof GetManagementControllerResponseSchema;
  },
  /**
   * List all management controllers with optional filtering
   *
   * @generated from rpc proto.v1alpha1.ManagementControllerService.ListManagementControllers
   */
  listManagementControllers: {
    methodKind: "unary";
    input: typeof ListManagementControllersRequestSchema;
    output: typeof ListManagementControllersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_schema_v1alpha1_system, 3);

