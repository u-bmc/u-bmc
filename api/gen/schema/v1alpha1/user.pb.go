// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: schema/v1alpha1/user.proto

package protov1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserSource represents the source system for a user account
type UserSource int32

const (
	UserSource_USER_SOURCE_UNSPECIFIED UserSource = 0
	UserSource_USER_SOURCE_LOCAL       UserSource = 1
	UserSource_USER_SOURCE_LDAP        UserSource = 2
	UserSource_USER_SOURCE_AD          UserSource = 3
	UserSource_USER_SOURCE_IPMI        UserSource = 4
	UserSource_USER_SOURCE_REDFISH     UserSource = 5
	UserSource_USER_SOURCE_NATS        UserSource = 6
)

// Enum value maps for UserSource.
var (
	UserSource_name = map[int32]string{
		0: "USER_SOURCE_UNSPECIFIED",
		1: "USER_SOURCE_LOCAL",
		2: "USER_SOURCE_LDAP",
		3: "USER_SOURCE_AD",
		4: "USER_SOURCE_IPMI",
		5: "USER_SOURCE_REDFISH",
		6: "USER_SOURCE_NATS",
	}
	UserSource_value = map[string]int32{
		"USER_SOURCE_UNSPECIFIED": 0,
		"USER_SOURCE_LOCAL":       1,
		"USER_SOURCE_LDAP":        2,
		"USER_SOURCE_AD":          3,
		"USER_SOURCE_IPMI":        4,
		"USER_SOURCE_REDFISH":     5,
		"USER_SOURCE_NATS":        6,
	}
)

func (x UserSource) Enum() *UserSource {
	p := new(UserSource)
	*p = x
	return p
}

func (x UserSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSource) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_user_proto_enumTypes[0].Descriptor()
}

func (UserSource) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_user_proto_enumTypes[0]
}

func (x UserSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSource.Descriptor instead.
func (UserSource) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{0}
}

// PasswordHashAlgorithm represents the algorithm used for password hashing
type PasswordHashAlgorithm int32

const (
	PasswordHashAlgorithm_PASSWORD_HASH_ALGORITHM_UNSPECIFIED PasswordHashAlgorithm = 0
	PasswordHashAlgorithm_PASSWORD_HASH_ALGORITHM_BCRYPT      PasswordHashAlgorithm = 1
	PasswordHashAlgorithm_PASSWORD_HASH_ALGORITHM_ARGON2      PasswordHashAlgorithm = 2
	PasswordHashAlgorithm_PASSWORD_HASH_ALGORITHM_SHA256      PasswordHashAlgorithm = 3
	PasswordHashAlgorithm_PASSWORD_HASH_ALGORITHM_SHA512      PasswordHashAlgorithm = 4
)

// Enum value maps for PasswordHashAlgorithm.
var (
	PasswordHashAlgorithm_name = map[int32]string{
		0: "PASSWORD_HASH_ALGORITHM_UNSPECIFIED",
		1: "PASSWORD_HASH_ALGORITHM_BCRYPT",
		2: "PASSWORD_HASH_ALGORITHM_ARGON2",
		3: "PASSWORD_HASH_ALGORITHM_SHA256",
		4: "PASSWORD_HASH_ALGORITHM_SHA512",
	}
	PasswordHashAlgorithm_value = map[string]int32{
		"PASSWORD_HASH_ALGORITHM_UNSPECIFIED": 0,
		"PASSWORD_HASH_ALGORITHM_BCRYPT":      1,
		"PASSWORD_HASH_ALGORITHM_ARGON2":      2,
		"PASSWORD_HASH_ALGORITHM_SHA256":      3,
		"PASSWORD_HASH_ALGORITHM_SHA512":      4,
	}
)

func (x PasswordHashAlgorithm) Enum() *PasswordHashAlgorithm {
	p := new(PasswordHashAlgorithm)
	*p = x
	return p
}

func (x PasswordHashAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PasswordHashAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_user_proto_enumTypes[1].Descriptor()
}

func (PasswordHashAlgorithm) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_user_proto_enumTypes[1]
}

func (x PasswordHashAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PasswordHashAlgorithm.Descriptor instead.
func (PasswordHashAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{1}
}

// LockoutReason represents the reason for account lockout
type LockoutReason int32

const (
	LockoutReason_LOCKOUT_REASON_UNSPECIFIED           LockoutReason = 0
	LockoutReason_LOCKOUT_REASON_FAILED_LOGIN_ATTEMPTS LockoutReason = 1
	LockoutReason_LOCKOUT_REASON_ADMINISTRATIVE        LockoutReason = 2
	LockoutReason_LOCKOUT_REASON_PASSWORD_EXPIRED      LockoutReason = 3
)

// Enum value maps for LockoutReason.
var (
	LockoutReason_name = map[int32]string{
		0: "LOCKOUT_REASON_UNSPECIFIED",
		1: "LOCKOUT_REASON_FAILED_LOGIN_ATTEMPTS",
		2: "LOCKOUT_REASON_ADMINISTRATIVE",
		3: "LOCKOUT_REASON_PASSWORD_EXPIRED",
	}
	LockoutReason_value = map[string]int32{
		"LOCKOUT_REASON_UNSPECIFIED":           0,
		"LOCKOUT_REASON_FAILED_LOGIN_ATTEMPTS": 1,
		"LOCKOUT_REASON_ADMINISTRATIVE":        2,
		"LOCKOUT_REASON_PASSWORD_EXPIRED":      3,
	}
)

func (x LockoutReason) Enum() *LockoutReason {
	p := new(LockoutReason)
	*p = x
	return p
}

func (x LockoutReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockoutReason) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_user_proto_enumTypes[2].Descriptor()
}

func (LockoutReason) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_user_proto_enumTypes[2]
}

func (x LockoutReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockoutReason.Descriptor instead.
func (LockoutReason) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{2}
}

// User represents a user account in the system
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the user
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Username for login
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Full name of the user
	FullName string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// Email address
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// Whether the user account is enabled
	Enabled bool `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Timestamp when the user was created
	CreatedAt int64 `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp when the user was last updated
	UpdatedAt int64 `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Timestamp of last successful login
	LastLogin int64 `protobuf:"varint,8,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	// Source system where the user is managed
	SourceSystem UserSource `protobuf:"varint,9,opt,name=source_system,json=sourceSystem,proto3,enum=proto.v1alpha1.UserSource" json:"source_system,omitempty"`
	// Authentication data
	AuthData *AuthenticationData `protobuf:"bytes,10,opt,name=auth_data,json=authData,proto3" json:"auth_data,omitempty"`
	// Unix-specific user information (if mapped)
	UnixInfo *UnixUserInfo `protobuf:"bytes,11,opt,name=unix_info,json=unixInfo,proto3" json:"unix_info,omitempty"`
	// LDAP-specific user information (if mapped)
	LdapInfo *LdapUserInfo `protobuf:"bytes,12,opt,name=ldap_info,json=ldapInfo,proto3" json:"ldap_info,omitempty"`
	// Redfish-specific account information
	RedfishInfo *RedfishAccountInfo `protobuf:"bytes,13,opt,name=redfish_info,json=redfishInfo,proto3" json:"redfish_info,omitempty"`
	// NATS-specific account information
	NatsInfo *NatsAccountInfo `protobuf:"bytes,14,opt,name=nats_info,json=natsInfo,proto3" json:"nats_info,omitempty"`
	// SELinux-specific user mapping
	SelinuxInfo   *SelinuxUserInfo `protobuf:"bytes,15,opt,name=selinux_info,json=selinuxInfo,proto3" json:"selinux_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *User) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *User) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *User) GetSourceSystem() UserSource {
	if x != nil {
		return x.SourceSystem
	}
	return UserSource_USER_SOURCE_UNSPECIFIED
}

func (x *User) GetAuthData() *AuthenticationData {
	if x != nil {
		return x.AuthData
	}
	return nil
}

func (x *User) GetUnixInfo() *UnixUserInfo {
	if x != nil {
		return x.UnixInfo
	}
	return nil
}

func (x *User) GetLdapInfo() *LdapUserInfo {
	if x != nil {
		return x.LdapInfo
	}
	return nil
}

func (x *User) GetRedfishInfo() *RedfishAccountInfo {
	if x != nil {
		return x.RedfishInfo
	}
	return nil
}

func (x *User) GetNatsInfo() *NatsAccountInfo {
	if x != nil {
		return x.NatsInfo
	}
	return nil
}

func (x *User) GetSelinuxInfo() *SelinuxUserInfo {
	if x != nil {
		return x.SelinuxInfo
	}
	return nil
}

// AuthenticationData contains password and authentication-related information
type AuthenticationData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Hashed password
	PasswordHash string `protobuf:"bytes,1,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	// Salt used for hashing
	PasswordSalt string `protobuf:"bytes,2,opt,name=password_salt,json=passwordSalt,proto3" json:"password_salt,omitempty"`
	// Hashing algorithm used
	HashAlgorithm PasswordHashAlgorithm `protobuf:"varint,3,opt,name=hash_algorithm,json=hashAlgorithm,proto3,enum=proto.v1alpha1.PasswordHashAlgorithm" json:"hash_algorithm,omitempty"`
	// Number of iterations for key derivation (if applicable)
	Iterations int32 `protobuf:"varint,4,opt,name=iterations,proto3" json:"iterations,omitempty"`
	// Timestamp of last password change
	PasswordLastChanged int64 `protobuf:"varint,5,opt,name=password_last_changed,json=passwordLastChanged,proto3" json:"password_last_changed,omitempty"`
	// Password expiration timestamp
	PasswordExpiresAt int64 `protobuf:"varint,6,opt,name=password_expires_at,json=passwordExpiresAt,proto3" json:"password_expires_at,omitempty"`
	// Account lockout information
	LockoutInfo   *AccountLockoutInfo `protobuf:"bytes,7,opt,name=lockout_info,json=lockoutInfo,proto3" json:"lockout_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationData) Reset() {
	*x = AuthenticationData{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationData) ProtoMessage() {}

func (x *AuthenticationData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationData.ProtoReflect.Descriptor instead.
func (*AuthenticationData) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticationData) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *AuthenticationData) GetPasswordSalt() string {
	if x != nil {
		return x.PasswordSalt
	}
	return ""
}

func (x *AuthenticationData) GetHashAlgorithm() PasswordHashAlgorithm {
	if x != nil {
		return x.HashAlgorithm
	}
	return PasswordHashAlgorithm_PASSWORD_HASH_ALGORITHM_UNSPECIFIED
}

func (x *AuthenticationData) GetIterations() int32 {
	if x != nil {
		return x.Iterations
	}
	return 0
}

func (x *AuthenticationData) GetPasswordLastChanged() int64 {
	if x != nil {
		return x.PasswordLastChanged
	}
	return 0
}

func (x *AuthenticationData) GetPasswordExpiresAt() int64 {
	if x != nil {
		return x.PasswordExpiresAt
	}
	return 0
}

func (x *AuthenticationData) GetLockoutInfo() *AccountLockoutInfo {
	if x != nil {
		return x.LockoutInfo
	}
	return nil
}

// AccountLockoutInfo contains information about account lockout status
type AccountLockoutInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the account is currently locked
	Locked bool `protobuf:"varint,1,opt,name=locked,proto3" json:"locked,omitempty"`
	// Reason for lockout
	Reason LockoutReason `protobuf:"varint,2,opt,name=reason,proto3,enum=proto.v1alpha1.LockoutReason" json:"reason,omitempty"`
	// Timestamp when lockout occurred
	LockoutTime int64 `protobuf:"varint,3,opt,name=lockout_time,json=lockoutTime,proto3" json:"lockout_time,omitempty"`
	// Number of failed login attempts
	FailedAttempts int32 `protobuf:"varint,4,opt,name=failed_attempts,json=failedAttempts,proto3" json:"failed_attempts,omitempty"`
	// Timestamp when failed attempts counter was last reset
	AttemptsResetTime int64 `protobuf:"varint,5,opt,name=attempts_reset_time,json=attemptsResetTime,proto3" json:"attempts_reset_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AccountLockoutInfo) Reset() {
	*x = AccountLockoutInfo{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLockoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLockoutInfo) ProtoMessage() {}

func (x *AccountLockoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLockoutInfo.ProtoReflect.Descriptor instead.
func (*AccountLockoutInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{2}
}

func (x *AccountLockoutInfo) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *AccountLockoutInfo) GetReason() LockoutReason {
	if x != nil {
		return x.Reason
	}
	return LockoutReason_LOCKOUT_REASON_UNSPECIFIED
}

func (x *AccountLockoutInfo) GetLockoutTime() int64 {
	if x != nil {
		return x.LockoutTime
	}
	return 0
}

func (x *AccountLockoutInfo) GetFailedAttempts() int32 {
	if x != nil {
		return x.FailedAttempts
	}
	return 0
}

func (x *AccountLockoutInfo) GetAttemptsResetTime() int64 {
	if x != nil {
		return x.AttemptsResetTime
	}
	return 0
}

// UnixUserInfo contains Unix-specific user information
type UnixUserInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unix user ID
	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Unix group ID
	Gid int32 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	// Home directory path
	HomeDirectory string `protobuf:"bytes,3,opt,name=home_directory,json=homeDirectory,proto3" json:"home_directory,omitempty"`
	// Login shell
	Shell string `protobuf:"bytes,4,opt,name=shell,proto3" json:"shell,omitempty"`
	// GECOS field (user information)
	Gecos         string `protobuf:"bytes,5,opt,name=gecos,proto3" json:"gecos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnixUserInfo) Reset() {
	*x = UnixUserInfo{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnixUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnixUserInfo) ProtoMessage() {}

func (x *UnixUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnixUserInfo.ProtoReflect.Descriptor instead.
func (*UnixUserInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{3}
}

func (x *UnixUserInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UnixUserInfo) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *UnixUserInfo) GetHomeDirectory() string {
	if x != nil {
		return x.HomeDirectory
	}
	return ""
}

func (x *UnixUserInfo) GetShell() string {
	if x != nil {
		return x.Shell
	}
	return ""
}

func (x *UnixUserInfo) GetGecos() string {
	if x != nil {
		return x.Gecos
	}
	return ""
}

// LdapUserInfo contains LDAP-specific user information
type LdapUserInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// LDAP Distinguished Name
	LdapDn string `protobuf:"bytes,1,opt,name=ldap_dn,json=ldapDn,proto3" json:"ldap_dn,omitempty"`
	// Object GUID
	ObjectGuid string `protobuf:"bytes,2,opt,name=object_guid,json=objectGuid,proto3" json:"object_guid,omitempty"`
	// SAM Account Name
	SamAccountName string `protobuf:"bytes,3,opt,name=sam_account_name,json=samAccountName,proto3" json:"sam_account_name,omitempty"`
	// User Principal Name
	UserPrincipalName string `protobuf:"bytes,4,opt,name=user_principal_name,json=userPrincipalName,proto3" json:"user_principal_name,omitempty"`
	// Groups the user is a member of
	MemberOf []string `protobuf:"bytes,5,rep,name=member_of,json=memberOf,proto3" json:"member_of,omitempty"`
	// Account expiration timestamp
	AccountExpires int64 `protobuf:"varint,6,opt,name=account_expires,json=accountExpires,proto3" json:"account_expires,omitempty"`
	// Timestamp when password was last set
	PwdLastSet    int64 `protobuf:"varint,7,opt,name=pwd_last_set,json=pwdLastSet,proto3" json:"pwd_last_set,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LdapUserInfo) Reset() {
	*x = LdapUserInfo{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LdapUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LdapUserInfo) ProtoMessage() {}

func (x *LdapUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LdapUserInfo.ProtoReflect.Descriptor instead.
func (*LdapUserInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{4}
}

func (x *LdapUserInfo) GetLdapDn() string {
	if x != nil {
		return x.LdapDn
	}
	return ""
}

func (x *LdapUserInfo) GetObjectGuid() string {
	if x != nil {
		return x.ObjectGuid
	}
	return ""
}

func (x *LdapUserInfo) GetSamAccountName() string {
	if x != nil {
		return x.SamAccountName
	}
	return ""
}

func (x *LdapUserInfo) GetUserPrincipalName() string {
	if x != nil {
		return x.UserPrincipalName
	}
	return ""
}

func (x *LdapUserInfo) GetMemberOf() []string {
	if x != nil {
		return x.MemberOf
	}
	return nil
}

func (x *LdapUserInfo) GetAccountExpires() int64 {
	if x != nil {
		return x.AccountExpires
	}
	return 0
}

func (x *LdapUserInfo) GetPwdLastSet() int64 {
	if x != nil {
		return x.PwdLastSet
	}
	return 0
}

// RedfishAccountInfo contains Redfish-specific account information
type RedfishAccountInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Redfish account ID
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Redfish role ID
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// Account lockout policy information
	LockoutPolicy *RedfishLockoutPolicy `protobuf:"bytes,3,opt,name=lockout_policy,json=lockoutPolicy,proto3" json:"lockout_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedfishAccountInfo) Reset() {
	*x = RedfishAccountInfo{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedfishAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedfishAccountInfo) ProtoMessage() {}

func (x *RedfishAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedfishAccountInfo.ProtoReflect.Descriptor instead.
func (*RedfishAccountInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{5}
}

func (x *RedfishAccountInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RedfishAccountInfo) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RedfishAccountInfo) GetLockoutPolicy() *RedfishLockoutPolicy {
	if x != nil {
		return x.LockoutPolicy
	}
	return nil
}

// RedfishLockoutPolicy contains Redfish-specific lockout policy settings
type RedfishLockoutPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of failed login attempts before lockout
	Threshold int32 `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Duration of lockout
	Duration string `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// Time after which failed attempts counter is reset
	ResetAfter    string `protobuf:"bytes,3,opt,name=reset_after,json=resetAfter,proto3" json:"reset_after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedfishLockoutPolicy) Reset() {
	*x = RedfishLockoutPolicy{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedfishLockoutPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedfishLockoutPolicy) ProtoMessage() {}

func (x *RedfishLockoutPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedfishLockoutPolicy.ProtoReflect.Descriptor instead.
func (*RedfishLockoutPolicy) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{6}
}

func (x *RedfishLockoutPolicy) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *RedfishLockoutPolicy) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *RedfishLockoutPolicy) GetResetAfter() string {
	if x != nil {
		return x.ResetAfter
	}
	return ""
}

// NatsAccountInfo contains NATS-specific account information
type NatsAccountInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NATS account identifier
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// NATS permissions
	Permissions *NatsPermissions `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	// NATS limits
	Limits *NatsLimits `protobuf:"bytes,3,opt,name=limits,proto3" json:"limits,omitempty"`
	// NATS user JWT
	UserJwt string `protobuf:"bytes,4,opt,name=user_jwt,json=userJwt,proto3" json:"user_jwt,omitempty"`
	// NATS user public key
	UserKey string `protobuf:"bytes,5,opt,name=user_key,json=userKey,proto3" json:"user_key,omitempty"`
	// NATS user credentials
	UserCred      string `protobuf:"bytes,6,opt,name=user_cred,json=userCred,proto3" json:"user_cred,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsAccountInfo) Reset() {
	*x = NatsAccountInfo{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsAccountInfo) ProtoMessage() {}

func (x *NatsAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsAccountInfo.ProtoReflect.Descriptor instead.
func (*NatsAccountInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{7}
}

func (x *NatsAccountInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *NatsAccountInfo) GetPermissions() *NatsPermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *NatsAccountInfo) GetLimits() *NatsLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *NatsAccountInfo) GetUserJwt() string {
	if x != nil {
		return x.UserJwt
	}
	return ""
}

func (x *NatsAccountInfo) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

func (x *NatsAccountInfo) GetUserCred() string {
	if x != nil {
		return x.UserCred
	}
	return ""
}

// NatsPermissions contains NATS publish/subscribe permissions
type NatsPermissions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subjects the user can publish to
	Publish []string `protobuf:"bytes,1,rep,name=publish,proto3" json:"publish,omitempty"`
	// Subjects the user can subscribe to
	Subscribe []string `protobuf:"bytes,2,rep,name=subscribe,proto3" json:"subscribe,omitempty"`
	// Subjects for allowing responses
	AllowResponses []string `protobuf:"bytes,3,rep,name=allow_responses,json=allowResponses,proto3" json:"allow_responses,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NatsPermissions) Reset() {
	*x = NatsPermissions{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsPermissions) ProtoMessage() {}

func (x *NatsPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsPermissions.ProtoReflect.Descriptor instead.
func (*NatsPermissions) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{8}
}

func (x *NatsPermissions) GetPublish() []string {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *NatsPermissions) GetSubscribe() []string {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *NatsPermissions) GetAllowResponses() []string {
	if x != nil {
		return x.AllowResponses
	}
	return nil
}

// NatsLimits contains NATS resource limits for the user
type NatsLimits struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum data limit in bytes
	Data int64 `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
	// Maximum payload size in bytes
	Payload int64 `protobuf:"varint,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// Maximum number of subscriptions
	Subs          int64 `protobuf:"varint,3,opt,name=subs,proto3" json:"subs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsLimits) Reset() {
	*x = NatsLimits{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsLimits) ProtoMessage() {}

func (x *NatsLimits) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsLimits.ProtoReflect.Descriptor instead.
func (*NatsLimits) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{9}
}

func (x *NatsLimits) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

func (x *NatsLimits) GetPayload() int64 {
	if x != nil {
		return x.Payload
	}
	return 0
}

func (x *NatsLimits) GetSubs() int64 {
	if x != nil {
		return x.Subs
	}
	return 0
}

// SelinuxUserInfo contains SELinux-specific user mapping information
type SelinuxUserInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SELinux user
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// SELinux role
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	// SELinux type
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// SELinux level
	Level         string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelinuxUserInfo) Reset() {
	*x = SelinuxUserInfo{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelinuxUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelinuxUserInfo) ProtoMessage() {}

func (x *SelinuxUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelinuxUserInfo.ProtoReflect.Descriptor instead.
func (*SelinuxUserInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{10}
}

func (x *SelinuxUserInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SelinuxUserInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SelinuxUserInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SelinuxUserInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

// Request message for creating a new user
type CreateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User to create
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Plain text password (will be hashed server-side)
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{11}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Response message for creating a new user
type CreateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Created user with server-generated fields
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{12}
}

func (x *CreateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Request message for getting a user by ID
type GetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for getting a user
type GetUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Retrieved user
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Request message for updating a user
type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Updated user information
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Response message for updating a user
type UpdateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Updated user
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Request message for deleting a user
type DeleteUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to delete
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for deleting a user
type DeleteUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicator
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for listing users with optional filtering
type ListUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional filter by user source
	Source UserSource `protobuf:"varint,1,opt,name=source,proto3,enum=proto.v1alpha1.UserSource" json:"source,omitempty"`
	// Optional filter by enabled status
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Optional filter by username (prefix match)
	UsernamePrefix string `protobuf:"bytes,3,opt,name=username_prefix,json=usernamePrefix,proto3" json:"username_prefix,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{19}
}

func (x *ListUsersRequest) GetSource() UserSource {
	if x != nil {
		return x.Source
	}
	return UserSource_USER_SOURCE_UNSPECIFIED
}

func (x *ListUsersRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ListUsersRequest) GetUsernamePrefix() string {
	if x != nil {
		return x.UsernamePrefix
	}
	return ""
}

// Response message for listing users
type ListUsersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of users matching the criteria
	Users         []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{20}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// Request message for changing a user's password
type ChangePasswordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Current password (for verification)
	CurrentPassword string `protobuf:"bytes,2,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	// New password
	NewPassword   string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{21}
}

func (x *ChangePasswordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangePasswordRequest) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// Response message for changing a user's password
type ChangePasswordResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicator
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswordResponse) Reset() {
	*x = ChangePasswordResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResponse) ProtoMessage() {}

func (x *ChangePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResponse.ProtoReflect.Descriptor instead.
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{22}
}

func (x *ChangePasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for resetting a user's password
type ResetPasswordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// New password (if not provided, system generates one)
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	// Whether to force reset regardless of current state
	Force         bool `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{23}
}

func (x *ResetPasswordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ResetPasswordRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

// Response message for resetting a user's password
type ResetPasswordResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The new password (if system-generated)
	NewPassword string `protobuf:"bytes,1,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	// Success indicator
	Success       bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordResponse) Reset() {
	*x = ResetPasswordResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResponse) ProtoMessage() {}

func (x *ResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{24}
}

func (x *ResetPasswordResponse) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ResetPasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for authenticating a user
type AuthenticateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Username
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateUserRequest) Reset() {
	*x = AuthenticateUserRequest{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateUserRequest) ProtoMessage() {}

func (x *AuthenticateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateUserRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateUserRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{25}
}

func (x *AuthenticateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Response message for authenticating a user
type AuthenticateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authentication success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// User ID if authentication successful
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Authentication token (if successful)
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// Reason for authentication failure (if unsuccessful)
	FailureReason string `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateUserResponse) Reset() {
	*x = AuthenticateUserResponse{}
	mi := &file_schema_v1alpha1_user_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateUserResponse) ProtoMessage() {}

func (x *AuthenticateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_user_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateUserResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateUserResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_user_proto_rawDescGZIP(), []int{26}
}

func (x *AuthenticateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthenticateUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthenticateUserResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthenticateUserResponse) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

var File_schema_v1alpha1_user_proto protoreflect.FileDescriptor

const file_schema_v1alpha1_user_proto_rawDesc = "" +
	"\n" +
	"\x1aschema/v1alpha1/user.proto\x12\x0eproto.v1alpha1\x1a\x1bbuf/validate/validate.proto\"\xc1\x05\n" +
	"\x04User\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12#\n" +
	"\busername\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\busername\x12$\n" +
	"\tfull_name\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bfullName\x12\x1d\n" +
	"\x05email\x18\x04 \x01(\tB\a\xbaH\x04r\x02`\x01R\x05email\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"last_login\x18\b \x01(\x03R\tlastLogin\x12?\n" +
	"\rsource_system\x18\t \x01(\x0e2\x1a.proto.v1alpha1.UserSourceR\fsourceSystem\x12?\n" +
	"\tauth_data\x18\n" +
	" \x01(\v2\".proto.v1alpha1.AuthenticationDataR\bauthData\x129\n" +
	"\tunix_info\x18\v \x01(\v2\x1c.proto.v1alpha1.UnixUserInfoR\bunixInfo\x129\n" +
	"\tldap_info\x18\f \x01(\v2\x1c.proto.v1alpha1.LdapUserInfoR\bldapInfo\x12E\n" +
	"\fredfish_info\x18\r \x01(\v2\".proto.v1alpha1.RedfishAccountInfoR\vredfishInfo\x12<\n" +
	"\tnats_info\x18\x0e \x01(\v2\x1f.proto.v1alpha1.NatsAccountInfoR\bnatsInfo\x12B\n" +
	"\fselinux_info\x18\x0f \x01(\v2\x1f.proto.v1alpha1.SelinuxUserInfoR\vselinuxInfo\"\xf7\x02\n" +
	"\x12AuthenticationData\x12#\n" +
	"\rpassword_hash\x18\x01 \x01(\tR\fpasswordHash\x12#\n" +
	"\rpassword_salt\x18\x02 \x01(\tR\fpasswordSalt\x12L\n" +
	"\x0ehash_algorithm\x18\x03 \x01(\x0e2%.proto.v1alpha1.PasswordHashAlgorithmR\rhashAlgorithm\x12\x1e\n" +
	"\n" +
	"iterations\x18\x04 \x01(\x05R\n" +
	"iterations\x122\n" +
	"\x15password_last_changed\x18\x05 \x01(\x03R\x13passwordLastChanged\x12.\n" +
	"\x13password_expires_at\x18\x06 \x01(\x03R\x11passwordExpiresAt\x12E\n" +
	"\flockout_info\x18\a \x01(\v2\".proto.v1alpha1.AccountLockoutInfoR\vlockoutInfo\"\xdf\x01\n" +
	"\x12AccountLockoutInfo\x12\x16\n" +
	"\x06locked\x18\x01 \x01(\bR\x06locked\x125\n" +
	"\x06reason\x18\x02 \x01(\x0e2\x1d.proto.v1alpha1.LockoutReasonR\x06reason\x12!\n" +
	"\flockout_time\x18\x03 \x01(\x03R\vlockoutTime\x12'\n" +
	"\x0ffailed_attempts\x18\x04 \x01(\x05R\x0efailedAttempts\x12.\n" +
	"\x13attempts_reset_time\x18\x05 \x01(\x03R\x11attemptsResetTime\"\xa0\x01\n" +
	"\fUnixUserInfo\x12\x19\n" +
	"\x03uid\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x03uid\x12\x19\n" +
	"\x03gid\x18\x02 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x03gid\x12.\n" +
	"\x0ehome_directory\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rhomeDirectory\x12\x14\n" +
	"\x05shell\x18\x04 \x01(\tR\x05shell\x12\x14\n" +
	"\x05gecos\x18\x05 \x01(\tR\x05gecos\"\x93\x02\n" +
	"\fLdapUserInfo\x12 \n" +
	"\aldap_dn\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x06ldapDn\x12\x1f\n" +
	"\vobject_guid\x18\x02 \x01(\tR\n" +
	"objectGuid\x12(\n" +
	"\x10sam_account_name\x18\x03 \x01(\tR\x0esamAccountName\x12.\n" +
	"\x13user_principal_name\x18\x04 \x01(\tR\x11userPrincipalName\x12\x1b\n" +
	"\tmember_of\x18\x05 \x03(\tR\bmemberOf\x12'\n" +
	"\x0faccount_expires\x18\x06 \x01(\x03R\x0eaccountExpires\x12 \n" +
	"\fpwd_last_set\x18\a \x01(\x03R\n" +
	"pwdLastSet\"\xa2\x01\n" +
	"\x12RedfishAccountInfo\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12 \n" +
	"\arole_id\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x06roleId\x12K\n" +
	"\x0elockout_policy\x18\x03 \x01(\v2$.proto.v1alpha1.RedfishLockoutPolicyR\rlockoutPolicy\"z\n" +
	"\x14RedfishLockoutPolicy\x12%\n" +
	"\tthreshold\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\tthreshold\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\tR\bduration\x12\x1f\n" +
	"\vreset_after\x18\x03 \x01(\tR\n" +
	"resetAfter\"\xf5\x01\n" +
	"\x0fNatsAccountInfo\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12A\n" +
	"\vpermissions\x18\x02 \x01(\v2\x1f.proto.v1alpha1.NatsPermissionsR\vpermissions\x122\n" +
	"\x06limits\x18\x03 \x01(\v2\x1a.proto.v1alpha1.NatsLimitsR\x06limits\x12\x19\n" +
	"\buser_jwt\x18\x04 \x01(\tR\auserJwt\x12\x19\n" +
	"\buser_key\x18\x05 \x01(\tR\auserKey\x12\x1b\n" +
	"\tuser_cred\x18\x06 \x01(\tR\buserCred\"r\n" +
	"\x0fNatsPermissions\x12\x18\n" +
	"\apublish\x18\x01 \x03(\tR\apublish\x12\x1c\n" +
	"\tsubscribe\x18\x02 \x03(\tR\tsubscribe\x12'\n" +
	"\x0fallow_responses\x18\x03 \x03(\tR\x0eallowResponses\"N\n" +
	"\n" +
	"NatsLimits\x12\x12\n" +
	"\x04data\x18\x01 \x01(\x03R\x04data\x12\x18\n" +
	"\apayload\x18\x02 \x01(\x03R\apayload\x12\x12\n" +
	"\x04subs\x18\x03 \x01(\x03R\x04subs\"c\n" +
	"\x0fSelinuxUserInfo\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level\"j\n" +
	"\x11CreateUserRequest\x120\n" +
	"\x04user\x18\x01 \x01(\v2\x14.proto.v1alpha1.UserB\x06\xbaH\x03\xc8\x01\x01R\x04user\x12#\n" +
	"\bpassword\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\bR\bpassword\">\n" +
	"\x12CreateUserResponse\x12(\n" +
	"\x04user\x18\x01 \x01(\v2\x14.proto.v1alpha1.UserR\x04user\")\n" +
	"\x0eGetUserRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\";\n" +
	"\x0fGetUserResponse\x12(\n" +
	"\x04user\x18\x01 \x01(\v2\x14.proto.v1alpha1.UserR\x04user\"E\n" +
	"\x11UpdateUserRequest\x120\n" +
	"\x04user\x18\x01 \x01(\v2\x14.proto.v1alpha1.UserB\x06\xbaH\x03\xc8\x01\x01R\x04user\">\n" +
	"\x12UpdateUserResponse\x12(\n" +
	"\x04user\x18\x01 \x01(\v2\x14.proto.v1alpha1.UserR\x04user\",\n" +
	"\x11DeleteUserRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\".\n" +
	"\x12DeleteUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x89\x01\n" +
	"\x10ListUsersRequest\x122\n" +
	"\x06source\x18\x01 \x01(\x0e2\x1a.proto.v1alpha1.UserSourceR\x06source\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12'\n" +
	"\x0fusername_prefix\x18\x03 \x01(\tR\x0eusernamePrefix\"?\n" +
	"\x11ListUsersResponse\x12*\n" +
	"\x05users\x18\x01 \x03(\v2\x14.proto.v1alpha1.UserR\x05users\"\x90\x01\n" +
	"\x15ChangePasswordRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x122\n" +
	"\x10current_password\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0fcurrentPassword\x12*\n" +
	"\fnew_password\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\bR\vnewPassword\"2\n" +
	"\x16ChangePasswordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"q\n" +
	"\x14ResetPasswordRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12*\n" +
	"\fnew_password\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\bR\vnewPassword\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"T\n" +
	"\x15ResetPasswordResponse\x12!\n" +
	"\fnew_password\x18\x01 \x01(\tR\vnewPassword\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"c\n" +
	"\x17AuthenticateUserRequest\x12#\n" +
	"\busername\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\busername\x12#\n" +
	"\bpassword\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bpassword\"\x8a\x01\n" +
	"\x18AuthenticateUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12%\n" +
	"\x0efailure_reason\x18\x04 \x01(\tR\rfailureReason*\xaf\x01\n" +
	"\n" +
	"UserSource\x12\x1b\n" +
	"\x17USER_SOURCE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11USER_SOURCE_LOCAL\x10\x01\x12\x14\n" +
	"\x10USER_SOURCE_LDAP\x10\x02\x12\x12\n" +
	"\x0eUSER_SOURCE_AD\x10\x03\x12\x14\n" +
	"\x10USER_SOURCE_IPMI\x10\x04\x12\x17\n" +
	"\x13USER_SOURCE_REDFISH\x10\x05\x12\x14\n" +
	"\x10USER_SOURCE_NATS\x10\x06*\xd0\x01\n" +
	"\x15PasswordHashAlgorithm\x12'\n" +
	"#PASSWORD_HASH_ALGORITHM_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1ePASSWORD_HASH_ALGORITHM_BCRYPT\x10\x01\x12\"\n" +
	"\x1ePASSWORD_HASH_ALGORITHM_ARGON2\x10\x02\x12\"\n" +
	"\x1ePASSWORD_HASH_ALGORITHM_SHA256\x10\x03\x12\"\n" +
	"\x1ePASSWORD_HASH_ALGORITHM_SHA512\x10\x04*\xa1\x01\n" +
	"\rLockoutReason\x12\x1e\n" +
	"\x1aLOCKOUT_REASON_UNSPECIFIED\x10\x00\x12(\n" +
	"$LOCKOUT_REASON_FAILED_LOGIN_ATTEMPTS\x10\x01\x12!\n" +
	"\x1dLOCKOUT_REASON_ADMINISTRATIVE\x10\x02\x12#\n" +
	"\x1fLOCKOUT_REASON_PASSWORD_EXPIRED\x10\x032\xe0\x05\n" +
	"\vUserService\x12U\n" +
	"\n" +
	"CreateUser\x12!.proto.v1alpha1.CreateUserRequest\x1a\".proto.v1alpha1.CreateUserResponse\"\x00\x12L\n" +
	"\aGetUser\x12\x1e.proto.v1alpha1.GetUserRequest\x1a\x1f.proto.v1alpha1.GetUserResponse\"\x00\x12U\n" +
	"\n" +
	"UpdateUser\x12!.proto.v1alpha1.UpdateUserRequest\x1a\".proto.v1alpha1.UpdateUserResponse\"\x00\x12U\n" +
	"\n" +
	"DeleteUser\x12!.proto.v1alpha1.DeleteUserRequest\x1a\".proto.v1alpha1.DeleteUserResponse\"\x00\x12R\n" +
	"\tListUsers\x12 .proto.v1alpha1.ListUsersRequest\x1a!.proto.v1alpha1.ListUsersResponse\"\x00\x12a\n" +
	"\x0eChangePassword\x12%.proto.v1alpha1.ChangePasswordRequest\x1a&.proto.v1alpha1.ChangePasswordResponse\"\x00\x12^\n" +
	"\rResetPassword\x12$.proto.v1alpha1.ResetPasswordRequest\x1a%.proto.v1alpha1.ResetPasswordResponse\"\x00\x12g\n" +
	"\x10AuthenticateUser\x12'.proto.v1alpha1.AuthenticateUserRequest\x1a(.proto.v1alpha1.AuthenticateUserResponse\"\x00B\xaf\x01\n" +
	"\x12com.proto.v1alpha1B\tUserProtoP\x01Z5u-bmc.org/u-bmc/api/gen/schema/v1alpha1;protov1alpha1\xa2\x02\x03PXX\xaa\x02\x0eProto.V1alpha1\xca\x02\x0eProto\\V1alpha1\xe2\x02\x1aProto\\V1alpha1\\GPBMetadata\xea\x02\x0fProto::V1alpha1b\x06proto3"

var (
	file_schema_v1alpha1_user_proto_rawDescOnce sync.Once
	file_schema_v1alpha1_user_proto_rawDescData []byte
)

func file_schema_v1alpha1_user_proto_rawDescGZIP() []byte {
	file_schema_v1alpha1_user_proto_rawDescOnce.Do(func() {
		file_schema_v1alpha1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_user_proto_rawDesc), len(file_schema_v1alpha1_user_proto_rawDesc)))
	})
	return file_schema_v1alpha1_user_proto_rawDescData
}

var file_schema_v1alpha1_user_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_schema_v1alpha1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_schema_v1alpha1_user_proto_goTypes = []any{
	(UserSource)(0),                  // 0: proto.v1alpha1.UserSource
	(PasswordHashAlgorithm)(0),       // 1: proto.v1alpha1.PasswordHashAlgorithm
	(LockoutReason)(0),               // 2: proto.v1alpha1.LockoutReason
	(*User)(nil),                     // 3: proto.v1alpha1.User
	(*AuthenticationData)(nil),       // 4: proto.v1alpha1.AuthenticationData
	(*AccountLockoutInfo)(nil),       // 5: proto.v1alpha1.AccountLockoutInfo
	(*UnixUserInfo)(nil),             // 6: proto.v1alpha1.UnixUserInfo
	(*LdapUserInfo)(nil),             // 7: proto.v1alpha1.LdapUserInfo
	(*RedfishAccountInfo)(nil),       // 8: proto.v1alpha1.RedfishAccountInfo
	(*RedfishLockoutPolicy)(nil),     // 9: proto.v1alpha1.RedfishLockoutPolicy
	(*NatsAccountInfo)(nil),          // 10: proto.v1alpha1.NatsAccountInfo
	(*NatsPermissions)(nil),          // 11: proto.v1alpha1.NatsPermissions
	(*NatsLimits)(nil),               // 12: proto.v1alpha1.NatsLimits
	(*SelinuxUserInfo)(nil),          // 13: proto.v1alpha1.SelinuxUserInfo
	(*CreateUserRequest)(nil),        // 14: proto.v1alpha1.CreateUserRequest
	(*CreateUserResponse)(nil),       // 15: proto.v1alpha1.CreateUserResponse
	(*GetUserRequest)(nil),           // 16: proto.v1alpha1.GetUserRequest
	(*GetUserResponse)(nil),          // 17: proto.v1alpha1.GetUserResponse
	(*UpdateUserRequest)(nil),        // 18: proto.v1alpha1.UpdateUserRequest
	(*UpdateUserResponse)(nil),       // 19: proto.v1alpha1.UpdateUserResponse
	(*DeleteUserRequest)(nil),        // 20: proto.v1alpha1.DeleteUserRequest
	(*DeleteUserResponse)(nil),       // 21: proto.v1alpha1.DeleteUserResponse
	(*ListUsersRequest)(nil),         // 22: proto.v1alpha1.ListUsersRequest
	(*ListUsersResponse)(nil),        // 23: proto.v1alpha1.ListUsersResponse
	(*ChangePasswordRequest)(nil),    // 24: proto.v1alpha1.ChangePasswordRequest
	(*ChangePasswordResponse)(nil),   // 25: proto.v1alpha1.ChangePasswordResponse
	(*ResetPasswordRequest)(nil),     // 26: proto.v1alpha1.ResetPasswordRequest
	(*ResetPasswordResponse)(nil),    // 27: proto.v1alpha1.ResetPasswordResponse
	(*AuthenticateUserRequest)(nil),  // 28: proto.v1alpha1.AuthenticateUserRequest
	(*AuthenticateUserResponse)(nil), // 29: proto.v1alpha1.AuthenticateUserResponse
}
var file_schema_v1alpha1_user_proto_depIdxs = []int32{
	0,  // 0: proto.v1alpha1.User.source_system:type_name -> proto.v1alpha1.UserSource
	4,  // 1: proto.v1alpha1.User.auth_data:type_name -> proto.v1alpha1.AuthenticationData
	6,  // 2: proto.v1alpha1.User.unix_info:type_name -> proto.v1alpha1.UnixUserInfo
	7,  // 3: proto.v1alpha1.User.ldap_info:type_name -> proto.v1alpha1.LdapUserInfo
	8,  // 4: proto.v1alpha1.User.redfish_info:type_name -> proto.v1alpha1.RedfishAccountInfo
	10, // 5: proto.v1alpha1.User.nats_info:type_name -> proto.v1alpha1.NatsAccountInfo
	13, // 6: proto.v1alpha1.User.selinux_info:type_name -> proto.v1alpha1.SelinuxUserInfo
	1,  // 7: proto.v1alpha1.AuthenticationData.hash_algorithm:type_name -> proto.v1alpha1.PasswordHashAlgorithm
	5,  // 8: proto.v1alpha1.AuthenticationData.lockout_info:type_name -> proto.v1alpha1.AccountLockoutInfo
	2,  // 9: proto.v1alpha1.AccountLockoutInfo.reason:type_name -> proto.v1alpha1.LockoutReason
	9,  // 10: proto.v1alpha1.RedfishAccountInfo.lockout_policy:type_name -> proto.v1alpha1.RedfishLockoutPolicy
	11, // 11: proto.v1alpha1.NatsAccountInfo.permissions:type_name -> proto.v1alpha1.NatsPermissions
	12, // 12: proto.v1alpha1.NatsAccountInfo.limits:type_name -> proto.v1alpha1.NatsLimits
	3,  // 13: proto.v1alpha1.CreateUserRequest.user:type_name -> proto.v1alpha1.User
	3,  // 14: proto.v1alpha1.CreateUserResponse.user:type_name -> proto.v1alpha1.User
	3,  // 15: proto.v1alpha1.GetUserResponse.user:type_name -> proto.v1alpha1.User
	3,  // 16: proto.v1alpha1.UpdateUserRequest.user:type_name -> proto.v1alpha1.User
	3,  // 17: proto.v1alpha1.UpdateUserResponse.user:type_name -> proto.v1alpha1.User
	0,  // 18: proto.v1alpha1.ListUsersRequest.source:type_name -> proto.v1alpha1.UserSource
	3,  // 19: proto.v1alpha1.ListUsersResponse.users:type_name -> proto.v1alpha1.User
	14, // 20: proto.v1alpha1.UserService.CreateUser:input_type -> proto.v1alpha1.CreateUserRequest
	16, // 21: proto.v1alpha1.UserService.GetUser:input_type -> proto.v1alpha1.GetUserRequest
	18, // 22: proto.v1alpha1.UserService.UpdateUser:input_type -> proto.v1alpha1.UpdateUserRequest
	20, // 23: proto.v1alpha1.UserService.DeleteUser:input_type -> proto.v1alpha1.DeleteUserRequest
	22, // 24: proto.v1alpha1.UserService.ListUsers:input_type -> proto.v1alpha1.ListUsersRequest
	24, // 25: proto.v1alpha1.UserService.ChangePassword:input_type -> proto.v1alpha1.ChangePasswordRequest
	26, // 26: proto.v1alpha1.UserService.ResetPassword:input_type -> proto.v1alpha1.ResetPasswordRequest
	28, // 27: proto.v1alpha1.UserService.AuthenticateUser:input_type -> proto.v1alpha1.AuthenticateUserRequest
	15, // 28: proto.v1alpha1.UserService.CreateUser:output_type -> proto.v1alpha1.CreateUserResponse
	17, // 29: proto.v1alpha1.UserService.GetUser:output_type -> proto.v1alpha1.GetUserResponse
	19, // 30: proto.v1alpha1.UserService.UpdateUser:output_type -> proto.v1alpha1.UpdateUserResponse
	21, // 31: proto.v1alpha1.UserService.DeleteUser:output_type -> proto.v1alpha1.DeleteUserResponse
	23, // 32: proto.v1alpha1.UserService.ListUsers:output_type -> proto.v1alpha1.ListUsersResponse
	25, // 33: proto.v1alpha1.UserService.ChangePassword:output_type -> proto.v1alpha1.ChangePasswordResponse
	27, // 34: proto.v1alpha1.UserService.ResetPassword:output_type -> proto.v1alpha1.ResetPasswordResponse
	29, // 35: proto.v1alpha1.UserService.AuthenticateUser:output_type -> proto.v1alpha1.AuthenticateUserResponse
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_schema_v1alpha1_user_proto_init() }
func file_schema_v1alpha1_user_proto_init() {
	if File_schema_v1alpha1_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_user_proto_rawDesc), len(file_schema_v1alpha1_user_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schema_v1alpha1_user_proto_goTypes,
		DependencyIndexes: file_schema_v1alpha1_user_proto_depIdxs,
		EnumInfos:         file_schema_v1alpha1_user_proto_enumTypes,
		MessageInfos:      file_schema_v1alpha1_user_proto_msgTypes,
	}.Build()
	File_schema_v1alpha1_user_proto = out.File
	file_schema_v1alpha1_user_proto_goTypes = nil
	file_schema_v1alpha1_user_proto_depIdxs = nil
}
