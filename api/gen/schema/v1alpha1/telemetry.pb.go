// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: schema/v1alpha1/telemetry.proto

package schemav1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TelemetryControlType int32

const (
	TelemetryControlType_TELEMETRY_CONTROL_TYPE_UNSPECIFIED TelemetryControlType = 0
	TelemetryControlType_TELEMETRY_CONTROL_TYPE_PROVIDER    TelemetryControlType = 1
	TelemetryControlType_TELEMETRY_CONTROL_TYPE_EXPORTER    TelemetryControlType = 2
	TelemetryControlType_TELEMETRY_CONTROL_TYPE_SAMPLING    TelemetryControlType = 3
	TelemetryControlType_TELEMETRY_CONTROL_TYPE_DEBUG       TelemetryControlType = 4
	TelemetryControlType_TELEMETRY_CONTROL_TYPE_COLLECTOR   TelemetryControlType = 5
)

// Enum value maps for TelemetryControlType.
var (
	TelemetryControlType_name = map[int32]string{
		0: "TELEMETRY_CONTROL_TYPE_UNSPECIFIED",
		1: "TELEMETRY_CONTROL_TYPE_PROVIDER",
		2: "TELEMETRY_CONTROL_TYPE_EXPORTER",
		3: "TELEMETRY_CONTROL_TYPE_SAMPLING",
		4: "TELEMETRY_CONTROL_TYPE_DEBUG",
		5: "TELEMETRY_CONTROL_TYPE_COLLECTOR",
	}
	TelemetryControlType_value = map[string]int32{
		"TELEMETRY_CONTROL_TYPE_UNSPECIFIED": 0,
		"TELEMETRY_CONTROL_TYPE_PROVIDER":    1,
		"TELEMETRY_CONTROL_TYPE_EXPORTER":    2,
		"TELEMETRY_CONTROL_TYPE_SAMPLING":    3,
		"TELEMETRY_CONTROL_TYPE_DEBUG":       4,
		"TELEMETRY_CONTROL_TYPE_COLLECTOR":   5,
	}
)

func (x TelemetryControlType) Enum() *TelemetryControlType {
	p := new(TelemetryControlType)
	*p = x
	return p
}

func (x TelemetryControlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TelemetryControlType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[0].Descriptor()
}

func (TelemetryControlType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[0]
}

func (x TelemetryControlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TelemetryControlType.Descriptor instead.
func (TelemetryControlType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{0}
}

type ExporterType int32

const (
	ExporterType_EXPORTER_TYPE_UNSPECIFIED ExporterType = 0
	ExporterType_EXPORTER_TYPE_NOOP        ExporterType = 1
	ExporterType_EXPORTER_TYPE_OTLP_HTTP   ExporterType = 2
	ExporterType_EXPORTER_TYPE_OTLP_GRPC   ExporterType = 3
	ExporterType_EXPORTER_TYPE_DUAL        ExporterType = 4
)

// Enum value maps for ExporterType.
var (
	ExporterType_name = map[int32]string{
		0: "EXPORTER_TYPE_UNSPECIFIED",
		1: "EXPORTER_TYPE_NOOP",
		2: "EXPORTER_TYPE_OTLP_HTTP",
		3: "EXPORTER_TYPE_OTLP_GRPC",
		4: "EXPORTER_TYPE_DUAL",
	}
	ExporterType_value = map[string]int32{
		"EXPORTER_TYPE_UNSPECIFIED": 0,
		"EXPORTER_TYPE_NOOP":        1,
		"EXPORTER_TYPE_OTLP_HTTP":   2,
		"EXPORTER_TYPE_OTLP_GRPC":   3,
		"EXPORTER_TYPE_DUAL":        4,
	}
)

func (x ExporterType) Enum() *ExporterType {
	p := new(ExporterType)
	*p = x
	return p
}

func (x ExporterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExporterType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[1].Descriptor()
}

func (ExporterType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[1]
}

func (x ExporterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExporterType.Descriptor instead.
func (ExporterType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{1}
}

type SamplingStrategy int32

const (
	SamplingStrategy_SAMPLING_STRATEGY_UNSPECIFIED    SamplingStrategy = 0
	SamplingStrategy_SAMPLING_STRATEGY_ALWAYS_ON      SamplingStrategy = 1
	SamplingStrategy_SAMPLING_STRATEGY_ALWAYS_OFF     SamplingStrategy = 2
	SamplingStrategy_SAMPLING_STRATEGY_TRACE_ID_RATIO SamplingStrategy = 3
	SamplingStrategy_SAMPLING_STRATEGY_PARENT_BASED   SamplingStrategy = 4
)

// Enum value maps for SamplingStrategy.
var (
	SamplingStrategy_name = map[int32]string{
		0: "SAMPLING_STRATEGY_UNSPECIFIED",
		1: "SAMPLING_STRATEGY_ALWAYS_ON",
		2: "SAMPLING_STRATEGY_ALWAYS_OFF",
		3: "SAMPLING_STRATEGY_TRACE_ID_RATIO",
		4: "SAMPLING_STRATEGY_PARENT_BASED",
	}
	SamplingStrategy_value = map[string]int32{
		"SAMPLING_STRATEGY_UNSPECIFIED":    0,
		"SAMPLING_STRATEGY_ALWAYS_ON":      1,
		"SAMPLING_STRATEGY_ALWAYS_OFF":     2,
		"SAMPLING_STRATEGY_TRACE_ID_RATIO": 3,
		"SAMPLING_STRATEGY_PARENT_BASED":   4,
	}
)

func (x SamplingStrategy) Enum() *SamplingStrategy {
	p := new(SamplingStrategy)
	*p = x
	return p
}

func (x SamplingStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SamplingStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[2].Descriptor()
}

func (SamplingStrategy) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[2]
}

func (x SamplingStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SamplingStrategy.Descriptor instead.
func (SamplingStrategy) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{2}
}

type DebugLevel int32

const (
	DebugLevel_DEBUG_LEVEL_UNSPECIFIED DebugLevel = 0
	DebugLevel_DEBUG_LEVEL_ERROR       DebugLevel = 1
	DebugLevel_DEBUG_LEVEL_WARN        DebugLevel = 2
	DebugLevel_DEBUG_LEVEL_INFO        DebugLevel = 3
	DebugLevel_DEBUG_LEVEL_DEBUG       DebugLevel = 4
	DebugLevel_DEBUG_LEVEL_TRACE       DebugLevel = 5
)

// Enum value maps for DebugLevel.
var (
	DebugLevel_name = map[int32]string{
		0: "DEBUG_LEVEL_UNSPECIFIED",
		1: "DEBUG_LEVEL_ERROR",
		2: "DEBUG_LEVEL_WARN",
		3: "DEBUG_LEVEL_INFO",
		4: "DEBUG_LEVEL_DEBUG",
		5: "DEBUG_LEVEL_TRACE",
	}
	DebugLevel_value = map[string]int32{
		"DEBUG_LEVEL_UNSPECIFIED": 0,
		"DEBUG_LEVEL_ERROR":       1,
		"DEBUG_LEVEL_WARN":        2,
		"DEBUG_LEVEL_INFO":        3,
		"DEBUG_LEVEL_DEBUG":       4,
		"DEBUG_LEVEL_TRACE":       5,
	}
)

func (x DebugLevel) Enum() *DebugLevel {
	p := new(DebugLevel)
	*p = x
	return p
}

func (x DebugLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebugLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[3].Descriptor()
}

func (DebugLevel) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[3]
}

func (x DebugLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DebugLevel.Descriptor instead.
func (DebugLevel) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{3}
}

type SignalType int32

const (
	SignalType_SIGNAL_TYPE_UNSPECIFIED SignalType = 0
	SignalType_SIGNAL_TYPE_TRACES      SignalType = 1
	SignalType_SIGNAL_TYPE_METRICS     SignalType = 2
	SignalType_SIGNAL_TYPE_LOGS        SignalType = 3
)

// Enum value maps for SignalType.
var (
	SignalType_name = map[int32]string{
		0: "SIGNAL_TYPE_UNSPECIFIED",
		1: "SIGNAL_TYPE_TRACES",
		2: "SIGNAL_TYPE_METRICS",
		3: "SIGNAL_TYPE_LOGS",
	}
	SignalType_value = map[string]int32{
		"SIGNAL_TYPE_UNSPECIFIED": 0,
		"SIGNAL_TYPE_TRACES":      1,
		"SIGNAL_TYPE_METRICS":     2,
		"SIGNAL_TYPE_LOGS":        3,
	}
)

func (x SignalType) Enum() *SignalType {
	p := new(SignalType)
	*p = x
	return p
}

func (x SignalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[4].Descriptor()
}

func (SignalType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[4]
}

func (x SignalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalType.Descriptor instead.
func (SignalType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{4}
}

type FilterAction int32

const (
	FilterAction_FILTER_ACTION_UNSPECIFIED FilterAction = 0
	FilterAction_FILTER_ACTION_ALLOW       FilterAction = 1
	FilterAction_FILTER_ACTION_DROP        FilterAction = 2
	FilterAction_FILTER_ACTION_SAMPLE      FilterAction = 3
)

// Enum value maps for FilterAction.
var (
	FilterAction_name = map[int32]string{
		0: "FILTER_ACTION_UNSPECIFIED",
		1: "FILTER_ACTION_ALLOW",
		2: "FILTER_ACTION_DROP",
		3: "FILTER_ACTION_SAMPLE",
	}
	FilterAction_value = map[string]int32{
		"FILTER_ACTION_UNSPECIFIED": 0,
		"FILTER_ACTION_ALLOW":       1,
		"FILTER_ACTION_DROP":        2,
		"FILTER_ACTION_SAMPLE":      3,
	}
)

func (x FilterAction) Enum() *FilterAction {
	p := new(FilterAction)
	*p = x
	return p
}

func (x FilterAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterAction) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[5].Descriptor()
}

func (FilterAction) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[5]
}

func (x FilterAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterAction.Descriptor instead.
func (FilterAction) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{5}
}

type AggregationType int32

const (
	AggregationType_AGGREGATION_TYPE_UNSPECIFIED AggregationType = 0
	AggregationType_AGGREGATION_TYPE_SUM         AggregationType = 1
	AggregationType_AGGREGATION_TYPE_AVERAGE     AggregationType = 2
	AggregationType_AGGREGATION_TYPE_COUNT       AggregationType = 3
	AggregationType_AGGREGATION_TYPE_MIN         AggregationType = 4
	AggregationType_AGGREGATION_TYPE_MAX         AggregationType = 5
	AggregationType_AGGREGATION_TYPE_HISTOGRAM   AggregationType = 6
)

// Enum value maps for AggregationType.
var (
	AggregationType_name = map[int32]string{
		0: "AGGREGATION_TYPE_UNSPECIFIED",
		1: "AGGREGATION_TYPE_SUM",
		2: "AGGREGATION_TYPE_AVERAGE",
		3: "AGGREGATION_TYPE_COUNT",
		4: "AGGREGATION_TYPE_MIN",
		5: "AGGREGATION_TYPE_MAX",
		6: "AGGREGATION_TYPE_HISTOGRAM",
	}
	AggregationType_value = map[string]int32{
		"AGGREGATION_TYPE_UNSPECIFIED": 0,
		"AGGREGATION_TYPE_SUM":         1,
		"AGGREGATION_TYPE_AVERAGE":     2,
		"AGGREGATION_TYPE_COUNT":       3,
		"AGGREGATION_TYPE_MIN":         4,
		"AGGREGATION_TYPE_MAX":         5,
		"AGGREGATION_TYPE_HISTOGRAM":   6,
	}
)

func (x AggregationType) Enum() *AggregationType {
	p := new(AggregationType)
	*p = x
	return p
}

func (x AggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_telemetry_proto_enumTypes[6].Descriptor()
}

func (AggregationType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_telemetry_proto_enumTypes[6]
}

func (x AggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregationType.Descriptor instead.
func (AggregationType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{6}
}

type TelemetryControlMessage struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Type        TelemetryControlType   `protobuf:"varint,1,opt,name=type,proto3,enum=schema.v1alpha1.TelemetryControlType" json:"type,omitempty"`
	ServiceName string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TelemetryControlMessage_ProviderConfig
	//	*TelemetryControlMessage_ExporterConfig
	//	*TelemetryControlMessage_SamplingConfig
	//	*TelemetryControlMessage_DebugConfig
	//	*TelemetryControlMessage_CollectorConfig
	Payload       isTelemetryControlMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryControlMessage) Reset() {
	*x = TelemetryControlMessage{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryControlMessage) ProtoMessage() {}

func (x *TelemetryControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryControlMessage.ProtoReflect.Descriptor instead.
func (*TelemetryControlMessage) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *TelemetryControlMessage) GetType() TelemetryControlType {
	if x != nil {
		return x.Type
	}
	return TelemetryControlType_TELEMETRY_CONTROL_TYPE_UNSPECIFIED
}

func (x *TelemetryControlMessage) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *TelemetryControlMessage) GetPayload() isTelemetryControlMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TelemetryControlMessage) GetProviderConfig() *ProviderConfig {
	if x != nil {
		if x, ok := x.Payload.(*TelemetryControlMessage_ProviderConfig); ok {
			return x.ProviderConfig
		}
	}
	return nil
}

func (x *TelemetryControlMessage) GetExporterConfig() *ExporterConfig {
	if x != nil {
		if x, ok := x.Payload.(*TelemetryControlMessage_ExporterConfig); ok {
			return x.ExporterConfig
		}
	}
	return nil
}

func (x *TelemetryControlMessage) GetSamplingConfig() *SamplingConfig {
	if x != nil {
		if x, ok := x.Payload.(*TelemetryControlMessage_SamplingConfig); ok {
			return x.SamplingConfig
		}
	}
	return nil
}

func (x *TelemetryControlMessage) GetDebugConfig() *DebugConfig {
	if x != nil {
		if x, ok := x.Payload.(*TelemetryControlMessage_DebugConfig); ok {
			return x.DebugConfig
		}
	}
	return nil
}

func (x *TelemetryControlMessage) GetCollectorConfig() *CollectorConfig {
	if x != nil {
		if x, ok := x.Payload.(*TelemetryControlMessage_CollectorConfig); ok {
			return x.CollectorConfig
		}
	}
	return nil
}

type isTelemetryControlMessage_Payload interface {
	isTelemetryControlMessage_Payload()
}

type TelemetryControlMessage_ProviderConfig struct {
	ProviderConfig *ProviderConfig `protobuf:"bytes,3,opt,name=provider_config,json=providerConfig,proto3,oneof"`
}

type TelemetryControlMessage_ExporterConfig struct {
	ExporterConfig *ExporterConfig `protobuf:"bytes,4,opt,name=exporter_config,json=exporterConfig,proto3,oneof"`
}

type TelemetryControlMessage_SamplingConfig struct {
	SamplingConfig *SamplingConfig `protobuf:"bytes,5,opt,name=sampling_config,json=samplingConfig,proto3,oneof"`
}

type TelemetryControlMessage_DebugConfig struct {
	DebugConfig *DebugConfig `protobuf:"bytes,6,opt,name=debug_config,json=debugConfig,proto3,oneof"`
}

type TelemetryControlMessage_CollectorConfig struct {
	CollectorConfig *CollectorConfig `protobuf:"bytes,7,opt,name=collector_config,json=collectorConfig,proto3,oneof"`
}

func (*TelemetryControlMessage_ProviderConfig) isTelemetryControlMessage_Payload() {}

func (*TelemetryControlMessage_ExporterConfig) isTelemetryControlMessage_Payload() {}

func (*TelemetryControlMessage_SamplingConfig) isTelemetryControlMessage_Payload() {}

func (*TelemetryControlMessage_DebugConfig) isTelemetryControlMessage_Payload() {}

func (*TelemetryControlMessage_CollectorConfig) isTelemetryControlMessage_Payload() {}

type ProviderConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	EnableTracing      bool                   `protobuf:"varint,1,opt,name=enable_tracing,json=enableTracing,proto3" json:"enable_tracing,omitempty"`
	EnableMetrics      bool                   `protobuf:"varint,2,opt,name=enable_metrics,json=enableMetrics,proto3" json:"enable_metrics,omitempty"`
	EnableLogging      bool                   `protobuf:"varint,3,opt,name=enable_logging,json=enableLogging,proto3" json:"enable_logging,omitempty"`
	ResourceAttributes map[string]string      `protobuf:"bytes,4,rep,name=resource_attributes,json=resourceAttributes,proto3" json:"resource_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tracing            *TracingProviderConfig `protobuf:"bytes,5,opt,name=tracing,proto3" json:"tracing,omitempty"`
	Metrics            *MetricsProviderConfig `protobuf:"bytes,6,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Logging            *LoggingProviderConfig `protobuf:"bytes,7,opt,name=logging,proto3" json:"logging,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProviderConfig) Reset() {
	*x = ProviderConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfig) ProtoMessage() {}

func (x *ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderConfig.ProtoReflect.Descriptor instead.
func (*ProviderConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *ProviderConfig) GetEnableTracing() bool {
	if x != nil {
		return x.EnableTracing
	}
	return false
}

func (x *ProviderConfig) GetEnableMetrics() bool {
	if x != nil {
		return x.EnableMetrics
	}
	return false
}

func (x *ProviderConfig) GetEnableLogging() bool {
	if x != nil {
		return x.EnableLogging
	}
	return false
}

func (x *ProviderConfig) GetResourceAttributes() map[string]string {
	if x != nil {
		return x.ResourceAttributes
	}
	return nil
}

func (x *ProviderConfig) GetTracing() *TracingProviderConfig {
	if x != nil {
		return x.Tracing
	}
	return nil
}

func (x *ProviderConfig) GetMetrics() *MetricsProviderConfig {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *ProviderConfig) GetLogging() *LoggingProviderConfig {
	if x != nil {
		return x.Logging
	}
	return nil
}

type TracingProviderConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Sampling           *SamplingConfig        `protobuf:"bytes,1,opt,name=sampling,proto3" json:"sampling,omitempty"`
	MaxExportBatchSize int32                  `protobuf:"varint,2,opt,name=max_export_batch_size,json=maxExportBatchSize,proto3" json:"max_export_batch_size,omitempty"`
	BatchTimeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=batch_timeout,json=batchTimeout,proto3" json:"batch_timeout,omitempty"`
	MaxQueueSize       int32                  `protobuf:"varint,4,opt,name=max_queue_size,json=maxQueueSize,proto3" json:"max_queue_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TracingProviderConfig) Reset() {
	*x = TracingProviderConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracingProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingProviderConfig) ProtoMessage() {}

func (x *TracingProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingProviderConfig.ProtoReflect.Descriptor instead.
func (*TracingProviderConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{2}
}

func (x *TracingProviderConfig) GetSampling() *SamplingConfig {
	if x != nil {
		return x.Sampling
	}
	return nil
}

func (x *TracingProviderConfig) GetMaxExportBatchSize() int32 {
	if x != nil {
		return x.MaxExportBatchSize
	}
	return 0
}

func (x *TracingProviderConfig) GetBatchTimeout() *durationpb.Duration {
	if x != nil {
		return x.BatchTimeout
	}
	return nil
}

func (x *TracingProviderConfig) GetMaxQueueSize() int32 {
	if x != nil {
		return x.MaxQueueSize
	}
	return 0
}

type MetricsProviderConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ReaderInterval  *durationpb.Duration   `protobuf:"bytes,1,opt,name=reader_interval,json=readerInterval,proto3" json:"reader_interval,omitempty"`
	EnableExemplars bool                   `protobuf:"varint,2,opt,name=enable_exemplars,json=enableExemplars,proto3" json:"enable_exemplars,omitempty"`
	MaxCardinality  int32                  `protobuf:"varint,3,opt,name=max_cardinality,json=maxCardinality,proto3" json:"max_cardinality,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetricsProviderConfig) Reset() {
	*x = MetricsProviderConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsProviderConfig) ProtoMessage() {}

func (x *MetricsProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsProviderConfig.ProtoReflect.Descriptor instead.
func (*MetricsProviderConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{3}
}

func (x *MetricsProviderConfig) GetReaderInterval() *durationpb.Duration {
	if x != nil {
		return x.ReaderInterval
	}
	return nil
}

func (x *MetricsProviderConfig) GetEnableExemplars() bool {
	if x != nil {
		return x.EnableExemplars
	}
	return false
}

func (x *MetricsProviderConfig) GetMaxCardinality() int32 {
	if x != nil {
		return x.MaxCardinality
	}
	return 0
}

type LoggingProviderConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MaxExportBatchSize int32                  `protobuf:"varint,1,opt,name=max_export_batch_size,json=maxExportBatchSize,proto3" json:"max_export_batch_size,omitempty"`
	BatchTimeout       *durationpb.Duration   `protobuf:"bytes,2,opt,name=batch_timeout,json=batchTimeout,proto3" json:"batch_timeout,omitempty"`
	MaxQueueSize       int32                  `protobuf:"varint,3,opt,name=max_queue_size,json=maxQueueSize,proto3" json:"max_queue_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LoggingProviderConfig) Reset() {
	*x = LoggingProviderConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingProviderConfig) ProtoMessage() {}

func (x *LoggingProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingProviderConfig.ProtoReflect.Descriptor instead.
func (*LoggingProviderConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{4}
}

func (x *LoggingProviderConfig) GetMaxExportBatchSize() int32 {
	if x != nil {
		return x.MaxExportBatchSize
	}
	return 0
}

func (x *LoggingProviderConfig) GetBatchTimeout() *durationpb.Duration {
	if x != nil {
		return x.BatchTimeout
	}
	return nil
}

func (x *LoggingProviderConfig) GetMaxQueueSize() int32 {
	if x != nil {
		return x.MaxQueueSize
	}
	return 0
}

type ExporterConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ExporterType           `protobuf:"varint,1,opt,name=type,proto3,enum=schema.v1alpha1.ExporterType" json:"type,omitempty"`
	HttpEndpoint  string                 `protobuf:"bytes,2,opt,name=http_endpoint,json=httpEndpoint,proto3" json:"http_endpoint,omitempty"`
	GrpcEndpoint  string                 `protobuf:"bytes,3,opt,name=grpc_endpoint,json=grpcEndpoint,proto3" json:"grpc_endpoint,omitempty"`
	Insecure      bool                   `protobuf:"varint,4,opt,name=insecure,proto3" json:"insecure,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tls           *TLSConfig             `protobuf:"bytes,7,opt,name=tls,proto3" json:"tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExporterConfig) Reset() {
	*x = ExporterConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExporterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExporterConfig) ProtoMessage() {}

func (x *ExporterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExporterConfig.ProtoReflect.Descriptor instead.
func (*ExporterConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{5}
}

func (x *ExporterConfig) GetType() ExporterType {
	if x != nil {
		return x.Type
	}
	return ExporterType_EXPORTER_TYPE_UNSPECIFIED
}

func (x *ExporterConfig) GetHttpEndpoint() string {
	if x != nil {
		return x.HttpEndpoint
	}
	return ""
}

func (x *ExporterConfig) GetGrpcEndpoint() string {
	if x != nil {
		return x.GrpcEndpoint
	}
	return ""
}

func (x *ExporterConfig) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *ExporterConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ExporterConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ExporterConfig) GetTls() *TLSConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type TLSConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CaFile             string                 `protobuf:"bytes,1,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`
	CertFile           string                 `protobuf:"bytes,2,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	KeyFile            string                 `protobuf:"bytes,3,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	InsecureSkipVerify bool                   `protobuf:"varint,4,opt,name=insecure_skip_verify,json=insecureSkipVerify,proto3" json:"insecure_skip_verify,omitempty"`
	ServerName         string                 `protobuf:"bytes,5,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig.ProtoReflect.Descriptor instead.
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{6}
}

func (x *TLSConfig) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

func (x *TLSConfig) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *TLSConfig) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *TLSConfig) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

func (x *TLSConfig) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type SamplingConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DefaultRatio     float64                `protobuf:"fixed64,1,opt,name=default_ratio,json=defaultRatio,proto3" json:"default_ratio,omitempty"`
	ServiceOverrides map[string]float64     `protobuf:"bytes,2,rep,name=service_overrides,json=serviceOverrides,proto3" json:"service_overrides,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Strategy         SamplingStrategy       `protobuf:"varint,3,opt,name=strategy,proto3,enum=schema.v1alpha1.SamplingStrategy" json:"strategy,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SamplingConfig) Reset() {
	*x = SamplingConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SamplingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamplingConfig) ProtoMessage() {}

func (x *SamplingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamplingConfig.ProtoReflect.Descriptor instead.
func (*SamplingConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{7}
}

func (x *SamplingConfig) GetDefaultRatio() float64 {
	if x != nil {
		return x.DefaultRatio
	}
	return 0
}

func (x *SamplingConfig) GetServiceOverrides() map[string]float64 {
	if x != nil {
		return x.ServiceOverrides
	}
	return nil
}

func (x *SamplingConfig) GetStrategy() SamplingStrategy {
	if x != nil {
		return x.Strategy
	}
	return SamplingStrategy_SAMPLING_STRATEGY_UNSPECIFIED
}

type DebugConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Level         DebugLevel             `protobuf:"varint,2,opt,name=level,proto3,enum=schema.v1alpha1.DebugLevel" json:"level,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugConfig) Reset() {
	*x = DebugConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugConfig) ProtoMessage() {}

func (x *DebugConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugConfig.ProtoReflect.Descriptor instead.
func (*DebugConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{8}
}

func (x *DebugConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DebugConfig) GetLevel() DebugLevel {
	if x != nil {
		return x.Level
	}
	return DebugLevel_DEBUG_LEVEL_UNSPECIFIED
}

func (x *DebugConfig) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type CollectorConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	EnableCollection    bool                   `protobuf:"varint,1,opt,name=enable_collection,json=enableCollection,proto3" json:"enable_collection,omitempty"`
	EnablePreprocessing bool                   `protobuf:"varint,2,opt,name=enable_preprocessing,json=enablePreprocessing,proto3" json:"enable_preprocessing,omitempty"`
	CollectionInterval  *durationpb.Duration   `protobuf:"bytes,3,opt,name=collection_interval,json=collectionInterval,proto3" json:"collection_interval,omitempty"`
	MaxBatchSize        int32                  `protobuf:"varint,4,opt,name=max_batch_size,json=maxBatchSize,proto3" json:"max_batch_size,omitempty"`
	FilterRules         []*FilterRule          `protobuf:"bytes,5,rep,name=filter_rules,json=filterRules,proto3" json:"filter_rules,omitempty"`
	AggregationRules    []*AggregationRule     `protobuf:"bytes,6,rep,name=aggregation_rules,json=aggregationRules,proto3" json:"aggregation_rules,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CollectorConfig) Reset() {
	*x = CollectorConfig{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorConfig) ProtoMessage() {}

func (x *CollectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorConfig.ProtoReflect.Descriptor instead.
func (*CollectorConfig) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{9}
}

func (x *CollectorConfig) GetEnableCollection() bool {
	if x != nil {
		return x.EnableCollection
	}
	return false
}

func (x *CollectorConfig) GetEnablePreprocessing() bool {
	if x != nil {
		return x.EnablePreprocessing
	}
	return false
}

func (x *CollectorConfig) GetCollectionInterval() *durationpb.Duration {
	if x != nil {
		return x.CollectionInterval
	}
	return nil
}

func (x *CollectorConfig) GetMaxBatchSize() int32 {
	if x != nil {
		return x.MaxBatchSize
	}
	return 0
}

func (x *CollectorConfig) GetFilterRules() []*FilterRule {
	if x != nil {
		return x.FilterRules
	}
	return nil
}

func (x *CollectorConfig) GetAggregationRules() []*AggregationRule {
	if x != nil {
		return x.AggregationRules
	}
	return nil
}

type FilterRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SignalType    SignalType             `protobuf:"varint,2,opt,name=signal_type,json=signalType,proto3,enum=schema.v1alpha1.SignalType" json:"signal_type,omitempty"`
	Criteria      *FilterCriteria        `protobuf:"bytes,3,opt,name=criteria,proto3" json:"criteria,omitempty"`
	Action        FilterAction           `protobuf:"varint,4,opt,name=action,proto3,enum=schema.v1alpha1.FilterAction" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterRule) Reset() {
	*x = FilterRule{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRule) ProtoMessage() {}

func (x *FilterRule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRule.ProtoReflect.Descriptor instead.
func (*FilterRule) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{10}
}

func (x *FilterRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterRule) GetSignalType() SignalType {
	if x != nil {
		return x.SignalType
	}
	return SignalType_SIGNAL_TYPE_UNSPECIFIED
}

func (x *FilterRule) GetCriteria() *FilterCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *FilterRule) GetAction() FilterAction {
	if x != nil {
		return x.Action
	}
	return FilterAction_FILTER_ACTION_UNSPECIFIED
}

type FilterCriteria struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ServiceNamePattern string                 `protobuf:"bytes,1,opt,name=service_name_pattern,json=serviceNamePattern,proto3" json:"service_name_pattern,omitempty"`
	AttributeFilters   map[string]string      `protobuf:"bytes,2,rep,name=attribute_filters,json=attributeFilters,proto3" json:"attribute_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResourceFilters    map[string]string      `protobuf:"bytes,3,rep,name=resource_filters,json=resourceFilters,proto3" json:"resource_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NamePattern        string                 `protobuf:"bytes,4,opt,name=name_pattern,json=namePattern,proto3" json:"name_pattern,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FilterCriteria) Reset() {
	*x = FilterCriteria{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCriteria) ProtoMessage() {}

func (x *FilterCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCriteria.ProtoReflect.Descriptor instead.
func (*FilterCriteria) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{11}
}

func (x *FilterCriteria) GetServiceNamePattern() string {
	if x != nil {
		return x.ServiceNamePattern
	}
	return ""
}

func (x *FilterCriteria) GetAttributeFilters() map[string]string {
	if x != nil {
		return x.AttributeFilters
	}
	return nil
}

func (x *FilterCriteria) GetResourceFilters() map[string]string {
	if x != nil {
		return x.ResourceFilters
	}
	return nil
}

func (x *FilterCriteria) GetNamePattern() string {
	if x != nil {
		return x.NamePattern
	}
	return ""
}

type AggregationRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SignalType    SignalType             `protobuf:"varint,2,opt,name=signal_type,json=signalType,proto3,enum=schema.v1alpha1.SignalType" json:"signal_type,omitempty"`
	Criteria      *AggregationCriteria   `protobuf:"bytes,3,opt,name=criteria,proto3" json:"criteria,omitempty"`
	Settings      *AggregationSettings   `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregationRule) Reset() {
	*x = AggregationRule{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationRule) ProtoMessage() {}

func (x *AggregationRule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationRule.ProtoReflect.Descriptor instead.
func (*AggregationRule) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{12}
}

func (x *AggregationRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AggregationRule) GetSignalType() SignalType {
	if x != nil {
		return x.SignalType
	}
	return SignalType_SIGNAL_TYPE_UNSPECIFIED
}

func (x *AggregationRule) GetCriteria() *AggregationCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *AggregationRule) GetSettings() *AggregationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AggregationCriteria struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ServiceNamePattern string                 `protobuf:"bytes,1,opt,name=service_name_pattern,json=serviceNamePattern,proto3" json:"service_name_pattern,omitempty"`
	MetricNamePattern  string                 `protobuf:"bytes,2,opt,name=metric_name_pattern,json=metricNamePattern,proto3" json:"metric_name_pattern,omitempty"`
	GroupByAttributes  []string               `protobuf:"bytes,3,rep,name=group_by_attributes,json=groupByAttributes,proto3" json:"group_by_attributes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AggregationCriteria) Reset() {
	*x = AggregationCriteria{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationCriteria) ProtoMessage() {}

func (x *AggregationCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationCriteria.ProtoReflect.Descriptor instead.
func (*AggregationCriteria) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{13}
}

func (x *AggregationCriteria) GetServiceNamePattern() string {
	if x != nil {
		return x.ServiceNamePattern
	}
	return ""
}

func (x *AggregationCriteria) GetMetricNamePattern() string {
	if x != nil {
		return x.MetricNamePattern
	}
	return ""
}

func (x *AggregationCriteria) GetGroupByAttributes() []string {
	if x != nil {
		return x.GroupByAttributes
	}
	return nil
}

type AggregationSettings struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WindowSize     *durationpb.Duration   `protobuf:"bytes,1,opt,name=window_size,json=windowSize,proto3" json:"window_size,omitempty"`
	Type           AggregationType        `protobuf:"varint,2,opt,name=type,proto3,enum=schema.v1alpha1.AggregationType" json:"type,omitempty"`
	MaxCardinality int32                  `protobuf:"varint,3,opt,name=max_cardinality,json=maxCardinality,proto3" json:"max_cardinality,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AggregationSettings) Reset() {
	*x = AggregationSettings{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationSettings) ProtoMessage() {}

func (x *AggregationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationSettings.ProtoReflect.Descriptor instead.
func (*AggregationSettings) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{14}
}

func (x *AggregationSettings) GetWindowSize() *durationpb.Duration {
	if x != nil {
		return x.WindowSize
	}
	return nil
}

func (x *AggregationSettings) GetType() AggregationType {
	if x != nil {
		return x.Type
	}
	return AggregationType_AGGREGATION_TYPE_UNSPECIFIED
}

func (x *AggregationSettings) GetMaxCardinality() int32 {
	if x != nil {
		return x.MaxCardinality
	}
	return 0
}

type TelemetryStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Healthy         bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	ConfigSummary   string                 `protobuf:"bytes,2,opt,name=config_summary,json=configSummary,proto3" json:"config_summary,omitempty"`
	ActiveExporters []string               `protobuf:"bytes,3,rep,name=active_exporters,json=activeExporters,proto3" json:"active_exporters,omitempty"`
	Stats           *TelemetryStats        `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TelemetryStatus) Reset() {
	*x = TelemetryStatus{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryStatus) ProtoMessage() {}

func (x *TelemetryStatus) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryStatus.ProtoReflect.Descriptor instead.
func (*TelemetryStatus) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{15}
}

func (x *TelemetryStatus) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *TelemetryStatus) GetConfigSummary() string {
	if x != nil {
		return x.ConfigSummary
	}
	return ""
}

func (x *TelemetryStatus) GetActiveExporters() []string {
	if x != nil {
		return x.ActiveExporters
	}
	return nil
}

func (x *TelemetryStatus) GetStats() *TelemetryStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type TelemetryStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TracesProcessed      int64                  `protobuf:"varint,1,opt,name=traces_processed,json=tracesProcessed,proto3" json:"traces_processed,omitempty"`
	MetricsProcessed     int64                  `protobuf:"varint,2,opt,name=metrics_processed,json=metricsProcessed,proto3" json:"metrics_processed,omitempty"`
	LogsProcessed        int64                  `protobuf:"varint,3,opt,name=logs_processed,json=logsProcessed,proto3" json:"logs_processed,omitempty"`
	TracesExported       int64                  `protobuf:"varint,4,opt,name=traces_exported,json=tracesExported,proto3" json:"traces_exported,omitempty"`
	MetricsExported      int64                  `protobuf:"varint,5,opt,name=metrics_exported,json=metricsExported,proto3" json:"metrics_exported,omitempty"`
	LogsExported         int64                  `protobuf:"varint,6,opt,name=logs_exported,json=logsExported,proto3" json:"logs_exported,omitempty"`
	ExportErrors         int64                  `protobuf:"varint,7,opt,name=export_errors,json=exportErrors,proto3" json:"export_errors,omitempty"`
	ProcessingErrors     int64                  `protobuf:"varint,8,opt,name=processing_errors,json=processingErrors,proto3" json:"processing_errors,omitempty"`
	AvgProcessingLatency *durationpb.Duration   `protobuf:"bytes,9,opt,name=avg_processing_latency,json=avgProcessingLatency,proto3" json:"avg_processing_latency,omitempty"`
	AvgExportLatency     *durationpb.Duration   `protobuf:"bytes,10,opt,name=avg_export_latency,json=avgExportLatency,proto3" json:"avg_export_latency,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TelemetryStats) Reset() {
	*x = TelemetryStats{}
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryStats) ProtoMessage() {}

func (x *TelemetryStats) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_telemetry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryStats.ProtoReflect.Descriptor instead.
func (*TelemetryStats) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_telemetry_proto_rawDescGZIP(), []int{16}
}

func (x *TelemetryStats) GetTracesProcessed() int64 {
	if x != nil {
		return x.TracesProcessed
	}
	return 0
}

func (x *TelemetryStats) GetMetricsProcessed() int64 {
	if x != nil {
		return x.MetricsProcessed
	}
	return 0
}

func (x *TelemetryStats) GetLogsProcessed() int64 {
	if x != nil {
		return x.LogsProcessed
	}
	return 0
}

func (x *TelemetryStats) GetTracesExported() int64 {
	if x != nil {
		return x.TracesExported
	}
	return 0
}

func (x *TelemetryStats) GetMetricsExported() int64 {
	if x != nil {
		return x.MetricsExported
	}
	return 0
}

func (x *TelemetryStats) GetLogsExported() int64 {
	if x != nil {
		return x.LogsExported
	}
	return 0
}

func (x *TelemetryStats) GetExportErrors() int64 {
	if x != nil {
		return x.ExportErrors
	}
	return 0
}

func (x *TelemetryStats) GetProcessingErrors() int64 {
	if x != nil {
		return x.ProcessingErrors
	}
	return 0
}

func (x *TelemetryStats) GetAvgProcessingLatency() *durationpb.Duration {
	if x != nil {
		return x.AvgProcessingLatency
	}
	return nil
}

func (x *TelemetryStats) GetAvgExportLatency() *durationpb.Duration {
	if x != nil {
		return x.AvgExportLatency
	}
	return nil
}

var File_schema_v1alpha1_telemetry_proto protoreflect.FileDescriptor

const file_schema_v1alpha1_telemetry_proto_rawDesc = "" +
	"\n" +
	"\x1fschema/v1alpha1/telemetry.proto\x12\x0fschema.v1alpha1\x1a\x1egoogle/protobuf/duration.proto\"\xf8\x03\n" +
	"\x17TelemetryControlMessage\x129\n" +
	"\x04type\x18\x01 \x01(\x0e2%.schema.v1alpha1.TelemetryControlTypeR\x04type\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12J\n" +
	"\x0fprovider_config\x18\x03 \x01(\v2\x1f.schema.v1alpha1.ProviderConfigH\x00R\x0eproviderConfig\x12J\n" +
	"\x0fexporter_config\x18\x04 \x01(\v2\x1f.schema.v1alpha1.ExporterConfigH\x00R\x0eexporterConfig\x12J\n" +
	"\x0fsampling_config\x18\x05 \x01(\v2\x1f.schema.v1alpha1.SamplingConfigH\x00R\x0esamplingConfig\x12A\n" +
	"\fdebug_config\x18\x06 \x01(\v2\x1c.schema.v1alpha1.DebugConfigH\x00R\vdebugConfig\x12M\n" +
	"\x10collector_config\x18\a \x01(\v2 .schema.v1alpha1.CollectorConfigH\x00R\x0fcollectorConfigB\t\n" +
	"\apayload\"\xfc\x03\n" +
	"\x0eProviderConfig\x12%\n" +
	"\x0eenable_tracing\x18\x01 \x01(\bR\renableTracing\x12%\n" +
	"\x0eenable_metrics\x18\x02 \x01(\bR\renableMetrics\x12%\n" +
	"\x0eenable_logging\x18\x03 \x01(\bR\renableLogging\x12h\n" +
	"\x13resource_attributes\x18\x04 \x03(\v27.schema.v1alpha1.ProviderConfig.ResourceAttributesEntryR\x12resourceAttributes\x12@\n" +
	"\atracing\x18\x05 \x01(\v2&.schema.v1alpha1.TracingProviderConfigR\atracing\x12@\n" +
	"\ametrics\x18\x06 \x01(\v2&.schema.v1alpha1.MetricsProviderConfigR\ametrics\x12@\n" +
	"\alogging\x18\a \x01(\v2&.schema.v1alpha1.LoggingProviderConfigR\alogging\x1aE\n" +
	"\x17ResourceAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xed\x01\n" +
	"\x15TracingProviderConfig\x12;\n" +
	"\bsampling\x18\x01 \x01(\v2\x1f.schema.v1alpha1.SamplingConfigR\bsampling\x121\n" +
	"\x15max_export_batch_size\x18\x02 \x01(\x05R\x12maxExportBatchSize\x12>\n" +
	"\rbatch_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\fbatchTimeout\x12$\n" +
	"\x0emax_queue_size\x18\x04 \x01(\x05R\fmaxQueueSize\"\xaf\x01\n" +
	"\x15MetricsProviderConfig\x12B\n" +
	"\x0freader_interval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0ereaderInterval\x12)\n" +
	"\x10enable_exemplars\x18\x02 \x01(\bR\x0fenableExemplars\x12'\n" +
	"\x0fmax_cardinality\x18\x03 \x01(\x05R\x0emaxCardinality\"\xb0\x01\n" +
	"\x15LoggingProviderConfig\x121\n" +
	"\x15max_export_batch_size\x18\x01 \x01(\x05R\x12maxExportBatchSize\x12>\n" +
	"\rbatch_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\fbatchTimeout\x12$\n" +
	"\x0emax_queue_size\x18\x03 \x01(\x05R\fmaxQueueSize\"\x90\x03\n" +
	"\x0eExporterConfig\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1d.schema.v1alpha1.ExporterTypeR\x04type\x12#\n" +
	"\rhttp_endpoint\x18\x02 \x01(\tR\fhttpEndpoint\x12#\n" +
	"\rgrpc_endpoint\x18\x03 \x01(\tR\fgrpcEndpoint\x12\x1a\n" +
	"\binsecure\x18\x04 \x01(\bR\binsecure\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12F\n" +
	"\aheaders\x18\x06 \x03(\v2,.schema.v1alpha1.ExporterConfig.HeadersEntryR\aheaders\x12,\n" +
	"\x03tls\x18\a \x01(\v2\x1a.schema.v1alpha1.TLSConfigR\x03tls\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x01\n" +
	"\tTLSConfig\x12\x17\n" +
	"\aca_file\x18\x01 \x01(\tR\x06caFile\x12\x1b\n" +
	"\tcert_file\x18\x02 \x01(\tR\bcertFile\x12\x19\n" +
	"\bkey_file\x18\x03 \x01(\tR\akeyFile\x120\n" +
	"\x14insecure_skip_verify\x18\x04 \x01(\bR\x12insecureSkipVerify\x12\x1f\n" +
	"\vserver_name\x18\x05 \x01(\tR\n" +
	"serverName\"\x9d\x02\n" +
	"\x0eSamplingConfig\x12#\n" +
	"\rdefault_ratio\x18\x01 \x01(\x01R\fdefaultRatio\x12b\n" +
	"\x11service_overrides\x18\x02 \x03(\v25.schema.v1alpha1.SamplingConfig.ServiceOverridesEntryR\x10serviceOverrides\x12=\n" +
	"\bstrategy\x18\x03 \x01(\x0e2!.schema.v1alpha1.SamplingStrategyR\bstrategy\x1aC\n" +
	"\x15ServiceOverridesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x91\x01\n" +
	"\vDebugConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x121\n" +
	"\x05level\x18\x02 \x01(\x0e2\x1b.schema.v1alpha1.DebugLevelR\x05level\x125\n" +
	"\bduration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bduration\"\xf2\x02\n" +
	"\x0fCollectorConfig\x12+\n" +
	"\x11enable_collection\x18\x01 \x01(\bR\x10enableCollection\x121\n" +
	"\x14enable_preprocessing\x18\x02 \x01(\bR\x13enablePreprocessing\x12J\n" +
	"\x13collection_interval\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x12collectionInterval\x12$\n" +
	"\x0emax_batch_size\x18\x04 \x01(\x05R\fmaxBatchSize\x12>\n" +
	"\ffilter_rules\x18\x05 \x03(\v2\x1b.schema.v1alpha1.FilterRuleR\vfilterRules\x12M\n" +
	"\x11aggregation_rules\x18\x06 \x03(\v2 .schema.v1alpha1.AggregationRuleR\x10aggregationRules\"\xd2\x01\n" +
	"\n" +
	"FilterRule\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12<\n" +
	"\vsignal_type\x18\x02 \x01(\x0e2\x1b.schema.v1alpha1.SignalTypeR\n" +
	"signalType\x12;\n" +
	"\bcriteria\x18\x03 \x01(\v2\x1f.schema.v1alpha1.FilterCriteriaR\bcriteria\x125\n" +
	"\x06action\x18\x04 \x01(\x0e2\x1d.schema.v1alpha1.FilterActionR\x06action\"\xb3\x03\n" +
	"\x0eFilterCriteria\x120\n" +
	"\x14service_name_pattern\x18\x01 \x01(\tR\x12serviceNamePattern\x12b\n" +
	"\x11attribute_filters\x18\x02 \x03(\v25.schema.v1alpha1.FilterCriteria.AttributeFiltersEntryR\x10attributeFilters\x12_\n" +
	"\x10resource_filters\x18\x03 \x03(\v24.schema.v1alpha1.FilterCriteria.ResourceFiltersEntryR\x0fresourceFilters\x12!\n" +
	"\fname_pattern\x18\x04 \x01(\tR\vnamePattern\x1aC\n" +
	"\x15AttributeFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14ResourceFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe7\x01\n" +
	"\x0fAggregationRule\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12<\n" +
	"\vsignal_type\x18\x02 \x01(\x0e2\x1b.schema.v1alpha1.SignalTypeR\n" +
	"signalType\x12@\n" +
	"\bcriteria\x18\x03 \x01(\v2$.schema.v1alpha1.AggregationCriteriaR\bcriteria\x12@\n" +
	"\bsettings\x18\x04 \x01(\v2$.schema.v1alpha1.AggregationSettingsR\bsettings\"\xa7\x01\n" +
	"\x13AggregationCriteria\x120\n" +
	"\x14service_name_pattern\x18\x01 \x01(\tR\x12serviceNamePattern\x12.\n" +
	"\x13metric_name_pattern\x18\x02 \x01(\tR\x11metricNamePattern\x12.\n" +
	"\x13group_by_attributes\x18\x03 \x03(\tR\x11groupByAttributes\"\xb0\x01\n" +
	"\x13AggregationSettings\x12:\n" +
	"\vwindow_size\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"windowSize\x124\n" +
	"\x04type\x18\x02 \x01(\x0e2 .schema.v1alpha1.AggregationTypeR\x04type\x12'\n" +
	"\x0fmax_cardinality\x18\x03 \x01(\x05R\x0emaxCardinality\"\xb4\x01\n" +
	"\x0fTelemetryStatus\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12%\n" +
	"\x0econfig_summary\x18\x02 \x01(\tR\rconfigSummary\x12)\n" +
	"\x10active_exporters\x18\x03 \x03(\tR\x0factiveExporters\x125\n" +
	"\x05stats\x18\x04 \x01(\v2\x1f.schema.v1alpha1.TelemetryStatsR\x05stats\"\xf4\x03\n" +
	"\x0eTelemetryStats\x12)\n" +
	"\x10traces_processed\x18\x01 \x01(\x03R\x0ftracesProcessed\x12+\n" +
	"\x11metrics_processed\x18\x02 \x01(\x03R\x10metricsProcessed\x12%\n" +
	"\x0elogs_processed\x18\x03 \x01(\x03R\rlogsProcessed\x12'\n" +
	"\x0ftraces_exported\x18\x04 \x01(\x03R\x0etracesExported\x12)\n" +
	"\x10metrics_exported\x18\x05 \x01(\x03R\x0fmetricsExported\x12#\n" +
	"\rlogs_exported\x18\x06 \x01(\x03R\flogsExported\x12#\n" +
	"\rexport_errors\x18\a \x01(\x03R\fexportErrors\x12+\n" +
	"\x11processing_errors\x18\b \x01(\x03R\x10processingErrors\x12O\n" +
	"\x16avg_processing_latency\x18\t \x01(\v2\x19.google.protobuf.DurationR\x14avgProcessingLatency\x12G\n" +
	"\x12avg_export_latency\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\x10avgExportLatency*\xf5\x01\n" +
	"\x14TelemetryControlType\x12&\n" +
	"\"TELEMETRY_CONTROL_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fTELEMETRY_CONTROL_TYPE_PROVIDER\x10\x01\x12#\n" +
	"\x1fTELEMETRY_CONTROL_TYPE_EXPORTER\x10\x02\x12#\n" +
	"\x1fTELEMETRY_CONTROL_TYPE_SAMPLING\x10\x03\x12 \n" +
	"\x1cTELEMETRY_CONTROL_TYPE_DEBUG\x10\x04\x12$\n" +
	" TELEMETRY_CONTROL_TYPE_COLLECTOR\x10\x05*\x97\x01\n" +
	"\fExporterType\x12\x1d\n" +
	"\x19EXPORTER_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12EXPORTER_TYPE_NOOP\x10\x01\x12\x1b\n" +
	"\x17EXPORTER_TYPE_OTLP_HTTP\x10\x02\x12\x1b\n" +
	"\x17EXPORTER_TYPE_OTLP_GRPC\x10\x03\x12\x16\n" +
	"\x12EXPORTER_TYPE_DUAL\x10\x04*\xc2\x01\n" +
	"\x10SamplingStrategy\x12!\n" +
	"\x1dSAMPLING_STRATEGY_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bSAMPLING_STRATEGY_ALWAYS_ON\x10\x01\x12 \n" +
	"\x1cSAMPLING_STRATEGY_ALWAYS_OFF\x10\x02\x12$\n" +
	" SAMPLING_STRATEGY_TRACE_ID_RATIO\x10\x03\x12\"\n" +
	"\x1eSAMPLING_STRATEGY_PARENT_BASED\x10\x04*\x9a\x01\n" +
	"\n" +
	"DebugLevel\x12\x1b\n" +
	"\x17DEBUG_LEVEL_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11DEBUG_LEVEL_ERROR\x10\x01\x12\x14\n" +
	"\x10DEBUG_LEVEL_WARN\x10\x02\x12\x14\n" +
	"\x10DEBUG_LEVEL_INFO\x10\x03\x12\x15\n" +
	"\x11DEBUG_LEVEL_DEBUG\x10\x04\x12\x15\n" +
	"\x11DEBUG_LEVEL_TRACE\x10\x05*p\n" +
	"\n" +
	"SignalType\x12\x1b\n" +
	"\x17SIGNAL_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12SIGNAL_TYPE_TRACES\x10\x01\x12\x17\n" +
	"\x13SIGNAL_TYPE_METRICS\x10\x02\x12\x14\n" +
	"\x10SIGNAL_TYPE_LOGS\x10\x03*x\n" +
	"\fFilterAction\x12\x1d\n" +
	"\x19FILTER_ACTION_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13FILTER_ACTION_ALLOW\x10\x01\x12\x16\n" +
	"\x12FILTER_ACTION_DROP\x10\x02\x12\x18\n" +
	"\x14FILTER_ACTION_SAMPLE\x10\x03*\xdb\x01\n" +
	"\x0fAggregationType\x12 \n" +
	"\x1cAGGREGATION_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14AGGREGATION_TYPE_SUM\x10\x01\x12\x1c\n" +
	"\x18AGGREGATION_TYPE_AVERAGE\x10\x02\x12\x1a\n" +
	"\x16AGGREGATION_TYPE_COUNT\x10\x03\x12\x18\n" +
	"\x14AGGREGATION_TYPE_MIN\x10\x04\x12\x18\n" +
	"\x14AGGREGATION_TYPE_MAX\x10\x05\x12\x1e\n" +
	"\x1aAGGREGATION_TYPE_HISTOGRAM\x10\x06B\xc1\x01\n" +
	"\x13com.schema.v1alpha1B\x0eTelemetryProtoP\x01Z=github.com/u-bmc/u-bmc/api/gen/schema/v1alpha1;schemav1alpha1\xa2\x02\x03SXX\xaa\x02\x0fSchema.V1alpha1\xca\x02\x0fSchema\\V1alpha1\xe2\x02\x1bSchema\\V1alpha1\\GPBMetadata\xea\x02\x10Schema::V1alpha1b\x06proto3"

var (
	file_schema_v1alpha1_telemetry_proto_rawDescOnce sync.Once
	file_schema_v1alpha1_telemetry_proto_rawDescData []byte
)

func file_schema_v1alpha1_telemetry_proto_rawDescGZIP() []byte {
	file_schema_v1alpha1_telemetry_proto_rawDescOnce.Do(func() {
		file_schema_v1alpha1_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_telemetry_proto_rawDesc), len(file_schema_v1alpha1_telemetry_proto_rawDesc)))
	})
	return file_schema_v1alpha1_telemetry_proto_rawDescData
}

var file_schema_v1alpha1_telemetry_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_schema_v1alpha1_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_schema_v1alpha1_telemetry_proto_goTypes = []any{
	(TelemetryControlType)(0),       // 0: schema.v1alpha1.TelemetryControlType
	(ExporterType)(0),               // 1: schema.v1alpha1.ExporterType
	(SamplingStrategy)(0),           // 2: schema.v1alpha1.SamplingStrategy
	(DebugLevel)(0),                 // 3: schema.v1alpha1.DebugLevel
	(SignalType)(0),                 // 4: schema.v1alpha1.SignalType
	(FilterAction)(0),               // 5: schema.v1alpha1.FilterAction
	(AggregationType)(0),            // 6: schema.v1alpha1.AggregationType
	(*TelemetryControlMessage)(nil), // 7: schema.v1alpha1.TelemetryControlMessage
	(*ProviderConfig)(nil),          // 8: schema.v1alpha1.ProviderConfig
	(*TracingProviderConfig)(nil),   // 9: schema.v1alpha1.TracingProviderConfig
	(*MetricsProviderConfig)(nil),   // 10: schema.v1alpha1.MetricsProviderConfig
	(*LoggingProviderConfig)(nil),   // 11: schema.v1alpha1.LoggingProviderConfig
	(*ExporterConfig)(nil),          // 12: schema.v1alpha1.ExporterConfig
	(*TLSConfig)(nil),               // 13: schema.v1alpha1.TLSConfig
	(*SamplingConfig)(nil),          // 14: schema.v1alpha1.SamplingConfig
	(*DebugConfig)(nil),             // 15: schema.v1alpha1.DebugConfig
	(*CollectorConfig)(nil),         // 16: schema.v1alpha1.CollectorConfig
	(*FilterRule)(nil),              // 17: schema.v1alpha1.FilterRule
	(*FilterCriteria)(nil),          // 18: schema.v1alpha1.FilterCriteria
	(*AggregationRule)(nil),         // 19: schema.v1alpha1.AggregationRule
	(*AggregationCriteria)(nil),     // 20: schema.v1alpha1.AggregationCriteria
	(*AggregationSettings)(nil),     // 21: schema.v1alpha1.AggregationSettings
	(*TelemetryStatus)(nil),         // 22: schema.v1alpha1.TelemetryStatus
	(*TelemetryStats)(nil),          // 23: schema.v1alpha1.TelemetryStats
	nil,                             // 24: schema.v1alpha1.ProviderConfig.ResourceAttributesEntry
	nil,                             // 25: schema.v1alpha1.ExporterConfig.HeadersEntry
	nil,                             // 26: schema.v1alpha1.SamplingConfig.ServiceOverridesEntry
	nil,                             // 27: schema.v1alpha1.FilterCriteria.AttributeFiltersEntry
	nil,                             // 28: schema.v1alpha1.FilterCriteria.ResourceFiltersEntry
	(*durationpb.Duration)(nil),     // 29: google.protobuf.Duration
}
var file_schema_v1alpha1_telemetry_proto_depIdxs = []int32{
	0,  // 0: schema.v1alpha1.TelemetryControlMessage.type:type_name -> schema.v1alpha1.TelemetryControlType
	8,  // 1: schema.v1alpha1.TelemetryControlMessage.provider_config:type_name -> schema.v1alpha1.ProviderConfig
	12, // 2: schema.v1alpha1.TelemetryControlMessage.exporter_config:type_name -> schema.v1alpha1.ExporterConfig
	14, // 3: schema.v1alpha1.TelemetryControlMessage.sampling_config:type_name -> schema.v1alpha1.SamplingConfig
	15, // 4: schema.v1alpha1.TelemetryControlMessage.debug_config:type_name -> schema.v1alpha1.DebugConfig
	16, // 5: schema.v1alpha1.TelemetryControlMessage.collector_config:type_name -> schema.v1alpha1.CollectorConfig
	24, // 6: schema.v1alpha1.ProviderConfig.resource_attributes:type_name -> schema.v1alpha1.ProviderConfig.ResourceAttributesEntry
	9,  // 7: schema.v1alpha1.ProviderConfig.tracing:type_name -> schema.v1alpha1.TracingProviderConfig
	10, // 8: schema.v1alpha1.ProviderConfig.metrics:type_name -> schema.v1alpha1.MetricsProviderConfig
	11, // 9: schema.v1alpha1.ProviderConfig.logging:type_name -> schema.v1alpha1.LoggingProviderConfig
	14, // 10: schema.v1alpha1.TracingProviderConfig.sampling:type_name -> schema.v1alpha1.SamplingConfig
	29, // 11: schema.v1alpha1.TracingProviderConfig.batch_timeout:type_name -> google.protobuf.Duration
	29, // 12: schema.v1alpha1.MetricsProviderConfig.reader_interval:type_name -> google.protobuf.Duration
	29, // 13: schema.v1alpha1.LoggingProviderConfig.batch_timeout:type_name -> google.protobuf.Duration
	1,  // 14: schema.v1alpha1.ExporterConfig.type:type_name -> schema.v1alpha1.ExporterType
	29, // 15: schema.v1alpha1.ExporterConfig.timeout:type_name -> google.protobuf.Duration
	25, // 16: schema.v1alpha1.ExporterConfig.headers:type_name -> schema.v1alpha1.ExporterConfig.HeadersEntry
	13, // 17: schema.v1alpha1.ExporterConfig.tls:type_name -> schema.v1alpha1.TLSConfig
	26, // 18: schema.v1alpha1.SamplingConfig.service_overrides:type_name -> schema.v1alpha1.SamplingConfig.ServiceOverridesEntry
	2,  // 19: schema.v1alpha1.SamplingConfig.strategy:type_name -> schema.v1alpha1.SamplingStrategy
	3,  // 20: schema.v1alpha1.DebugConfig.level:type_name -> schema.v1alpha1.DebugLevel
	29, // 21: schema.v1alpha1.DebugConfig.duration:type_name -> google.protobuf.Duration
	29, // 22: schema.v1alpha1.CollectorConfig.collection_interval:type_name -> google.protobuf.Duration
	17, // 23: schema.v1alpha1.CollectorConfig.filter_rules:type_name -> schema.v1alpha1.FilterRule
	19, // 24: schema.v1alpha1.CollectorConfig.aggregation_rules:type_name -> schema.v1alpha1.AggregationRule
	4,  // 25: schema.v1alpha1.FilterRule.signal_type:type_name -> schema.v1alpha1.SignalType
	18, // 26: schema.v1alpha1.FilterRule.criteria:type_name -> schema.v1alpha1.FilterCriteria
	5,  // 27: schema.v1alpha1.FilterRule.action:type_name -> schema.v1alpha1.FilterAction
	27, // 28: schema.v1alpha1.FilterCriteria.attribute_filters:type_name -> schema.v1alpha1.FilterCriteria.AttributeFiltersEntry
	28, // 29: schema.v1alpha1.FilterCriteria.resource_filters:type_name -> schema.v1alpha1.FilterCriteria.ResourceFiltersEntry
	4,  // 30: schema.v1alpha1.AggregationRule.signal_type:type_name -> schema.v1alpha1.SignalType
	20, // 31: schema.v1alpha1.AggregationRule.criteria:type_name -> schema.v1alpha1.AggregationCriteria
	21, // 32: schema.v1alpha1.AggregationRule.settings:type_name -> schema.v1alpha1.AggregationSettings
	29, // 33: schema.v1alpha1.AggregationSettings.window_size:type_name -> google.protobuf.Duration
	6,  // 34: schema.v1alpha1.AggregationSettings.type:type_name -> schema.v1alpha1.AggregationType
	23, // 35: schema.v1alpha1.TelemetryStatus.stats:type_name -> schema.v1alpha1.TelemetryStats
	29, // 36: schema.v1alpha1.TelemetryStats.avg_processing_latency:type_name -> google.protobuf.Duration
	29, // 37: schema.v1alpha1.TelemetryStats.avg_export_latency:type_name -> google.protobuf.Duration
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_schema_v1alpha1_telemetry_proto_init() }
func file_schema_v1alpha1_telemetry_proto_init() {
	if File_schema_v1alpha1_telemetry_proto != nil {
		return
	}
	file_schema_v1alpha1_telemetry_proto_msgTypes[0].OneofWrappers = []any{
		(*TelemetryControlMessage_ProviderConfig)(nil),
		(*TelemetryControlMessage_ExporterConfig)(nil),
		(*TelemetryControlMessage_SamplingConfig)(nil),
		(*TelemetryControlMessage_DebugConfig)(nil),
		(*TelemetryControlMessage_CollectorConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_telemetry_proto_rawDesc), len(file_schema_v1alpha1_telemetry_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_v1alpha1_telemetry_proto_goTypes,
		DependencyIndexes: file_schema_v1alpha1_telemetry_proto_depIdxs,
		EnumInfos:         file_schema_v1alpha1_telemetry_proto_enumTypes,
		MessageInfos:      file_schema_v1alpha1_telemetry_proto_msgTypes,
	}.Build()
	File_schema_v1alpha1_telemetry_proto = out.File
	file_schema_v1alpha1_telemetry_proto_goTypes = nil
	file_schema_v1alpha1_telemetry_proto_depIdxs = nil
}
