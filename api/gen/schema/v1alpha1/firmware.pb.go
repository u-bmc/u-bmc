// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: schema/v1alpha1/firmware.proto

package schemav1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Firmware struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Version           *string                `protobuf:"bytes,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BuildDate         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=build_date,json=buildDate,proto3,oneof" json:"build_date,omitempty"`
	BuildNumber       *string                `protobuf:"bytes,3,opt,name=build_number,json=buildNumber,proto3,oneof" json:"build_number,omitempty"`
	FirmwareType      *string                `protobuf:"bytes,4,opt,name=firmware_type,json=firmwareType,proto3,oneof" json:"firmware_type,omitempty"`
	Vendor            *string                `protobuf:"bytes,5,opt,name=vendor,proto3,oneof" json:"vendor,omitempty"`
	Components        []*FirmwareComponent   `protobuf:"bytes,6,rep,name=components,proto3" json:"components,omitempty"`
	BackupFirmware    *BackupFirmware        `protobuf:"bytes,7,opt,name=backup_firmware,json=backupFirmware,proto3,oneof" json:"backup_firmware,omitempty"`
	SecureBootEnabled *bool                  `protobuf:"varint,8,opt,name=secure_boot_enabled,json=secureBootEnabled,proto3,oneof" json:"secure_boot_enabled,omitempty"`
	Tpm               *TPM                   `protobuf:"bytes,9,opt,name=tpm,proto3,oneof" json:"tpm,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Firmware) Reset() {
	*x = Firmware{}
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Firmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firmware) ProtoMessage() {}

func (x *Firmware) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firmware.ProtoReflect.Descriptor instead.
func (*Firmware) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_firmware_proto_rawDescGZIP(), []int{0}
}

func (x *Firmware) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Firmware) GetBuildDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildDate
	}
	return nil
}

func (x *Firmware) GetBuildNumber() string {
	if x != nil && x.BuildNumber != nil {
		return *x.BuildNumber
	}
	return ""
}

func (x *Firmware) GetFirmwareType() string {
	if x != nil && x.FirmwareType != nil {
		return *x.FirmwareType
	}
	return ""
}

func (x *Firmware) GetVendor() string {
	if x != nil && x.Vendor != nil {
		return *x.Vendor
	}
	return ""
}

func (x *Firmware) GetComponents() []*FirmwareComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *Firmware) GetBackupFirmware() *BackupFirmware {
	if x != nil {
		return x.BackupFirmware
	}
	return nil
}

func (x *Firmware) GetSecureBootEnabled() bool {
	if x != nil && x.SecureBootEnabled != nil {
		return *x.SecureBootEnabled
	}
	return false
}

func (x *Firmware) GetTpm() *TPM {
	if x != nil {
		return x.Tpm
	}
	return nil
}

type FirmwareComponent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Version       *string                `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BuildDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3,oneof" json:"build_date,omitempty"`
	Status        *string                `protobuf:"bytes,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirmwareComponent) Reset() {
	*x = FirmwareComponent{}
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirmwareComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareComponent) ProtoMessage() {}

func (x *FirmwareComponent) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareComponent.ProtoReflect.Descriptor instead.
func (*FirmwareComponent) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_firmware_proto_rawDescGZIP(), []int{1}
}

func (x *FirmwareComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirmwareComponent) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *FirmwareComponent) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *FirmwareComponent) GetBuildDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildDate
	}
	return nil
}

func (x *FirmwareComponent) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type BackupFirmware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Version       *string                `protobuf:"bytes,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BackupDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=backup_date,json=backupDate,proto3,oneof" json:"backup_date,omitempty"`
	Bootable      *bool                  `protobuf:"varint,4,opt,name=bootable,proto3,oneof" json:"bootable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupFirmware) Reset() {
	*x = BackupFirmware{}
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupFirmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupFirmware) ProtoMessage() {}

func (x *BackupFirmware) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupFirmware.ProtoReflect.Descriptor instead.
func (*BackupFirmware) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_firmware_proto_rawDescGZIP(), []int{2}
}

func (x *BackupFirmware) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *BackupFirmware) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *BackupFirmware) GetBackupDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BackupDate
	}
	return nil
}

func (x *BackupFirmware) GetBootable() bool {
	if x != nil && x.Bootable != nil {
		return *x.Bootable
	}
	return false
}

type TPM struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Present       bool                   `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
	Version       *string                `protobuf:"bytes,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Manufacturer  *string                `protobuf:"bytes,3,opt,name=manufacturer,proto3,oneof" json:"manufacturer,omitempty"`
	Enabled       *bool                  `protobuf:"varint,4,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Activated     *bool                  `protobuf:"varint,5,opt,name=activated,proto3,oneof" json:"activated,omitempty"`
	Owned         *bool                  `protobuf:"varint,6,opt,name=owned,proto3,oneof" json:"owned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TPM) Reset() {
	*x = TPM{}
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TPM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPM) ProtoMessage() {}

func (x *TPM) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_firmware_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPM.ProtoReflect.Descriptor instead.
func (*TPM) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_firmware_proto_rawDescGZIP(), []int{3}
}

func (x *TPM) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *TPM) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *TPM) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *TPM) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *TPM) GetActivated() bool {
	if x != nil && x.Activated != nil {
		return *x.Activated
	}
	return false
}

func (x *TPM) GetOwned() bool {
	if x != nil && x.Owned != nil {
		return *x.Owned
	}
	return false
}

var File_schema_v1alpha1_firmware_proto protoreflect.FileDescriptor

const file_schema_v1alpha1_firmware_proto_rawDesc = "" +
	"\n" +
	"\x1eschema/v1alpha1/firmware.proto\x12\x0fschema.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xca\x04\n" +
	"\bFirmware\x12\x1d\n" +
	"\aversion\x18\x01 \x01(\tH\x00R\aversion\x88\x01\x01\x12>\n" +
	"\n" +
	"build_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\tbuildDate\x88\x01\x01\x12&\n" +
	"\fbuild_number\x18\x03 \x01(\tH\x02R\vbuildNumber\x88\x01\x01\x12(\n" +
	"\rfirmware_type\x18\x04 \x01(\tH\x03R\ffirmwareType\x88\x01\x01\x12\x1b\n" +
	"\x06vendor\x18\x05 \x01(\tH\x04R\x06vendor\x88\x01\x01\x12B\n" +
	"\n" +
	"components\x18\x06 \x03(\v2\".schema.v1alpha1.FirmwareComponentR\n" +
	"components\x12M\n" +
	"\x0fbackup_firmware\x18\a \x01(\v2\x1f.schema.v1alpha1.BackupFirmwareH\x05R\x0ebackupFirmware\x88\x01\x01\x123\n" +
	"\x13secure_boot_enabled\x18\b \x01(\bH\x06R\x11secureBootEnabled\x88\x01\x01\x12+\n" +
	"\x03tpm\x18\t \x01(\v2\x14.schema.v1alpha1.TPMH\aR\x03tpm\x88\x01\x01B\n" +
	"\n" +
	"\b_versionB\r\n" +
	"\v_build_dateB\x0f\n" +
	"\r_build_numberB\x10\n" +
	"\x0e_firmware_typeB\t\n" +
	"\a_vendorB\x12\n" +
	"\x10_backup_firmwareB\x16\n" +
	"\x14_secure_boot_enabledB\x06\n" +
	"\x04_tpm\"\xf4\x01\n" +
	"\x11FirmwareComponent\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\tH\x01R\aversion\x88\x01\x01\x12>\n" +
	"\n" +
	"build_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\tbuildDate\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x05 \x01(\tH\x03R\x06status\x88\x01\x01B\a\n" +
	"\x05_typeB\n" +
	"\n" +
	"\b_versionB\r\n" +
	"\v_build_dateB\t\n" +
	"\a_status\"\xd9\x01\n" +
	"\x0eBackupFirmware\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12\x1d\n" +
	"\aversion\x18\x02 \x01(\tH\x00R\aversion\x88\x01\x01\x12@\n" +
	"\vbackup_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"backupDate\x88\x01\x01\x12\x1f\n" +
	"\bbootable\x18\x04 \x01(\bH\x02R\bbootable\x88\x01\x01B\n" +
	"\n" +
	"\b_versionB\x0e\n" +
	"\f_backup_dateB\v\n" +
	"\t_bootable\"\x85\x02\n" +
	"\x03TPM\x12\x18\n" +
	"\apresent\x18\x01 \x01(\bR\apresent\x12\x1d\n" +
	"\aversion\x18\x02 \x01(\tH\x00R\aversion\x88\x01\x01\x12'\n" +
	"\fmanufacturer\x18\x03 \x01(\tH\x01R\fmanufacturer\x88\x01\x01\x12\x1d\n" +
	"\aenabled\x18\x04 \x01(\bH\x02R\aenabled\x88\x01\x01\x12!\n" +
	"\tactivated\x18\x05 \x01(\bH\x03R\tactivated\x88\x01\x01\x12\x19\n" +
	"\x05owned\x18\x06 \x01(\bH\x04R\x05owned\x88\x01\x01B\n" +
	"\n" +
	"\b_versionB\x0f\n" +
	"\r_manufacturerB\n" +
	"\n" +
	"\b_enabledB\f\n" +
	"\n" +
	"_activatedB\b\n" +
	"\x06_ownedB\xc0\x01\n" +
	"\x13com.schema.v1alpha1B\rFirmwareProtoP\x01Z=github.com/u-bmc/u-bmc/api/gen/schema/v1alpha1;schemav1alpha1\xa2\x02\x03SXX\xaa\x02\x0fSchema.V1alpha1\xca\x02\x0fSchema\\V1alpha1\xe2\x02\x1bSchema\\V1alpha1\\GPBMetadata\xea\x02\x10Schema::V1alpha1b\x06proto3"

var (
	file_schema_v1alpha1_firmware_proto_rawDescOnce sync.Once
	file_schema_v1alpha1_firmware_proto_rawDescData []byte
)

func file_schema_v1alpha1_firmware_proto_rawDescGZIP() []byte {
	file_schema_v1alpha1_firmware_proto_rawDescOnce.Do(func() {
		file_schema_v1alpha1_firmware_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_firmware_proto_rawDesc), len(file_schema_v1alpha1_firmware_proto_rawDesc)))
	})
	return file_schema_v1alpha1_firmware_proto_rawDescData
}

var file_schema_v1alpha1_firmware_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_schema_v1alpha1_firmware_proto_goTypes = []any{
	(*Firmware)(nil),              // 0: schema.v1alpha1.Firmware
	(*FirmwareComponent)(nil),     // 1: schema.v1alpha1.FirmwareComponent
	(*BackupFirmware)(nil),        // 2: schema.v1alpha1.BackupFirmware
	(*TPM)(nil),                   // 3: schema.v1alpha1.TPM
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_schema_v1alpha1_firmware_proto_depIdxs = []int32{
	4, // 0: schema.v1alpha1.Firmware.build_date:type_name -> google.protobuf.Timestamp
	1, // 1: schema.v1alpha1.Firmware.components:type_name -> schema.v1alpha1.FirmwareComponent
	2, // 2: schema.v1alpha1.Firmware.backup_firmware:type_name -> schema.v1alpha1.BackupFirmware
	3, // 3: schema.v1alpha1.Firmware.tpm:type_name -> schema.v1alpha1.TPM
	4, // 4: schema.v1alpha1.FirmwareComponent.build_date:type_name -> google.protobuf.Timestamp
	4, // 5: schema.v1alpha1.BackupFirmware.backup_date:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_schema_v1alpha1_firmware_proto_init() }
func file_schema_v1alpha1_firmware_proto_init() {
	if File_schema_v1alpha1_firmware_proto != nil {
		return
	}
	file_schema_v1alpha1_firmware_proto_msgTypes[0].OneofWrappers = []any{}
	file_schema_v1alpha1_firmware_proto_msgTypes[1].OneofWrappers = []any{}
	file_schema_v1alpha1_firmware_proto_msgTypes[2].OneofWrappers = []any{}
	file_schema_v1alpha1_firmware_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_firmware_proto_rawDesc), len(file_schema_v1alpha1_firmware_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_v1alpha1_firmware_proto_goTypes,
		DependencyIndexes: file_schema_v1alpha1_firmware_proto_depIdxs,
		MessageInfos:      file_schema_v1alpha1_firmware_proto_msgTypes,
	}.Build()
	File_schema_v1alpha1_firmware_proto = out.File
	file_schema_v1alpha1_firmware_proto_goTypes = nil
	file_schema_v1alpha1_firmware_proto_depIdxs = nil
}
