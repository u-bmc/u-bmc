// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: schema/v1alpha1/managementcontroller.proto

package schemav1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManagementControllerType int32

const (
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED        ManagementControllerType = 0
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_BMC                ManagementControllerType = 1
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_SATELLITE          ManagementControllerType = 2
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER ManagementControllerType = 3
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_NODE_CONTROLLER    ManagementControllerType = 4
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_RACK_CONTROLLER    ManagementControllerType = 5
)

// Enum value maps for ManagementControllerType.
var (
	ManagementControllerType_name = map[int32]string{
		0: "MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED",
		1: "MANAGEMENT_CONTROLLER_TYPE_BMC",
		2: "MANAGEMENT_CONTROLLER_TYPE_SATELLITE",
		3: "MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER",
		4: "MANAGEMENT_CONTROLLER_TYPE_NODE_CONTROLLER",
		5: "MANAGEMENT_CONTROLLER_TYPE_RACK_CONTROLLER",
	}
	ManagementControllerType_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED":        0,
		"MANAGEMENT_CONTROLLER_TYPE_BMC":                1,
		"MANAGEMENT_CONTROLLER_TYPE_SATELLITE":          2,
		"MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER": 3,
		"MANAGEMENT_CONTROLLER_TYPE_NODE_CONTROLLER":    4,
		"MANAGEMENT_CONTROLLER_TYPE_RACK_CONTROLLER":    5,
	}
)

func (x ManagementControllerType) Enum() *ManagementControllerType {
	p := new(ManagementControllerType)
	*p = x
	return p
}

func (x ManagementControllerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[0].Descriptor()
}

func (ManagementControllerType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[0]
}

func (x ManagementControllerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerType.Descriptor instead.
func (ManagementControllerType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{0}
}

type ManagementControllerStatus int32

const (
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED ManagementControllerStatus = 0
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_READY       ManagementControllerStatus = 1
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_NOT_READY   ManagementControllerStatus = 2
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_DISABLED    ManagementControllerStatus = 3
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_QUIESCED    ManagementControllerStatus = 4
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_DIAGNOSTIC  ManagementControllerStatus = 5
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_ERROR       ManagementControllerStatus = 6
)

// Enum value maps for ManagementControllerStatus.
var (
	ManagementControllerStatus_name = map[int32]string{
		0: "MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED",
		1: "MANAGEMENT_CONTROLLER_STATUS_READY",
		2: "MANAGEMENT_CONTROLLER_STATUS_NOT_READY",
		3: "MANAGEMENT_CONTROLLER_STATUS_DISABLED",
		4: "MANAGEMENT_CONTROLLER_STATUS_QUIESCED",
		5: "MANAGEMENT_CONTROLLER_STATUS_DIAGNOSTIC",
		6: "MANAGEMENT_CONTROLLER_STATUS_ERROR",
	}
	ManagementControllerStatus_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED": 0,
		"MANAGEMENT_CONTROLLER_STATUS_READY":       1,
		"MANAGEMENT_CONTROLLER_STATUS_NOT_READY":   2,
		"MANAGEMENT_CONTROLLER_STATUS_DISABLED":    3,
		"MANAGEMENT_CONTROLLER_STATUS_QUIESCED":    4,
		"MANAGEMENT_CONTROLLER_STATUS_DIAGNOSTIC":  5,
		"MANAGEMENT_CONTROLLER_STATUS_ERROR":       6,
	}
)

func (x ManagementControllerStatus) Enum() *ManagementControllerStatus {
	p := new(ManagementControllerStatus)
	*p = x
	return p
}

func (x ManagementControllerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[1].Descriptor()
}

func (ManagementControllerStatus) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[1]
}

func (x ManagementControllerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerStatus.Descriptor instead.
func (ManagementControllerStatus) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{1}
}

type ManagementControllerAction int32

const (
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED     ManagementControllerAction = 0
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_ENABLE          ManagementControllerAction = 1
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_DISABLE         ManagementControllerAction = 2
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_REBOOT          ManagementControllerAction = 3
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_WARM_RESET      ManagementControllerAction = 4
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_COLD_RESET      ManagementControllerAction = 5
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_HARD_RESET      ManagementControllerAction = 6
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_FACTORY_RESET   ManagementControllerAction = 7
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_CLEAR_LOGS      ManagementControllerAction = 8
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_BACKUP_CONFIG   ManagementControllerAction = 9
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_RESTORE_CONFIG  ManagementControllerAction = 10
	ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_UPDATE_FIRMWARE ManagementControllerAction = 11
)

// Enum value maps for ManagementControllerAction.
var (
	ManagementControllerAction_name = map[int32]string{
		0:  "MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED",
		1:  "MANAGEMENT_CONTROLLER_ACTION_ENABLE",
		2:  "MANAGEMENT_CONTROLLER_ACTION_DISABLE",
		3:  "MANAGEMENT_CONTROLLER_ACTION_REBOOT",
		4:  "MANAGEMENT_CONTROLLER_ACTION_WARM_RESET",
		5:  "MANAGEMENT_CONTROLLER_ACTION_COLD_RESET",
		6:  "MANAGEMENT_CONTROLLER_ACTION_HARD_RESET",
		7:  "MANAGEMENT_CONTROLLER_ACTION_FACTORY_RESET",
		8:  "MANAGEMENT_CONTROLLER_ACTION_CLEAR_LOGS",
		9:  "MANAGEMENT_CONTROLLER_ACTION_BACKUP_CONFIG",
		10: "MANAGEMENT_CONTROLLER_ACTION_RESTORE_CONFIG",
		11: "MANAGEMENT_CONTROLLER_ACTION_UPDATE_FIRMWARE",
	}
	ManagementControllerAction_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED":     0,
		"MANAGEMENT_CONTROLLER_ACTION_ENABLE":          1,
		"MANAGEMENT_CONTROLLER_ACTION_DISABLE":         2,
		"MANAGEMENT_CONTROLLER_ACTION_REBOOT":          3,
		"MANAGEMENT_CONTROLLER_ACTION_WARM_RESET":      4,
		"MANAGEMENT_CONTROLLER_ACTION_COLD_RESET":      5,
		"MANAGEMENT_CONTROLLER_ACTION_HARD_RESET":      6,
		"MANAGEMENT_CONTROLLER_ACTION_FACTORY_RESET":   7,
		"MANAGEMENT_CONTROLLER_ACTION_CLEAR_LOGS":      8,
		"MANAGEMENT_CONTROLLER_ACTION_BACKUP_CONFIG":   9,
		"MANAGEMENT_CONTROLLER_ACTION_RESTORE_CONFIG":  10,
		"MANAGEMENT_CONTROLLER_ACTION_UPDATE_FIRMWARE": 11,
	}
)

func (x ManagementControllerAction) Enum() *ManagementControllerAction {
	p := new(ManagementControllerAction)
	*p = x
	return p
}

func (x ManagementControllerAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerAction) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[2].Descriptor()
}

func (ManagementControllerAction) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[2]
}

func (x ManagementControllerAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerAction.Descriptor instead.
func (ManagementControllerAction) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{2}
}

type ManagementControllerRebootCause int32

const (
	ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_UNSPECIFIED  ManagementControllerRebootCause = 0
	ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_POWER_BUTTON ManagementControllerRebootCause = 1
	ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_RESET_BUTTON ManagementControllerRebootCause = 2
	ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_WATCHDOG     ManagementControllerRebootCause = 3
	ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_SOFT_RESET   ManagementControllerRebootCause = 4
	ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_OTHER        ManagementControllerRebootCause = 5
)

// Enum value maps for ManagementControllerRebootCause.
var (
	ManagementControllerRebootCause_name = map[int32]string{
		0: "MANAGEMENT_CONTROLLER_REBOOT_CAUSE_UNSPECIFIED",
		1: "MANAGEMENT_CONTROLLER_REBOOT_CAUSE_POWER_BUTTON",
		2: "MANAGEMENT_CONTROLLER_REBOOT_CAUSE_RESET_BUTTON",
		3: "MANAGEMENT_CONTROLLER_REBOOT_CAUSE_WATCHDOG",
		4: "MANAGEMENT_CONTROLLER_REBOOT_CAUSE_SOFT_RESET",
		5: "MANAGEMENT_CONTROLLER_REBOOT_CAUSE_OTHER",
	}
	ManagementControllerRebootCause_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_REBOOT_CAUSE_UNSPECIFIED":  0,
		"MANAGEMENT_CONTROLLER_REBOOT_CAUSE_POWER_BUTTON": 1,
		"MANAGEMENT_CONTROLLER_REBOOT_CAUSE_RESET_BUTTON": 2,
		"MANAGEMENT_CONTROLLER_REBOOT_CAUSE_WATCHDOG":     3,
		"MANAGEMENT_CONTROLLER_REBOOT_CAUSE_SOFT_RESET":   4,
		"MANAGEMENT_CONTROLLER_REBOOT_CAUSE_OTHER":        5,
	}
)

func (x ManagementControllerRebootCause) Enum() *ManagementControllerRebootCause {
	p := new(ManagementControllerRebootCause)
	*p = x
	return p
}

func (x ManagementControllerRebootCause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerRebootCause) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[3].Descriptor()
}

func (ManagementControllerRebootCause) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[3]
}

func (x ManagementControllerRebootCause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerRebootCause.Descriptor instead.
func (ManagementControllerRebootCause) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{3}
}

type ManagementControllerRole int32

const (
	ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED ManagementControllerRole = 0
	ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_PRIMARY     ManagementControllerRole = 1
	ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_BACKUP      ManagementControllerRole = 2
	ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_STANDBY     ManagementControllerRole = 3
)

// Enum value maps for ManagementControllerRole.
var (
	ManagementControllerRole_name = map[int32]string{
		0: "MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED",
		1: "MANAGEMENT_CONTROLLER_ROLE_PRIMARY",
		2: "MANAGEMENT_CONTROLLER_ROLE_BACKUP",
		3: "MANAGEMENT_CONTROLLER_ROLE_STANDBY",
	}
	ManagementControllerRole_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED": 0,
		"MANAGEMENT_CONTROLLER_ROLE_PRIMARY":     1,
		"MANAGEMENT_CONTROLLER_ROLE_BACKUP":      2,
		"MANAGEMENT_CONTROLLER_ROLE_STANDBY":     3,
	}
)

func (x ManagementControllerRole) Enum() *ManagementControllerRole {
	p := new(ManagementControllerRole)
	*p = x
	return p
}

func (x ManagementControllerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[4].Descriptor()
}

func (ManagementControllerRole) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[4]
}

func (x ManagementControllerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerRole.Descriptor instead.
func (ManagementControllerRole) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{4}
}

type MemoryType int32

const (
	MemoryType_MEMORY_TYPE_UNSPECIFIED MemoryType = 0
	MemoryType_MEMORY_TYPE_DDR2        MemoryType = 1
	MemoryType_MEMORY_TYPE_DDR3        MemoryType = 2
	MemoryType_MEMORY_TYPE_DDR4        MemoryType = 3
	MemoryType_MEMORY_TYPE_DDR5        MemoryType = 4
	MemoryType_MEMORY_TYPE_LPDDR2      MemoryType = 5
	MemoryType_MEMORY_TYPE_LPDDR3      MemoryType = 6
	MemoryType_MEMORY_TYPE_LPDDR4      MemoryType = 7
	MemoryType_MEMORY_TYPE_LPDDR5      MemoryType = 8
)

// Enum value maps for MemoryType.
var (
	MemoryType_name = map[int32]string{
		0: "MEMORY_TYPE_UNSPECIFIED",
		1: "MEMORY_TYPE_DDR2",
		2: "MEMORY_TYPE_DDR3",
		3: "MEMORY_TYPE_DDR4",
		4: "MEMORY_TYPE_DDR5",
		5: "MEMORY_TYPE_LPDDR2",
		6: "MEMORY_TYPE_LPDDR3",
		7: "MEMORY_TYPE_LPDDR4",
		8: "MEMORY_TYPE_LPDDR5",
	}
	MemoryType_value = map[string]int32{
		"MEMORY_TYPE_UNSPECIFIED": 0,
		"MEMORY_TYPE_DDR2":        1,
		"MEMORY_TYPE_DDR3":        2,
		"MEMORY_TYPE_DDR4":        3,
		"MEMORY_TYPE_DDR5":        4,
		"MEMORY_TYPE_LPDDR2":      5,
		"MEMORY_TYPE_LPDDR3":      6,
		"MEMORY_TYPE_LPDDR4":      7,
		"MEMORY_TYPE_LPDDR5":      8,
	}
)

func (x MemoryType) Enum() *MemoryType {
	p := new(MemoryType)
	*p = x
	return p
}

func (x MemoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[5].Descriptor()
}

func (MemoryType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[5]
}

func (x MemoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemoryType.Descriptor instead.
func (MemoryType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{5}
}

type StorageType int32

const (
	StorageType_STORAGE_TYPE_UNSPECIFIED StorageType = 0
	StorageType_STORAGE_TYPE_EMMC        StorageType = 1
	StorageType_STORAGE_TYPE_SSD         StorageType = 2
	StorageType_STORAGE_TYPE_FLASH       StorageType = 3
)

// Enum value maps for StorageType.
var (
	StorageType_name = map[int32]string{
		0: "STORAGE_TYPE_UNSPECIFIED",
		1: "STORAGE_TYPE_EMMC",
		2: "STORAGE_TYPE_SSD",
		3: "STORAGE_TYPE_FLASH",
	}
	StorageType_value = map[string]int32{
		"STORAGE_TYPE_UNSPECIFIED": 0,
		"STORAGE_TYPE_EMMC":        1,
		"STORAGE_TYPE_SSD":         2,
		"STORAGE_TYPE_FLASH":       3,
	}
)

func (x StorageType) Enum() *StorageType {
	p := new(StorageType)
	*p = x
	return p
}

func (x StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_managementcontroller_proto_enumTypes[6].Descriptor()
}

func (StorageType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_managementcontroller_proto_enumTypes[6]
}

func (x StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageType.Descriptor instead.
func (StorageType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{6}
}

type ManagementController struct {
	state           protoimpl.MessageState          `protogen:"open.v1"`
	Name            string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Asset           *AssetInfo                      `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Description     *string                         `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Type            *ManagementControllerType       `protobuf:"varint,4,opt,name=type,proto3,enum=schema.v1alpha1.ManagementControllerType,oneof" json:"type,omitempty"`
	Status          *ManagementControllerStatus     `protobuf:"varint,5,opt,name=status,proto3,enum=schema.v1alpha1.ManagementControllerStatus,oneof" json:"status,omitempty"`
	RequestedAction *ManagementControllerAction     `protobuf:"varint,6,opt,name=requested_action,json=requestedAction,proto3,enum=schema.v1alpha1.ManagementControllerAction,oneof" json:"requested_action,omitempty"`
	Location        *Location                       `protobuf:"bytes,7,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Hardware        *ManagementControllerHardware   `protobuf:"bytes,8,opt,name=hardware,proto3,oneof" json:"hardware,omitempty"`
	Firmware        *Firmware                       `protobuf:"bytes,9,opt,name=firmware,proto3,oneof" json:"firmware,omitempty"`
	Redundancy      *ManagementControllerRedundancy `protobuf:"bytes,10,opt,name=redundancy,proto3,oneof" json:"redundancy,omitempty"`
	LastReboot      *ManagementControllerRebootInfo `protobuf:"bytes,11,opt,name=last_reboot,json=lastReboot,proto3,oneof" json:"last_reboot,omitempty"`
	UpdatedAt       *timestamppb.Timestamp          `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Metadata        map[string]string               `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ManagementController) Reset() {
	*x = ManagementController{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementController) ProtoMessage() {}

func (x *ManagementController) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementController.ProtoReflect.Descriptor instead.
func (*ManagementController) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{0}
}

func (x *ManagementController) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ManagementController) GetAsset() *AssetInfo {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *ManagementController) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ManagementController) GetType() ManagementControllerType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED
}

func (x *ManagementController) GetStatus() ManagementControllerStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

func (x *ManagementController) GetRequestedAction() ManagementControllerAction {
	if x != nil && x.RequestedAction != nil {
		return *x.RequestedAction
	}
	return ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED
}

func (x *ManagementController) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ManagementController) GetHardware() *ManagementControllerHardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *ManagementController) GetFirmware() *Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

func (x *ManagementController) GetRedundancy() *ManagementControllerRedundancy {
	if x != nil {
		return x.Redundancy
	}
	return nil
}

func (x *ManagementController) GetLastReboot() *ManagementControllerRebootInfo {
	if x != nil {
		return x.LastReboot
	}
	return nil
}

func (x *ManagementController) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ManagementController) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ManagementControllerHardware struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Cpu           *ManagementControllerCPU     `protobuf:"bytes,1,opt,name=cpu,proto3,oneof" json:"cpu,omitempty"`
	Memory        *ManagementControllerMemory  `protobuf:"bytes,2,opt,name=memory,proto3,oneof" json:"memory,omitempty"`
	Storage       *ManagementControllerStorage `protobuf:"bytes,3,opt,name=storage,proto3,oneof" json:"storage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagementControllerHardware) Reset() {
	*x = ManagementControllerHardware{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerHardware) ProtoMessage() {}

func (x *ManagementControllerHardware) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerHardware.ProtoReflect.Descriptor instead.
func (*ManagementControllerHardware) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{1}
}

func (x *ManagementControllerHardware) GetCpu() *ManagementControllerCPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ManagementControllerHardware) GetMemory() *ManagementControllerMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ManagementControllerHardware) GetStorage() *ManagementControllerStorage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type ManagementControllerCPU struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Model           *string                `protobuf:"bytes,1,opt,name=model,proto3,oneof" json:"model,omitempty"`
	Manufacturer    *string                `protobuf:"bytes,2,opt,name=manufacturer,proto3,oneof" json:"manufacturer,omitempty"`
	Cores           *uint32                `protobuf:"varint,3,opt,name=cores,proto3,oneof" json:"cores,omitempty"`
	MaxFrequencyMhz *uint32                `protobuf:"varint,4,opt,name=max_frequency_mhz,json=maxFrequencyMhz,proto3,oneof" json:"max_frequency_mhz,omitempty"`
	Architecture    *string                `protobuf:"bytes,5,opt,name=architecture,proto3,oneof" json:"architecture,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ManagementControllerCPU) Reset() {
	*x = ManagementControllerCPU{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerCPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerCPU) ProtoMessage() {}

func (x *ManagementControllerCPU) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerCPU.ProtoReflect.Descriptor instead.
func (*ManagementControllerCPU) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{2}
}

func (x *ManagementControllerCPU) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *ManagementControllerCPU) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *ManagementControllerCPU) GetCores() uint32 {
	if x != nil && x.Cores != nil {
		return *x.Cores
	}
	return 0
}

func (x *ManagementControllerCPU) GetMaxFrequencyMhz() uint32 {
	if x != nil && x.MaxFrequencyMhz != nil {
		return *x.MaxFrequencyMhz
	}
	return 0
}

func (x *ManagementControllerCPU) GetArchitecture() string {
	if x != nil && x.Architecture != nil {
		return *x.Architecture
	}
	return ""
}

type ManagementControllerMemory struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MemoryType      *MemoryType            `protobuf:"varint,1,opt,name=memory_type,json=memoryType,proto3,enum=schema.v1alpha1.MemoryType,oneof" json:"memory_type,omitempty"`
	Capacity        *uint64                `protobuf:"varint,2,opt,name=capacity,proto3,oneof" json:"capacity,omitempty"`
	MaxFrequencyMhz *uint32                `protobuf:"varint,3,opt,name=max_frequency_mhz,json=maxFrequencyMhz,proto3,oneof" json:"max_frequency_mhz,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ManagementControllerMemory) Reset() {
	*x = ManagementControllerMemory{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerMemory) ProtoMessage() {}

func (x *ManagementControllerMemory) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerMemory.ProtoReflect.Descriptor instead.
func (*ManagementControllerMemory) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{3}
}

func (x *ManagementControllerMemory) GetMemoryType() MemoryType {
	if x != nil && x.MemoryType != nil {
		return *x.MemoryType
	}
	return MemoryType_MEMORY_TYPE_UNSPECIFIED
}

func (x *ManagementControllerMemory) GetCapacity() uint64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *ManagementControllerMemory) GetMaxFrequencyMhz() uint32 {
	if x != nil && x.MaxFrequencyMhz != nil {
		return *x.MaxFrequencyMhz
	}
	return 0
}

type ManagementControllerStorage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StorageType   *StorageType           `protobuf:"varint,1,opt,name=storage_type,json=storageType,proto3,enum=schema.v1alpha1.StorageType,oneof" json:"storage_type,omitempty"`
	Capacity      *uint64                `protobuf:"varint,2,opt,name=capacity,proto3,oneof" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagementControllerStorage) Reset() {
	*x = ManagementControllerStorage{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerStorage) ProtoMessage() {}

func (x *ManagementControllerStorage) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerStorage.ProtoReflect.Descriptor instead.
func (*ManagementControllerStorage) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{4}
}

func (x *ManagementControllerStorage) GetStorageType() StorageType {
	if x != nil && x.StorageType != nil {
		return *x.StorageType
	}
	return StorageType_STORAGE_TYPE_UNSPECIFIED
}

func (x *ManagementControllerStorage) GetCapacity() uint64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

type ManagementControllerRedundancy struct {
	state                     protoimpl.MessageState    `protogen:"open.v1"`
	RedundancyEnabled         bool                      `protobuf:"varint,1,opt,name=redundancy_enabled,json=redundancyEnabled,proto3" json:"redundancy_enabled,omitempty"`
	Role                      *ManagementControllerRole `protobuf:"varint,2,opt,name=role,proto3,enum=schema.v1alpha1.ManagementControllerRole,oneof" json:"role,omitempty"`
	DisableRedundancyOverride *bool                     `protobuf:"varint,3,opt,name=disable_redundancy_override,json=disableRedundancyOverride,proto3,oneof" json:"disable_redundancy_override,omitempty"`
	FailoversPaused           *bool                     `protobuf:"varint,4,opt,name=failovers_paused,json=failoversPaused,proto3,oneof" json:"failovers_paused,omitempty"`
	RedundancyMode            *string                   `protobuf:"bytes,5,opt,name=redundancy_mode,json=redundancyMode,proto3,oneof" json:"redundancy_mode,omitempty"`
	PartnerControllers        []string                  `protobuf:"bytes,6,rep,name=partner_controllers,json=partnerControllers,proto3" json:"partner_controllers,omitempty"`
	FailoverStatus            *string                   `protobuf:"bytes,7,opt,name=failover_status,json=failoverStatus,proto3,oneof" json:"failover_status,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ManagementControllerRedundancy) Reset() {
	*x = ManagementControllerRedundancy{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerRedundancy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerRedundancy) ProtoMessage() {}

func (x *ManagementControllerRedundancy) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerRedundancy.ProtoReflect.Descriptor instead.
func (*ManagementControllerRedundancy) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{5}
}

func (x *ManagementControllerRedundancy) GetRedundancyEnabled() bool {
	if x != nil {
		return x.RedundancyEnabled
	}
	return false
}

func (x *ManagementControllerRedundancy) GetRole() ManagementControllerRole {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED
}

func (x *ManagementControllerRedundancy) GetDisableRedundancyOverride() bool {
	if x != nil && x.DisableRedundancyOverride != nil {
		return *x.DisableRedundancyOverride
	}
	return false
}

func (x *ManagementControllerRedundancy) GetFailoversPaused() bool {
	if x != nil && x.FailoversPaused != nil {
		return *x.FailoversPaused
	}
	return false
}

func (x *ManagementControllerRedundancy) GetRedundancyMode() string {
	if x != nil && x.RedundancyMode != nil {
		return *x.RedundancyMode
	}
	return ""
}

func (x *ManagementControllerRedundancy) GetPartnerControllers() []string {
	if x != nil {
		return x.PartnerControllers
	}
	return nil
}

func (x *ManagementControllerRedundancy) GetFailoverStatus() string {
	if x != nil && x.FailoverStatus != nil {
		return *x.FailoverStatus
	}
	return ""
}

type ManagementControllerRebootInfo struct {
	state          protoimpl.MessageState           `protogen:"open.v1"`
	LastRebootTime *timestamppb.Timestamp           `protobuf:"bytes,1,opt,name=last_reboot_time,json=lastRebootTime,proto3,oneof" json:"last_reboot_time,omitempty"`
	RebootCause    *ManagementControllerRebootCause `protobuf:"varint,2,opt,name=reboot_cause,json=rebootCause,proto3,enum=schema.v1alpha1.ManagementControllerRebootCause,oneof" json:"reboot_cause,omitempty"`
	RebootCount    *uint32                          `protobuf:"varint,3,opt,name=reboot_count,json=rebootCount,proto3,oneof" json:"reboot_count,omitempty"`
	Uptime         *durationpb.Duration             `protobuf:"bytes,4,opt,name=uptime,proto3,oneof" json:"uptime,omitempty"`
	BootTime       *durationpb.Duration             `protobuf:"bytes,5,opt,name=boot_time,json=bootTime,proto3,oneof" json:"boot_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ManagementControllerRebootInfo) Reset() {
	*x = ManagementControllerRebootInfo{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerRebootInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerRebootInfo) ProtoMessage() {}

func (x *ManagementControllerRebootInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerRebootInfo.ProtoReflect.Descriptor instead.
func (*ManagementControllerRebootInfo) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{6}
}

func (x *ManagementControllerRebootInfo) GetLastRebootTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRebootTime
	}
	return nil
}

func (x *ManagementControllerRebootInfo) GetRebootCause() ManagementControllerRebootCause {
	if x != nil && x.RebootCause != nil {
		return *x.RebootCause
	}
	return ManagementControllerRebootCause_MANAGEMENT_CONTROLLER_REBOOT_CAUSE_UNSPECIFIED
}

func (x *ManagementControllerRebootInfo) GetRebootCount() uint32 {
	if x != nil && x.RebootCount != nil {
		return *x.RebootCount
	}
	return 0
}

func (x *ManagementControllerRebootInfo) GetUptime() *durationpb.Duration {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *ManagementControllerRebootInfo) GetBootTime() *durationpb.Duration {
	if x != nil {
		return x.BootTime
	}
	return nil
}

type ManagementControllerStateChange struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	ControllerName string                     `protobuf:"bytes,1,opt,name=controller_name,json=controllerName,proto3" json:"controller_name,omitempty"`
	PreviousStatus ManagementControllerStatus `protobuf:"varint,2,opt,name=previous_status,json=previousStatus,proto3,enum=schema.v1alpha1.ManagementControllerStatus" json:"previous_status,omitempty"`
	CurrentStatus  ManagementControllerStatus `protobuf:"varint,3,opt,name=current_status,json=currentStatus,proto3,enum=schema.v1alpha1.ManagementControllerStatus" json:"current_status,omitempty"`
	Cause          ManagementControllerAction `protobuf:"varint,4,opt,name=cause,proto3,enum=schema.v1alpha1.ManagementControllerAction" json:"cause,omitempty"`
	ChangedAt      *timestamppb.Timestamp     `protobuf:"bytes,5,opt,name=changed_at,json=changedAt,proto3" json:"changed_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ManagementControllerStateChange) Reset() {
	*x = ManagementControllerStateChange{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementControllerStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementControllerStateChange) ProtoMessage() {}

func (x *ManagementControllerStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementControllerStateChange.ProtoReflect.Descriptor instead.
func (*ManagementControllerStateChange) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{7}
}

func (x *ManagementControllerStateChange) GetControllerName() string {
	if x != nil {
		return x.ControllerName
	}
	return ""
}

func (x *ManagementControllerStateChange) GetPreviousStatus() ManagementControllerStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

func (x *ManagementControllerStateChange) GetCurrentStatus() ManagementControllerStatus {
	if x != nil {
		return x.CurrentStatus
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

func (x *ManagementControllerStateChange) GetCause() ManagementControllerAction {
	if x != nil {
		return x.Cause
	}
	return ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED
}

func (x *ManagementControllerStateChange) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

type GetManagementControllerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*GetManagementControllerRequest_Name
	//	*GetManagementControllerRequest_Type
	//	*GetManagementControllerRequest_Status
	//	*GetManagementControllerRequest_Location
	//	*GetManagementControllerRequest_Role
	Identifier    isGetManagementControllerRequest_Identifier `protobuf_oneof:"identifier"`
	FieldMask     *fieldmaskpb.FieldMask                      `protobuf:"bytes,6,opt,name=field_mask,json=fieldMask,proto3,oneof" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManagementControllerRequest) Reset() {
	*x = GetManagementControllerRequest{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManagementControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManagementControllerRequest) ProtoMessage() {}

func (x *GetManagementControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManagementControllerRequest.ProtoReflect.Descriptor instead.
func (*GetManagementControllerRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{8}
}

func (x *GetManagementControllerRequest) GetIdentifier() isGetManagementControllerRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GetManagementControllerRequest) GetName() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetManagementControllerRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *GetManagementControllerRequest) GetType() ManagementControllerType {
	if x != nil {
		if x, ok := x.Identifier.(*GetManagementControllerRequest_Type); ok {
			return x.Type
		}
	}
	return ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED
}

func (x *GetManagementControllerRequest) GetStatus() ManagementControllerStatus {
	if x != nil {
		if x, ok := x.Identifier.(*GetManagementControllerRequest_Status); ok {
			return x.Status
		}
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

func (x *GetManagementControllerRequest) GetLocation() *Location {
	if x != nil {
		if x, ok := x.Identifier.(*GetManagementControllerRequest_Location); ok {
			return x.Location
		}
	}
	return nil
}

func (x *GetManagementControllerRequest) GetRole() ManagementControllerRole {
	if x != nil {
		if x, ok := x.Identifier.(*GetManagementControllerRequest_Role); ok {
			return x.Role
		}
	}
	return ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED
}

func (x *GetManagementControllerRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type isGetManagementControllerRequest_Identifier interface {
	isGetManagementControllerRequest_Identifier()
}

type GetManagementControllerRequest_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type GetManagementControllerRequest_Type struct {
	Type ManagementControllerType `protobuf:"varint,2,opt,name=type,proto3,enum=schema.v1alpha1.ManagementControllerType,oneof"`
}

type GetManagementControllerRequest_Status struct {
	Status ManagementControllerStatus `protobuf:"varint,3,opt,name=status,proto3,enum=schema.v1alpha1.ManagementControllerStatus,oneof"`
}

type GetManagementControllerRequest_Location struct {
	Location *Location `protobuf:"bytes,4,opt,name=location,proto3,oneof"`
}

type GetManagementControllerRequest_Role struct {
	Role ManagementControllerRole `protobuf:"varint,5,opt,name=role,proto3,enum=schema.v1alpha1.ManagementControllerRole,oneof"`
}

func (*GetManagementControllerRequest_Name) isGetManagementControllerRequest_Identifier() {}

func (*GetManagementControllerRequest_Type) isGetManagementControllerRequest_Identifier() {}

func (*GetManagementControllerRequest_Status) isGetManagementControllerRequest_Identifier() {}

func (*GetManagementControllerRequest_Location) isGetManagementControllerRequest_Identifier() {}

func (*GetManagementControllerRequest_Role) isGetManagementControllerRequest_Identifier() {}

type GetManagementControllerResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Controllers   []*ManagementController `protobuf:"bytes,1,rep,name=controllers,proto3" json:"controllers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManagementControllerResponse) Reset() {
	*x = GetManagementControllerResponse{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManagementControllerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManagementControllerResponse) ProtoMessage() {}

func (x *GetManagementControllerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManagementControllerResponse.ProtoReflect.Descriptor instead.
func (*GetManagementControllerResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{9}
}

func (x *GetManagementControllerResponse) GetControllers() []*ManagementController {
	if x != nil {
		return x.Controllers
	}
	return nil
}

type ListManagementControllersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*ListManagementControllersRequest_Type
	//	*ListManagementControllersRequest_Status
	//	*ListManagementControllersRequest_Location
	//	*ListManagementControllersRequest_Role
	Identifier    isListManagementControllersRequest_Identifier `protobuf_oneof:"identifier"`
	FieldMask     *fieldmaskpb.FieldMask                        `protobuf:"bytes,5,opt,name=field_mask,json=fieldMask,proto3,oneof" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagementControllersRequest) Reset() {
	*x = ListManagementControllersRequest{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagementControllersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagementControllersRequest) ProtoMessage() {}

func (x *ListManagementControllersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagementControllersRequest.ProtoReflect.Descriptor instead.
func (*ListManagementControllersRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{10}
}

func (x *ListManagementControllersRequest) GetIdentifier() isListManagementControllersRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ListManagementControllersRequest) GetType() ManagementControllerType {
	if x != nil {
		if x, ok := x.Identifier.(*ListManagementControllersRequest_Type); ok {
			return x.Type
		}
	}
	return ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED
}

func (x *ListManagementControllersRequest) GetStatus() ManagementControllerStatus {
	if x != nil {
		if x, ok := x.Identifier.(*ListManagementControllersRequest_Status); ok {
			return x.Status
		}
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

func (x *ListManagementControllersRequest) GetLocation() *Location {
	if x != nil {
		if x, ok := x.Identifier.(*ListManagementControllersRequest_Location); ok {
			return x.Location
		}
	}
	return nil
}

func (x *ListManagementControllersRequest) GetRole() ManagementControllerRole {
	if x != nil {
		if x, ok := x.Identifier.(*ListManagementControllersRequest_Role); ok {
			return x.Role
		}
	}
	return ManagementControllerRole_MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED
}

func (x *ListManagementControllersRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type isListManagementControllersRequest_Identifier interface {
	isListManagementControllersRequest_Identifier()
}

type ListManagementControllersRequest_Type struct {
	Type ManagementControllerType `protobuf:"varint,1,opt,name=type,proto3,enum=schema.v1alpha1.ManagementControllerType,oneof"`
}

type ListManagementControllersRequest_Status struct {
	Status ManagementControllerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=schema.v1alpha1.ManagementControllerStatus,oneof"`
}

type ListManagementControllersRequest_Location struct {
	Location *Location `protobuf:"bytes,3,opt,name=location,proto3,oneof"`
}

type ListManagementControllersRequest_Role struct {
	Role ManagementControllerRole `protobuf:"varint,4,opt,name=role,proto3,enum=schema.v1alpha1.ManagementControllerRole,oneof"`
}

func (*ListManagementControllersRequest_Type) isListManagementControllersRequest_Identifier() {}

func (*ListManagementControllersRequest_Status) isListManagementControllersRequest_Identifier() {}

func (*ListManagementControllersRequest_Location) isListManagementControllersRequest_Identifier() {}

func (*ListManagementControllersRequest_Role) isListManagementControllersRequest_Identifier() {}

type ListManagementControllersResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Controllers   []*ManagementController `protobuf:"bytes,1,rep,name=controllers,proto3" json:"controllers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagementControllersResponse) Reset() {
	*x = ListManagementControllersResponse{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagementControllersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagementControllersResponse) ProtoMessage() {}

func (x *ListManagementControllersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagementControllersResponse.ProtoReflect.Descriptor instead.
func (*ListManagementControllersResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{11}
}

func (x *ListManagementControllersResponse) GetControllers() []*ManagementController {
	if x != nil {
		return x.Controllers
	}
	return nil
}

type UpdateManagementControllerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ControllerName string                 `protobuf:"bytes,1,opt,name=controller_name,json=controllerName,proto3" json:"controller_name,omitempty"`
	Controller     *ManagementController  `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	FieldMask      *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateManagementControllerRequest) Reset() {
	*x = UpdateManagementControllerRequest{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManagementControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagementControllerRequest) ProtoMessage() {}

func (x *UpdateManagementControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagementControllerRequest.ProtoReflect.Descriptor instead.
func (*UpdateManagementControllerRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateManagementControllerRequest) GetControllerName() string {
	if x != nil {
		return x.ControllerName
	}
	return ""
}

func (x *UpdateManagementControllerRequest) GetController() *ManagementController {
	if x != nil {
		return x.Controller
	}
	return nil
}

func (x *UpdateManagementControllerRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type UpdateManagementControllerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Controller    *ManagementController  `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateManagementControllerResponse) Reset() {
	*x = UpdateManagementControllerResponse{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManagementControllerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagementControllerResponse) ProtoMessage() {}

func (x *UpdateManagementControllerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagementControllerResponse.ProtoReflect.Descriptor instead.
func (*UpdateManagementControllerResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateManagementControllerResponse) GetController() *ManagementController {
	if x != nil {
		return x.Controller
	}
	return nil
}

type ChangeManagementControllerStateRequest struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	ControllerName string                     `protobuf:"bytes,1,opt,name=controller_name,json=controllerName,proto3" json:"controller_name,omitempty"`
	Action         ManagementControllerAction `protobuf:"varint,2,opt,name=action,proto3,enum=schema.v1alpha1.ManagementControllerAction" json:"action,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChangeManagementControllerStateRequest) Reset() {
	*x = ChangeManagementControllerStateRequest{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeManagementControllerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeManagementControllerStateRequest) ProtoMessage() {}

func (x *ChangeManagementControllerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeManagementControllerStateRequest.ProtoReflect.Descriptor instead.
func (*ChangeManagementControllerStateRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeManagementControllerStateRequest) GetControllerName() string {
	if x != nil {
		return x.ControllerName
	}
	return ""
}

func (x *ChangeManagementControllerStateRequest) GetAction() ManagementControllerAction {
	if x != nil {
		return x.Action
	}
	return ManagementControllerAction_MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED
}

type ChangeManagementControllerStateResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	CurrentStatus ManagementControllerStatus `protobuf:"varint,1,opt,name=current_status,json=currentStatus,proto3,enum=schema.v1alpha1.ManagementControllerStatus" json:"current_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeManagementControllerStateResponse) Reset() {
	*x = ChangeManagementControllerStateResponse{}
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeManagementControllerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeManagementControllerStateResponse) ProtoMessage() {}

func (x *ChangeManagementControllerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_managementcontroller_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeManagementControllerStateResponse.ProtoReflect.Descriptor instead.
func (*ChangeManagementControllerStateResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeManagementControllerStateResponse) GetCurrentStatus() ManagementControllerStatus {
	if x != nil {
		return x.CurrentStatus
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

var File_schema_v1alpha1_managementcontroller_proto protoreflect.FileDescriptor

const file_schema_v1alpha1_managementcontroller_proto_rawDesc = "" +
	"\n" +
	"*schema/v1alpha1/managementcontroller.proto\x12\x0fschema.v1alpha1\x1a\x1bbuf/validate/validate.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bschema/v1alpha1/asset.proto\x1a\x1eschema/v1alpha1/firmware.proto\x1a\x1eschema/v1alpha1/location.proto\"\xe6\b\n" +
	"\x14ManagementController\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x120\n" +
	"\x05asset\x18\x02 \x01(\v2\x1a.schema.v1alpha1.AssetInfoR\x05asset\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01\x12L\n" +
	"\x04type\x18\x04 \x01(\x0e2).schema.v1alpha1.ManagementControllerTypeB\b\xbaH\x05\x82\x01\x02\x10\x01H\x01R\x04type\x88\x01\x01\x12R\n" +
	"\x06status\x18\x05 \x01(\x0e2+.schema.v1alpha1.ManagementControllerStatusB\b\xbaH\x05\x82\x01\x02\x10\x01H\x02R\x06status\x88\x01\x01\x12e\n" +
	"\x10requested_action\x18\x06 \x01(\x0e2+.schema.v1alpha1.ManagementControllerActionB\b\xbaH\x05\x82\x01\x02\x10\x01H\x03R\x0frequestedAction\x88\x01\x01\x12:\n" +
	"\blocation\x18\a \x01(\v2\x19.schema.v1alpha1.LocationH\x04R\blocation\x88\x01\x01\x12N\n" +
	"\bhardware\x18\b \x01(\v2-.schema.v1alpha1.ManagementControllerHardwareH\x05R\bhardware\x88\x01\x01\x12:\n" +
	"\bfirmware\x18\t \x01(\v2\x19.schema.v1alpha1.FirmwareH\x06R\bfirmware\x88\x01\x01\x12T\n" +
	"\n" +
	"redundancy\x18\n" +
	" \x01(\v2/.schema.v1alpha1.ManagementControllerRedundancyH\aR\n" +
	"redundancy\x88\x01\x01\x12U\n" +
	"\vlast_reboot\x18\v \x01(\v2/.schema.v1alpha1.ManagementControllerRebootInfoH\bR\n" +
	"lastReboot\x88\x01\x01\x12>\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampH\tR\tupdatedAt\x88\x01\x01\x12O\n" +
	"\bmetadata\x18\r \x03(\v23.schema.v1alpha1.ManagementController.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_descriptionB\a\n" +
	"\x05_typeB\t\n" +
	"\a_statusB\x13\n" +
	"\x11_requested_actionB\v\n" +
	"\t_locationB\v\n" +
	"\t_hardwareB\v\n" +
	"\t_firmwareB\r\n" +
	"\v_redundancyB\x0e\n" +
	"\f_last_rebootB\r\n" +
	"\v_updated_at\"\x95\x02\n" +
	"\x1cManagementControllerHardware\x12?\n" +
	"\x03cpu\x18\x01 \x01(\v2(.schema.v1alpha1.ManagementControllerCPUH\x00R\x03cpu\x88\x01\x01\x12H\n" +
	"\x06memory\x18\x02 \x01(\v2+.schema.v1alpha1.ManagementControllerMemoryH\x01R\x06memory\x88\x01\x01\x12K\n" +
	"\astorage\x18\x03 \x01(\v2,.schema.v1alpha1.ManagementControllerStorageH\x02R\astorage\x88\x01\x01B\x06\n" +
	"\x04_cpuB\t\n" +
	"\a_memoryB\n" +
	"\n" +
	"\b_storage\"\xb0\x02\n" +
	"\x17ManagementControllerCPU\x12\x19\n" +
	"\x05model\x18\x01 \x01(\tH\x00R\x05model\x88\x01\x01\x12'\n" +
	"\fmanufacturer\x18\x02 \x01(\tH\x01R\fmanufacturer\x88\x01\x01\x12\"\n" +
	"\x05cores\x18\x03 \x01(\rB\a\xbaH\x04*\x02(\x01H\x02R\x05cores\x88\x01\x01\x128\n" +
	"\x11max_frequency_mhz\x18\x04 \x01(\rB\a\xbaH\x04*\x02 \x00H\x03R\x0fmaxFrequencyMhz\x88\x01\x01\x12'\n" +
	"\farchitecture\x18\x05 \x01(\tH\x04R\farchitecture\x88\x01\x01B\b\n" +
	"\x06_modelB\x0f\n" +
	"\r_manufacturerB\b\n" +
	"\x06_coresB\x14\n" +
	"\x12_max_frequency_mhzB\x0f\n" +
	"\r_architecture\"\x80\x02\n" +
	"\x1aManagementControllerMemory\x12K\n" +
	"\vmemory_type\x18\x01 \x01(\x0e2\x1b.schema.v1alpha1.MemoryTypeB\b\xbaH\x05\x82\x01\x02\x10\x01H\x00R\n" +
	"memoryType\x88\x01\x01\x12(\n" +
	"\bcapacity\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00H\x01R\bcapacity\x88\x01\x01\x128\n" +
	"\x11max_frequency_mhz\x18\x03 \x01(\rB\a\xbaH\x04*\x02 \x00H\x02R\x0fmaxFrequencyMhz\x88\x01\x01B\x0e\n" +
	"\f_memory_typeB\v\n" +
	"\t_capacityB\x14\n" +
	"\x12_max_frequency_mhz\"\xb5\x01\n" +
	"\x1bManagementControllerStorage\x12N\n" +
	"\fstorage_type\x18\x01 \x01(\x0e2\x1c.schema.v1alpha1.StorageTypeB\b\xbaH\x05\x82\x01\x02\x10\x01H\x00R\vstorageType\x88\x01\x01\x12(\n" +
	"\bcapacity\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00H\x01R\bcapacity\x88\x01\x01B\x0f\n" +
	"\r_storage_typeB\v\n" +
	"\t_capacity\"\x85\x04\n" +
	"\x1eManagementControllerRedundancy\x12-\n" +
	"\x12redundancy_enabled\x18\x01 \x01(\bR\x11redundancyEnabled\x12L\n" +
	"\x04role\x18\x02 \x01(\x0e2).schema.v1alpha1.ManagementControllerRoleB\b\xbaH\x05\x82\x01\x02\x10\x01H\x00R\x04role\x88\x01\x01\x12C\n" +
	"\x1bdisable_redundancy_override\x18\x03 \x01(\bH\x01R\x19disableRedundancyOverride\x88\x01\x01\x12.\n" +
	"\x10failovers_paused\x18\x04 \x01(\bH\x02R\x0ffailoversPaused\x88\x01\x01\x12,\n" +
	"\x0fredundancy_mode\x18\x05 \x01(\tH\x03R\x0eredundancyMode\x88\x01\x01\x12/\n" +
	"\x13partner_controllers\x18\x06 \x03(\tR\x12partnerControllers\x12,\n" +
	"\x0ffailover_status\x18\a \x01(\tH\x04R\x0efailoverStatus\x88\x01\x01B\a\n" +
	"\x05_roleB\x1e\n" +
	"\x1c_disable_redundancy_overrideB\x13\n" +
	"\x11_failovers_pausedB\x12\n" +
	"\x10_redundancy_modeB\x12\n" +
	"\x10_failover_status\"\xbc\x03\n" +
	"\x1eManagementControllerRebootInfo\x12I\n" +
	"\x10last_reboot_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0elastRebootTime\x88\x01\x01\x12b\n" +
	"\freboot_cause\x18\x02 \x01(\x0e20.schema.v1alpha1.ManagementControllerRebootCauseB\b\xbaH\x05\x82\x01\x02\x10\x01H\x01R\vrebootCause\x88\x01\x01\x12&\n" +
	"\freboot_count\x18\x03 \x01(\rH\x02R\vrebootCount\x88\x01\x01\x126\n" +
	"\x06uptime\x18\x04 \x01(\v2\x19.google.protobuf.DurationH\x03R\x06uptime\x88\x01\x01\x12;\n" +
	"\tboot_time\x18\x05 \x01(\v2\x19.google.protobuf.DurationH\x04R\bbootTime\x88\x01\x01B\x13\n" +
	"\x11_last_reboot_timeB\x0f\n" +
	"\r_reboot_causeB\x0f\n" +
	"\r_reboot_countB\t\n" +
	"\a_uptimeB\f\n" +
	"\n" +
	"_boot_time\"\x99\x03\n" +
	"\x1fManagementControllerStateChange\x120\n" +
	"\x0fcontroller_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0econtrollerName\x12^\n" +
	"\x0fprevious_status\x18\x02 \x01(\x0e2+.schema.v1alpha1.ManagementControllerStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\x0epreviousStatus\x12\\\n" +
	"\x0ecurrent_status\x18\x03 \x01(\x0e2+.schema.v1alpha1.ManagementControllerStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\rcurrentStatus\x12K\n" +
	"\x05cause\x18\x04 \x01(\x0e2+.schema.v1alpha1.ManagementControllerActionB\b\xbaH\x05\x82\x01\x02\x10\x01R\x05cause\x129\n" +
	"\n" +
	"changed_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tchangedAt\"\x9c\x03\n" +
	"\x1eGetManagementControllerRequest\x12\x14\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x12?\n" +
	"\x04type\x18\x02 \x01(\x0e2).schema.v1alpha1.ManagementControllerTypeH\x00R\x04type\x12E\n" +
	"\x06status\x18\x03 \x01(\x0e2+.schema.v1alpha1.ManagementControllerStatusH\x00R\x06status\x127\n" +
	"\blocation\x18\x04 \x01(\v2\x19.schema.v1alpha1.LocationH\x00R\blocation\x12?\n" +
	"\x04role\x18\x05 \x01(\x0e2).schema.v1alpha1.ManagementControllerRoleH\x00R\x04role\x12>\n" +
	"\n" +
	"field_mask\x18\x06 \x01(\v2\x1a.google.protobuf.FieldMaskH\x01R\tfieldMask\x88\x01\x01B\x13\n" +
	"\n" +
	"identifier\x12\x05\xbaH\x02\b\x01B\r\n" +
	"\v_field_mask\"j\n" +
	"\x1fGetManagementControllerResponse\x12G\n" +
	"\vcontrollers\x18\x01 \x03(\v2%.schema.v1alpha1.ManagementControllerR\vcontrollers\"\x81\x03\n" +
	" ListManagementControllersRequest\x12?\n" +
	"\x04type\x18\x01 \x01(\x0e2).schema.v1alpha1.ManagementControllerTypeH\x00R\x04type\x12E\n" +
	"\x06status\x18\x02 \x01(\x0e2+.schema.v1alpha1.ManagementControllerStatusH\x00R\x06status\x127\n" +
	"\blocation\x18\x03 \x01(\v2\x19.schema.v1alpha1.LocationH\x00R\blocation\x12?\n" +
	"\x04role\x18\x04 \x01(\x0e2).schema.v1alpha1.ManagementControllerRoleH\x00R\x04role\x12>\n" +
	"\n" +
	"field_mask\x18\x05 \x01(\v2\x1a.google.protobuf.FieldMaskH\x01R\tfieldMask\x88\x01\x01B\f\n" +
	"\n" +
	"identifierB\r\n" +
	"\v_field_mask\"l\n" +
	"!ListManagementControllersResponse\x12G\n" +
	"\vcontrollers\x18\x01 \x03(\v2%.schema.v1alpha1.ManagementControllerR\vcontrollers\"\xdf\x01\n" +
	"!UpdateManagementControllerRequest\x120\n" +
	"\x0fcontroller_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0econtrollerName\x12M\n" +
	"\n" +
	"controller\x18\x02 \x01(\v2%.schema.v1alpha1.ManagementControllerB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"controller\x129\n" +
	"\n" +
	"field_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"k\n" +
	"\"UpdateManagementControllerResponse\x12E\n" +
	"\n" +
	"controller\x18\x01 \x01(\v2%.schema.v1alpha1.ManagementControllerR\n" +
	"controller\"\xa9\x01\n" +
	"&ChangeManagementControllerStateRequest\x120\n" +
	"\x0fcontroller_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0econtrollerName\x12M\n" +
	"\x06action\x18\x02 \x01(\x0e2+.schema.v1alpha1.ManagementControllerActionB\b\xbaH\x05\x82\x01\x02\x10\x01R\x06action\"\x87\x01\n" +
	"'ChangeManagementControllerStateResponse\x12\\\n" +
	"\x0ecurrent_status\x18\x01 \x01(\x0e2+.schema.v1alpha1.ManagementControllerStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\rcurrentStatus*\xa7\x02\n" +
	"\x18ManagementControllerType\x12*\n" +
	"&MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eMANAGEMENT_CONTROLLER_TYPE_BMC\x10\x01\x12(\n" +
	"$MANAGEMENT_CONTROLLER_TYPE_SATELLITE\x10\x02\x121\n" +
	"-MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER\x10\x03\x12.\n" +
	"*MANAGEMENT_CONTROLLER_TYPE_NODE_CONTROLLER\x10\x04\x12.\n" +
	"*MANAGEMENT_CONTROLLER_TYPE_RACK_CONTROLLER\x10\x05*\xc9\x02\n" +
	"\x1aManagementControllerStatus\x12,\n" +
	"(MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED\x10\x00\x12&\n" +
	"\"MANAGEMENT_CONTROLLER_STATUS_READY\x10\x01\x12*\n" +
	"&MANAGEMENT_CONTROLLER_STATUS_NOT_READY\x10\x02\x12)\n" +
	"%MANAGEMENT_CONTROLLER_STATUS_DISABLED\x10\x03\x12)\n" +
	"%MANAGEMENT_CONTROLLER_STATUS_QUIESCED\x10\x04\x12+\n" +
	"'MANAGEMENT_CONTROLLER_STATUS_DIAGNOSTIC\x10\x05\x12&\n" +
	"\"MANAGEMENT_CONTROLLER_STATUS_ERROR\x10\x06*\xbd\x04\n" +
	"\x1aManagementControllerAction\x12,\n" +
	"(MANAGEMENT_CONTROLLER_ACTION_UNSPECIFIED\x10\x00\x12'\n" +
	"#MANAGEMENT_CONTROLLER_ACTION_ENABLE\x10\x01\x12(\n" +
	"$MANAGEMENT_CONTROLLER_ACTION_DISABLE\x10\x02\x12'\n" +
	"#MANAGEMENT_CONTROLLER_ACTION_REBOOT\x10\x03\x12+\n" +
	"'MANAGEMENT_CONTROLLER_ACTION_WARM_RESET\x10\x04\x12+\n" +
	"'MANAGEMENT_CONTROLLER_ACTION_COLD_RESET\x10\x05\x12+\n" +
	"'MANAGEMENT_CONTROLLER_ACTION_HARD_RESET\x10\x06\x12.\n" +
	"*MANAGEMENT_CONTROLLER_ACTION_FACTORY_RESET\x10\a\x12+\n" +
	"'MANAGEMENT_CONTROLLER_ACTION_CLEAR_LOGS\x10\b\x12.\n" +
	"*MANAGEMENT_CONTROLLER_ACTION_BACKUP_CONFIG\x10\t\x12/\n" +
	"+MANAGEMENT_CONTROLLER_ACTION_RESTORE_CONFIG\x10\n" +
	"\x120\n" +
	",MANAGEMENT_CONTROLLER_ACTION_UPDATE_FIRMWARE\x10\v*\xd1\x02\n" +
	"\x1fManagementControllerRebootCause\x122\n" +
	".MANAGEMENT_CONTROLLER_REBOOT_CAUSE_UNSPECIFIED\x10\x00\x123\n" +
	"/MANAGEMENT_CONTROLLER_REBOOT_CAUSE_POWER_BUTTON\x10\x01\x123\n" +
	"/MANAGEMENT_CONTROLLER_REBOOT_CAUSE_RESET_BUTTON\x10\x02\x12/\n" +
	"+MANAGEMENT_CONTROLLER_REBOOT_CAUSE_WATCHDOG\x10\x03\x121\n" +
	"-MANAGEMENT_CONTROLLER_REBOOT_CAUSE_SOFT_RESET\x10\x04\x12,\n" +
	"(MANAGEMENT_CONTROLLER_REBOOT_CAUSE_OTHER\x10\x05*\xbd\x01\n" +
	"\x18ManagementControllerRole\x12*\n" +
	"&MANAGEMENT_CONTROLLER_ROLE_UNSPECIFIED\x10\x00\x12&\n" +
	"\"MANAGEMENT_CONTROLLER_ROLE_PRIMARY\x10\x01\x12%\n" +
	"!MANAGEMENT_CONTROLLER_ROLE_BACKUP\x10\x02\x12&\n" +
	"\"MANAGEMENT_CONTROLLER_ROLE_STANDBY\x10\x03*\xe1\x01\n" +
	"\n" +
	"MemoryType\x12\x1b\n" +
	"\x17MEMORY_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MEMORY_TYPE_DDR2\x10\x01\x12\x14\n" +
	"\x10MEMORY_TYPE_DDR3\x10\x02\x12\x14\n" +
	"\x10MEMORY_TYPE_DDR4\x10\x03\x12\x14\n" +
	"\x10MEMORY_TYPE_DDR5\x10\x04\x12\x16\n" +
	"\x12MEMORY_TYPE_LPDDR2\x10\x05\x12\x16\n" +
	"\x12MEMORY_TYPE_LPDDR3\x10\x06\x12\x16\n" +
	"\x12MEMORY_TYPE_LPDDR4\x10\a\x12\x16\n" +
	"\x12MEMORY_TYPE_LPDDR5\x10\b*p\n" +
	"\vStorageType\x12\x1c\n" +
	"\x18STORAGE_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11STORAGE_TYPE_EMMC\x10\x01\x12\x14\n" +
	"\x10STORAGE_TYPE_SSD\x10\x02\x12\x16\n" +
	"\x12STORAGE_TYPE_FLASH\x10\x03B\xcc\x01\n" +
	"\x13com.schema.v1alpha1B\x19ManagementcontrollerProtoP\x01Z=github.com/u-bmc/u-bmc/api/gen/schema/v1alpha1;schemav1alpha1\xa2\x02\x03SXX\xaa\x02\x0fSchema.V1alpha1\xca\x02\x0fSchema\\V1alpha1\xe2\x02\x1bSchema\\V1alpha1\\GPBMetadata\xea\x02\x10Schema::V1alpha1b\x06proto3"

var (
	file_schema_v1alpha1_managementcontroller_proto_rawDescOnce sync.Once
	file_schema_v1alpha1_managementcontroller_proto_rawDescData []byte
)

func file_schema_v1alpha1_managementcontroller_proto_rawDescGZIP() []byte {
	file_schema_v1alpha1_managementcontroller_proto_rawDescOnce.Do(func() {
		file_schema_v1alpha1_managementcontroller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_managementcontroller_proto_rawDesc), len(file_schema_v1alpha1_managementcontroller_proto_rawDesc)))
	})
	return file_schema_v1alpha1_managementcontroller_proto_rawDescData
}

var file_schema_v1alpha1_managementcontroller_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_schema_v1alpha1_managementcontroller_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_schema_v1alpha1_managementcontroller_proto_goTypes = []any{
	(ManagementControllerType)(0),                   // 0: schema.v1alpha1.ManagementControllerType
	(ManagementControllerStatus)(0),                 // 1: schema.v1alpha1.ManagementControllerStatus
	(ManagementControllerAction)(0),                 // 2: schema.v1alpha1.ManagementControllerAction
	(ManagementControllerRebootCause)(0),            // 3: schema.v1alpha1.ManagementControllerRebootCause
	(ManagementControllerRole)(0),                   // 4: schema.v1alpha1.ManagementControllerRole
	(MemoryType)(0),                                 // 5: schema.v1alpha1.MemoryType
	(StorageType)(0),                                // 6: schema.v1alpha1.StorageType
	(*ManagementController)(nil),                    // 7: schema.v1alpha1.ManagementController
	(*ManagementControllerHardware)(nil),            // 8: schema.v1alpha1.ManagementControllerHardware
	(*ManagementControllerCPU)(nil),                 // 9: schema.v1alpha1.ManagementControllerCPU
	(*ManagementControllerMemory)(nil),              // 10: schema.v1alpha1.ManagementControllerMemory
	(*ManagementControllerStorage)(nil),             // 11: schema.v1alpha1.ManagementControllerStorage
	(*ManagementControllerRedundancy)(nil),          // 12: schema.v1alpha1.ManagementControllerRedundancy
	(*ManagementControllerRebootInfo)(nil),          // 13: schema.v1alpha1.ManagementControllerRebootInfo
	(*ManagementControllerStateChange)(nil),         // 14: schema.v1alpha1.ManagementControllerStateChange
	(*GetManagementControllerRequest)(nil),          // 15: schema.v1alpha1.GetManagementControllerRequest
	(*GetManagementControllerResponse)(nil),         // 16: schema.v1alpha1.GetManagementControllerResponse
	(*ListManagementControllersRequest)(nil),        // 17: schema.v1alpha1.ListManagementControllersRequest
	(*ListManagementControllersResponse)(nil),       // 18: schema.v1alpha1.ListManagementControllersResponse
	(*UpdateManagementControllerRequest)(nil),       // 19: schema.v1alpha1.UpdateManagementControllerRequest
	(*UpdateManagementControllerResponse)(nil),      // 20: schema.v1alpha1.UpdateManagementControllerResponse
	(*ChangeManagementControllerStateRequest)(nil),  // 21: schema.v1alpha1.ChangeManagementControllerStateRequest
	(*ChangeManagementControllerStateResponse)(nil), // 22: schema.v1alpha1.ChangeManagementControllerStateResponse
	nil,                           // 23: schema.v1alpha1.ManagementController.MetadataEntry
	(*AssetInfo)(nil),             // 24: schema.v1alpha1.AssetInfo
	(*Location)(nil),              // 25: schema.v1alpha1.Location
	(*Firmware)(nil),              // 26: schema.v1alpha1.Firmware
	(*timestamppb.Timestamp)(nil), // 27: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 28: google.protobuf.Duration
	(*fieldmaskpb.FieldMask)(nil), // 29: google.protobuf.FieldMask
}
var file_schema_v1alpha1_managementcontroller_proto_depIdxs = []int32{
	24, // 0: schema.v1alpha1.ManagementController.asset:type_name -> schema.v1alpha1.AssetInfo
	0,  // 1: schema.v1alpha1.ManagementController.type:type_name -> schema.v1alpha1.ManagementControllerType
	1,  // 2: schema.v1alpha1.ManagementController.status:type_name -> schema.v1alpha1.ManagementControllerStatus
	2,  // 3: schema.v1alpha1.ManagementController.requested_action:type_name -> schema.v1alpha1.ManagementControllerAction
	25, // 4: schema.v1alpha1.ManagementController.location:type_name -> schema.v1alpha1.Location
	8,  // 5: schema.v1alpha1.ManagementController.hardware:type_name -> schema.v1alpha1.ManagementControllerHardware
	26, // 6: schema.v1alpha1.ManagementController.firmware:type_name -> schema.v1alpha1.Firmware
	12, // 7: schema.v1alpha1.ManagementController.redundancy:type_name -> schema.v1alpha1.ManagementControllerRedundancy
	13, // 8: schema.v1alpha1.ManagementController.last_reboot:type_name -> schema.v1alpha1.ManagementControllerRebootInfo
	27, // 9: schema.v1alpha1.ManagementController.updated_at:type_name -> google.protobuf.Timestamp
	23, // 10: schema.v1alpha1.ManagementController.metadata:type_name -> schema.v1alpha1.ManagementController.MetadataEntry
	9,  // 11: schema.v1alpha1.ManagementControllerHardware.cpu:type_name -> schema.v1alpha1.ManagementControllerCPU
	10, // 12: schema.v1alpha1.ManagementControllerHardware.memory:type_name -> schema.v1alpha1.ManagementControllerMemory
	11, // 13: schema.v1alpha1.ManagementControllerHardware.storage:type_name -> schema.v1alpha1.ManagementControllerStorage
	5,  // 14: schema.v1alpha1.ManagementControllerMemory.memory_type:type_name -> schema.v1alpha1.MemoryType
	6,  // 15: schema.v1alpha1.ManagementControllerStorage.storage_type:type_name -> schema.v1alpha1.StorageType
	4,  // 16: schema.v1alpha1.ManagementControllerRedundancy.role:type_name -> schema.v1alpha1.ManagementControllerRole
	27, // 17: schema.v1alpha1.ManagementControllerRebootInfo.last_reboot_time:type_name -> google.protobuf.Timestamp
	3,  // 18: schema.v1alpha1.ManagementControllerRebootInfo.reboot_cause:type_name -> schema.v1alpha1.ManagementControllerRebootCause
	28, // 19: schema.v1alpha1.ManagementControllerRebootInfo.uptime:type_name -> google.protobuf.Duration
	28, // 20: schema.v1alpha1.ManagementControllerRebootInfo.boot_time:type_name -> google.protobuf.Duration
	1,  // 21: schema.v1alpha1.ManagementControllerStateChange.previous_status:type_name -> schema.v1alpha1.ManagementControllerStatus
	1,  // 22: schema.v1alpha1.ManagementControllerStateChange.current_status:type_name -> schema.v1alpha1.ManagementControllerStatus
	2,  // 23: schema.v1alpha1.ManagementControllerStateChange.cause:type_name -> schema.v1alpha1.ManagementControllerAction
	27, // 24: schema.v1alpha1.ManagementControllerStateChange.changed_at:type_name -> google.protobuf.Timestamp
	0,  // 25: schema.v1alpha1.GetManagementControllerRequest.type:type_name -> schema.v1alpha1.ManagementControllerType
	1,  // 26: schema.v1alpha1.GetManagementControllerRequest.status:type_name -> schema.v1alpha1.ManagementControllerStatus
	25, // 27: schema.v1alpha1.GetManagementControllerRequest.location:type_name -> schema.v1alpha1.Location
	4,  // 28: schema.v1alpha1.GetManagementControllerRequest.role:type_name -> schema.v1alpha1.ManagementControllerRole
	29, // 29: schema.v1alpha1.GetManagementControllerRequest.field_mask:type_name -> google.protobuf.FieldMask
	7,  // 30: schema.v1alpha1.GetManagementControllerResponse.controllers:type_name -> schema.v1alpha1.ManagementController
	0,  // 31: schema.v1alpha1.ListManagementControllersRequest.type:type_name -> schema.v1alpha1.ManagementControllerType
	1,  // 32: schema.v1alpha1.ListManagementControllersRequest.status:type_name -> schema.v1alpha1.ManagementControllerStatus
	25, // 33: schema.v1alpha1.ListManagementControllersRequest.location:type_name -> schema.v1alpha1.Location
	4,  // 34: schema.v1alpha1.ListManagementControllersRequest.role:type_name -> schema.v1alpha1.ManagementControllerRole
	29, // 35: schema.v1alpha1.ListManagementControllersRequest.field_mask:type_name -> google.protobuf.FieldMask
	7,  // 36: schema.v1alpha1.ListManagementControllersResponse.controllers:type_name -> schema.v1alpha1.ManagementController
	7,  // 37: schema.v1alpha1.UpdateManagementControllerRequest.controller:type_name -> schema.v1alpha1.ManagementController
	29, // 38: schema.v1alpha1.UpdateManagementControllerRequest.field_mask:type_name -> google.protobuf.FieldMask
	7,  // 39: schema.v1alpha1.UpdateManagementControllerResponse.controller:type_name -> schema.v1alpha1.ManagementController
	2,  // 40: schema.v1alpha1.ChangeManagementControllerStateRequest.action:type_name -> schema.v1alpha1.ManagementControllerAction
	1,  // 41: schema.v1alpha1.ChangeManagementControllerStateResponse.current_status:type_name -> schema.v1alpha1.ManagementControllerStatus
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_schema_v1alpha1_managementcontroller_proto_init() }
func file_schema_v1alpha1_managementcontroller_proto_init() {
	if File_schema_v1alpha1_managementcontroller_proto != nil {
		return
	}
	file_schema_v1alpha1_asset_proto_init()
	file_schema_v1alpha1_firmware_proto_init()
	file_schema_v1alpha1_location_proto_init()
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[0].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[1].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[2].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[3].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[4].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[5].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[6].OneofWrappers = []any{}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[8].OneofWrappers = []any{
		(*GetManagementControllerRequest_Name)(nil),
		(*GetManagementControllerRequest_Type)(nil),
		(*GetManagementControllerRequest_Status)(nil),
		(*GetManagementControllerRequest_Location)(nil),
		(*GetManagementControllerRequest_Role)(nil),
	}
	file_schema_v1alpha1_managementcontroller_proto_msgTypes[10].OneofWrappers = []any{
		(*ListManagementControllersRequest_Type)(nil),
		(*ListManagementControllersRequest_Status)(nil),
		(*ListManagementControllersRequest_Location)(nil),
		(*ListManagementControllersRequest_Role)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_managementcontroller_proto_rawDesc), len(file_schema_v1alpha1_managementcontroller_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_v1alpha1_managementcontroller_proto_goTypes,
		DependencyIndexes: file_schema_v1alpha1_managementcontroller_proto_depIdxs,
		EnumInfos:         file_schema_v1alpha1_managementcontroller_proto_enumTypes,
		MessageInfos:      file_schema_v1alpha1_managementcontroller_proto_msgTypes,
	}.Build()
	File_schema_v1alpha1_managementcontroller_proto = out.File
	file_schema_v1alpha1_managementcontroller_proto_goTypes = nil
	file_schema_v1alpha1_managementcontroller_proto_depIdxs = nil
}
