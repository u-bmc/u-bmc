// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: schema/v1alpha1/system.proto

package protov1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HostState represents the operational state of a host
type HostState int32

const (
	HostState_HOST_STATE_UNSPECIFIED HostState = 0
	HostState_HOST_STATE_ON          HostState = 1
	HostState_HOST_STATE_OFF         HostState = 2
	HostState_HOST_STATE_ERROR       HostState = 3
	HostState_HOST_STATE_UNKNOWN     HostState = 4
	HostState_HOST_STATE_STARTING    HostState = 5
	HostState_HOST_STATE_STOPPING    HostState = 6
)

// Enum value maps for HostState.
var (
	HostState_name = map[int32]string{
		0: "HOST_STATE_UNSPECIFIED",
		1: "HOST_STATE_ON",
		2: "HOST_STATE_OFF",
		3: "HOST_STATE_ERROR",
		4: "HOST_STATE_UNKNOWN",
		5: "HOST_STATE_STARTING",
		6: "HOST_STATE_STOPPING",
	}
	HostState_value = map[string]int32{
		"HOST_STATE_UNSPECIFIED": 0,
		"HOST_STATE_ON":          1,
		"HOST_STATE_OFF":         2,
		"HOST_STATE_ERROR":       3,
		"HOST_STATE_UNKNOWN":     4,
		"HOST_STATE_STARTING":    5,
		"HOST_STATE_STOPPING":    6,
	}
)

func (x HostState) Enum() *HostState {
	p := new(HostState)
	*p = x
	return p
}

func (x HostState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostState) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[0].Descriptor()
}

func (HostState) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[0]
}

func (x HostState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostState.Descriptor instead.
func (HostState) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{0}
}

// HostHealth represents the health status of a host
type HostHealth int32

const (
	HostHealth_HOST_HEALTH_UNSPECIFIED HostHealth = 0
	HostHealth_HOST_HEALTH_OK          HostHealth = 1
	HostHealth_HOST_HEALTH_WARNING     HostHealth = 2
	HostHealth_HOST_HEALTH_CRITICAL    HostHealth = 3
	HostHealth_HOST_HEALTH_UNKNOWN     HostHealth = 4
)

// Enum value maps for HostHealth.
var (
	HostHealth_name = map[int32]string{
		0: "HOST_HEALTH_UNSPECIFIED",
		1: "HOST_HEALTH_OK",
		2: "HOST_HEALTH_WARNING",
		3: "HOST_HEALTH_CRITICAL",
		4: "HOST_HEALTH_UNKNOWN",
	}
	HostHealth_value = map[string]int32{
		"HOST_HEALTH_UNSPECIFIED": 0,
		"HOST_HEALTH_OK":          1,
		"HOST_HEALTH_WARNING":     2,
		"HOST_HEALTH_CRITICAL":    3,
		"HOST_HEALTH_UNKNOWN":     4,
	}
)

func (x HostHealth) Enum() *HostHealth {
	p := new(HostHealth)
	*p = x
	return p
}

func (x HostHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[1].Descriptor()
}

func (HostHealth) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[1]
}

func (x HostHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostHealth.Descriptor instead.
func (HostHealth) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{1}
}

// PowerState represents the power state of a component
type PowerState int32

const (
	PowerState_POWER_STATE_UNSPECIFIED PowerState = 0
	PowerState_POWER_STATE_ON          PowerState = 1
	PowerState_POWER_STATE_OFF         PowerState = 2
	PowerState_POWER_STATE_UNKNOWN     PowerState = 3
)

// Enum value maps for PowerState.
var (
	PowerState_name = map[int32]string{
		0: "POWER_STATE_UNSPECIFIED",
		1: "POWER_STATE_ON",
		2: "POWER_STATE_OFF",
		3: "POWER_STATE_UNKNOWN",
	}
	PowerState_value = map[string]int32{
		"POWER_STATE_UNSPECIFIED": 0,
		"POWER_STATE_ON":          1,
		"POWER_STATE_OFF":         2,
		"POWER_STATE_UNKNOWN":     3,
	}
)

func (x PowerState) Enum() *PowerState {
	p := new(PowerState)
	*p = x
	return p
}

func (x PowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[2].Descriptor()
}

func (PowerState) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[2]
}

func (x PowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerState.Descriptor instead.
func (PowerState) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{2}
}

// ChassisType represents the type of chassis
type ChassisType int32

const (
	ChassisType_CHASSIS_TYPE_UNSPECIFIED ChassisType = 0
	ChassisType_CHASSIS_TYPE_RACK        ChassisType = 1
	ChassisType_CHASSIS_TYPE_BLADE       ChassisType = 2
	ChassisType_CHASSIS_TYPE_STANDALONE  ChassisType = 3
	ChassisType_CHASSIS_TYPE_CARD        ChassisType = 4
)

// Enum value maps for ChassisType.
var (
	ChassisType_name = map[int32]string{
		0: "CHASSIS_TYPE_UNSPECIFIED",
		1: "CHASSIS_TYPE_RACK",
		2: "CHASSIS_TYPE_BLADE",
		3: "CHASSIS_TYPE_STANDALONE",
		4: "CHASSIS_TYPE_CARD",
	}
	ChassisType_value = map[string]int32{
		"CHASSIS_TYPE_UNSPECIFIED": 0,
		"CHASSIS_TYPE_RACK":        1,
		"CHASSIS_TYPE_BLADE":       2,
		"CHASSIS_TYPE_STANDALONE":  3,
		"CHASSIS_TYPE_CARD":        4,
	}
)

func (x ChassisType) Enum() *ChassisType {
	p := new(ChassisType)
	*p = x
	return p
}

func (x ChassisType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChassisType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[3].Descriptor()
}

func (ChassisType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[3]
}

func (x ChassisType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChassisType.Descriptor instead.
func (ChassisType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{3}
}

// ChassisStatus represents the operational status of a chassis
type ChassisStatus int32

const (
	ChassisStatus_CHASSIS_STATUS_UNSPECIFIED ChassisStatus = 0
	ChassisStatus_CHASSIS_STATUS_OK          ChassisStatus = 1
	ChassisStatus_CHASSIS_STATUS_WARNING     ChassisStatus = 2
	ChassisStatus_CHASSIS_STATUS_CRITICAL    ChassisStatus = 3
	ChassisStatus_CHASSIS_STATUS_UNKNOWN     ChassisStatus = 4
)

// Enum value maps for ChassisStatus.
var (
	ChassisStatus_name = map[int32]string{
		0: "CHASSIS_STATUS_UNSPECIFIED",
		1: "CHASSIS_STATUS_OK",
		2: "CHASSIS_STATUS_WARNING",
		3: "CHASSIS_STATUS_CRITICAL",
		4: "CHASSIS_STATUS_UNKNOWN",
	}
	ChassisStatus_value = map[string]int32{
		"CHASSIS_STATUS_UNSPECIFIED": 0,
		"CHASSIS_STATUS_OK":          1,
		"CHASSIS_STATUS_WARNING":     2,
		"CHASSIS_STATUS_CRITICAL":    3,
		"CHASSIS_STATUS_UNKNOWN":     4,
	}
)

func (x ChassisStatus) Enum() *ChassisStatus {
	p := new(ChassisStatus)
	*p = x
	return p
}

func (x ChassisStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChassisStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[4].Descriptor()
}

func (ChassisStatus) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[4]
}

func (x ChassisStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChassisStatus.Descriptor instead.
func (ChassisStatus) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{4}
}

// ManagementControllerType represents the type of management controller
type ManagementControllerType int32

const (
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED        ManagementControllerType = 0
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_SATELLITE          ManagementControllerType = 1
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_BMC                ManagementControllerType = 2
	ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER ManagementControllerType = 3
)

// Enum value maps for ManagementControllerType.
var (
	ManagementControllerType_name = map[int32]string{
		0: "MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED",
		1: "MANAGEMENT_CONTROLLER_TYPE_SATELLITE",
		2: "MANAGEMENT_CONTROLLER_TYPE_BMC",
		3: "MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER",
	}
	ManagementControllerType_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED":        0,
		"MANAGEMENT_CONTROLLER_TYPE_SATELLITE":          1,
		"MANAGEMENT_CONTROLLER_TYPE_BMC":                2,
		"MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER": 3,
	}
)

func (x ManagementControllerType) Enum() *ManagementControllerType {
	p := new(ManagementControllerType)
	*p = x
	return p
}

func (x ManagementControllerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[5].Descriptor()
}

func (ManagementControllerType) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[5]
}

func (x ManagementControllerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerType.Descriptor instead.
func (ManagementControllerType) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{5}
}

// ManagementControllerStatus represents the operational status of a management controller
type ManagementControllerStatus int32

const (
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED ManagementControllerStatus = 0
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_OK          ManagementControllerStatus = 1
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_WARNING     ManagementControllerStatus = 2
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_ERROR       ManagementControllerStatus = 3
	ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNKNOWN     ManagementControllerStatus = 4
)

// Enum value maps for ManagementControllerStatus.
var (
	ManagementControllerStatus_name = map[int32]string{
		0: "MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED",
		1: "MANAGEMENT_CONTROLLER_STATUS_OK",
		2: "MANAGEMENT_CONTROLLER_STATUS_WARNING",
		3: "MANAGEMENT_CONTROLLER_STATUS_ERROR",
		4: "MANAGEMENT_CONTROLLER_STATUS_UNKNOWN",
	}
	ManagementControllerStatus_value = map[string]int32{
		"MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED": 0,
		"MANAGEMENT_CONTROLLER_STATUS_OK":          1,
		"MANAGEMENT_CONTROLLER_STATUS_WARNING":     2,
		"MANAGEMENT_CONTROLLER_STATUS_ERROR":       3,
		"MANAGEMENT_CONTROLLER_STATUS_UNKNOWN":     4,
	}
)

func (x ManagementControllerStatus) Enum() *ManagementControllerStatus {
	p := new(ManagementControllerStatus)
	*p = x
	return p
}

func (x ManagementControllerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManagementControllerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_v1alpha1_system_proto_enumTypes[6].Descriptor()
}

func (ManagementControllerStatus) Type() protoreflect.EnumType {
	return &file_schema_v1alpha1_system_proto_enumTypes[6]
}

func (x ManagementControllerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManagementControllerStatus.Descriptor instead.
func (ManagementControllerStatus) EnumDescriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{6}
}

// HostManagement represents the overall host and chassis management configuration
type HostManagement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the host management instance
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name for the host management instance
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// List of chassis managed by this host management instance
	Chassis []*Chassis `protobuf:"bytes,3,rep,name=chassis,proto3" json:"chassis,omitempty"`
	// List of hosts managed by this host management instance
	Hosts []*Host `protobuf:"bytes,4,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Management hierarchy topology
	Topology *ManagementTopology `protobuf:"bytes,5,opt,name=topology,proto3" json:"topology,omitempty"`
	// Timestamp of the last update
	LastUpdateTimestamp int64 `protobuf:"varint,6,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *HostManagement) Reset() {
	*x = HostManagement{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostManagement) ProtoMessage() {}

func (x *HostManagement) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostManagement.ProtoReflect.Descriptor instead.
func (*HostManagement) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{0}
}

func (x *HostManagement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HostManagement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostManagement) GetChassis() []*Chassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

func (x *HostManagement) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *HostManagement) GetTopology() *ManagementTopology {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *HostManagement) GetLastUpdateTimestamp() int64 {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return 0
}

// Chassis represents a physical or virtual chassis containing hosts and other components
type Chassis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the chassis
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name for the chassis
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Chassis type (e.g., Rack, Blade, Standalone)
	Type ChassisType `protobuf:"varint,3,opt,name=type,proto3,enum=proto.v1alpha1.ChassisType" json:"type,omitempty"`
	// Current power state of the chassis
	PowerState PowerState `protobuf:"varint,4,opt,name=power_state,json=powerState,proto3,enum=proto.v1alpha1.PowerState" json:"power_state,omitempty"`
	// Physical location of the chassis
	PhysicalLocation string `protobuf:"bytes,5,opt,name=physical_location,json=physicalLocation,proto3" json:"physical_location,omitempty"`
	// List of host IDs contained in this chassis
	HostIds []string `protobuf:"bytes,6,rep,name=host_ids,json=hostIds,proto3" json:"host_ids,omitempty"`
	// List of sensor IDs associated with this chassis
	SensorIds []string `protobuf:"bytes,7,rep,name=sensor_ids,json=sensorIds,proto3" json:"sensor_ids,omitempty"`
	// List of thermal zone IDs associated with this chassis
	ThermalZoneIds []string `protobuf:"bytes,8,rep,name=thermal_zone_ids,json=thermalZoneIds,proto3" json:"thermal_zone_ids,omitempty"`
	// Status of the chassis
	Status ChassisStatus `protobuf:"varint,9,opt,name=status,proto3,enum=proto.v1alpha1.ChassisStatus" json:"status,omitempty"`
	// Timestamp of the last update
	LastUpdateTimestamp int64 `protobuf:"varint,10,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Chassis) Reset() {
	*x = Chassis{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chassis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chassis) ProtoMessage() {}

func (x *Chassis) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chassis.ProtoReflect.Descriptor instead.
func (*Chassis) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{1}
}

func (x *Chassis) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chassis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chassis) GetType() ChassisType {
	if x != nil {
		return x.Type
	}
	return ChassisType_CHASSIS_TYPE_UNSPECIFIED
}

func (x *Chassis) GetPowerState() PowerState {
	if x != nil {
		return x.PowerState
	}
	return PowerState_POWER_STATE_UNSPECIFIED
}

func (x *Chassis) GetPhysicalLocation() string {
	if x != nil {
		return x.PhysicalLocation
	}
	return ""
}

func (x *Chassis) GetHostIds() []string {
	if x != nil {
		return x.HostIds
	}
	return nil
}

func (x *Chassis) GetSensorIds() []string {
	if x != nil {
		return x.SensorIds
	}
	return nil
}

func (x *Chassis) GetThermalZoneIds() []string {
	if x != nil {
		return x.ThermalZoneIds
	}
	return nil
}

func (x *Chassis) GetStatus() ChassisStatus {
	if x != nil {
		return x.Status
	}
	return ChassisStatus_CHASSIS_STATUS_UNSPECIFIED
}

func (x *Chassis) GetLastUpdateTimestamp() int64 {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return 0
}

// Host represents a compute host within a chassis
type Host struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the host
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name for the host
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Host state (on, off, error, etc.)
	State HostState `protobuf:"varint,3,opt,name=state,proto3,enum=proto.v1alpha1.HostState" json:"state,omitempty"`
	// Requested host state (what we want the host to be)
	RequestedState HostState `protobuf:"varint,4,opt,name=requested_state,json=requestedState,proto3,enum=proto.v1alpha1.HostState" json:"requested_state,omitempty"`
	// Host health status
	Health HostHealth `protobuf:"varint,5,opt,name=health,proto3,enum=proto.v1alpha1.HostHealth" json:"health,omitempty"`
	// Chassis ID this host belongs to
	ChassisId string `protobuf:"bytes,6,opt,name=chassis_id,json=chassisId,proto3" json:"chassis_id,omitempty"`
	// Physical location of the host within the chassis
	PhysicalLocation string `protobuf:"bytes,7,opt,name=physical_location,json=physicalLocation,proto3" json:"physical_location,omitempty"`
	// BIOS/UEFI version
	BiosVersion string `protobuf:"bytes,8,opt,name=bios_version,json=biosVersion,proto3" json:"bios_version,omitempty"`
	// Host power state
	PowerState PowerState `protobuf:"varint,9,opt,name=power_state,json=powerState,proto3,enum=proto.v1alpha1.PowerState" json:"power_state,omitempty"`
	// Timestamp of the last update
	LastUpdateTimestamp int64 `protobuf:"varint,10,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{2}
}

func (x *Host) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host) GetState() HostState {
	if x != nil {
		return x.State
	}
	return HostState_HOST_STATE_UNSPECIFIED
}

func (x *Host) GetRequestedState() HostState {
	if x != nil {
		return x.RequestedState
	}
	return HostState_HOST_STATE_UNSPECIFIED
}

func (x *Host) GetHealth() HostHealth {
	if x != nil {
		return x.Health
	}
	return HostHealth_HOST_HEALTH_UNSPECIFIED
}

func (x *Host) GetChassisId() string {
	if x != nil {
		return x.ChassisId
	}
	return ""
}

func (x *Host) GetPhysicalLocation() string {
	if x != nil {
		return x.PhysicalLocation
	}
	return ""
}

func (x *Host) GetBiosVersion() string {
	if x != nil {
		return x.BiosVersion
	}
	return ""
}

func (x *Host) GetPowerState() PowerState {
	if x != nil {
		return x.PowerState
	}
	return PowerState_POWER_STATE_UNSPECIFIED
}

func (x *Host) GetLastUpdateTimestamp() int64 {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return 0
}

// ManagementTopology represents the hierarchical management structure
type ManagementTopology struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Root management controllers
	RootControllers []*ManagementController `protobuf:"bytes,1,rep,name=root_controllers,json=rootControllers,proto3" json:"root_controllers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ManagementTopology) Reset() {
	*x = ManagementTopology{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementTopology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementTopology) ProtoMessage() {}

func (x *ManagementTopology) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementTopology.ProtoReflect.Descriptor instead.
func (*ManagementTopology) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{3}
}

func (x *ManagementTopology) GetRootControllers() []*ManagementController {
	if x != nil {
		return x.RootControllers
	}
	return nil
}

// ManagementController represents a management controller in the hierarchy
type ManagementController struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the management controller
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name for the management controller
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type of management controller
	Type ManagementControllerType `protobuf:"varint,3,opt,name=type,proto3,enum=proto.v1alpha1.ManagementControllerType" json:"type,omitempty"`
	// Host IDs managed by this controller
	ManagedHostIds []string `protobuf:"bytes,4,rep,name=managed_host_ids,json=managedHostIds,proto3" json:"managed_host_ids,omitempty"`
	// Chassis IDs managed by this controller
	ManagedChassisIds []string `protobuf:"bytes,5,rep,name=managed_chassis_ids,json=managedChassisIds,proto3" json:"managed_chassis_ids,omitempty"`
	// Child management controllers (e.g., BMCs managed by an SMC)
	ChildControllers []*ManagementController `protobuf:"bytes,6,rep,name=child_controllers,json=childControllers,proto3" json:"child_controllers,omitempty"`
	// Physical location of the management controller
	PhysicalLocation string `protobuf:"bytes,7,opt,name=physical_location,json=physicalLocation,proto3" json:"physical_location,omitempty"`
	// Status of the management controller
	Status ManagementControllerStatus `protobuf:"varint,8,opt,name=status,proto3,enum=proto.v1alpha1.ManagementControllerStatus" json:"status,omitempty"`
	// Timestamp of the last update
	LastUpdateTimestamp int64 `protobuf:"varint,9,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ManagementController) Reset() {
	*x = ManagementController{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementController) ProtoMessage() {}

func (x *ManagementController) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementController.ProtoReflect.Descriptor instead.
func (*ManagementController) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{4}
}

func (x *ManagementController) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagementController) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ManagementController) GetType() ManagementControllerType {
	if x != nil {
		return x.Type
	}
	return ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED
}

func (x *ManagementController) GetManagedHostIds() []string {
	if x != nil {
		return x.ManagedHostIds
	}
	return nil
}

func (x *ManagementController) GetManagedChassisIds() []string {
	if x != nil {
		return x.ManagedChassisIds
	}
	return nil
}

func (x *ManagementController) GetChildControllers() []*ManagementController {
	if x != nil {
		return x.ChildControllers
	}
	return nil
}

func (x *ManagementController) GetPhysicalLocation() string {
	if x != nil {
		return x.PhysicalLocation
	}
	return ""
}

func (x *ManagementController) GetStatus() ManagementControllerStatus {
	if x != nil {
		return x.Status
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

func (x *ManagementController) GetLastUpdateTimestamp() int64 {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return 0
}

// Request message for getting a host management configuration by ID
type GetHostManagementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHostManagementRequest) Reset() {
	*x = GetHostManagementRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostManagementRequest) ProtoMessage() {}

func (x *GetHostManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostManagementRequest.ProtoReflect.Descriptor instead.
func (*GetHostManagementRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{5}
}

func (x *GetHostManagementRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for getting a host management configuration
type GetHostManagementResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HostManagement *HostManagement        `protobuf:"bytes,1,opt,name=host_management,json=hostManagement,proto3" json:"host_management,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetHostManagementResponse) Reset() {
	*x = GetHostManagementResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostManagementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostManagementResponse) ProtoMessage() {}

func (x *GetHostManagementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostManagementResponse.ProtoReflect.Descriptor instead.
func (*GetHostManagementResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{6}
}

func (x *GetHostManagementResponse) GetHostManagement() *HostManagement {
	if x != nil {
		return x.HostManagement
	}
	return nil
}

// Request message for listing host management configurations
type ListHostManagementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostManagementRequest) Reset() {
	*x = ListHostManagementRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostManagementRequest) ProtoMessage() {}

func (x *ListHostManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostManagementRequest.ProtoReflect.Descriptor instead.
func (*ListHostManagementRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{7}
}

// Response message for listing host management configurations
type ListHostManagementResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	HostManagements []*HostManagement      `protobuf:"bytes,1,rep,name=host_managements,json=hostManagements,proto3" json:"host_managements,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListHostManagementResponse) Reset() {
	*x = ListHostManagementResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostManagementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostManagementResponse) ProtoMessage() {}

func (x *ListHostManagementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostManagementResponse.ProtoReflect.Descriptor instead.
func (*ListHostManagementResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{8}
}

func (x *ListHostManagementResponse) GetHostManagements() []*HostManagement {
	if x != nil {
		return x.HostManagements
	}
	return nil
}

// Request message for getting a chassis by ID
type GetChassisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChassisRequest) Reset() {
	*x = GetChassisRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChassisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChassisRequest) ProtoMessage() {}

func (x *GetChassisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChassisRequest.ProtoReflect.Descriptor instead.
func (*GetChassisRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{9}
}

func (x *GetChassisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for getting a chassis
type GetChassisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chassis       *Chassis               `protobuf:"bytes,1,opt,name=chassis,proto3" json:"chassis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChassisResponse) Reset() {
	*x = GetChassisResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChassisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChassisResponse) ProtoMessage() {}

func (x *GetChassisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChassisResponse.ProtoReflect.Descriptor instead.
func (*GetChassisResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{10}
}

func (x *GetChassisResponse) GetChassis() *Chassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

// Request message for listing chassis with optional filtering
type ListChassisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ChassisType            `protobuf:"varint,1,opt,name=type,proto3,enum=proto.v1alpha1.ChassisType" json:"type,omitempty"`
	Status        ChassisStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=proto.v1alpha1.ChassisStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChassisRequest) Reset() {
	*x = ListChassisRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChassisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChassisRequest) ProtoMessage() {}

func (x *ListChassisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChassisRequest.ProtoReflect.Descriptor instead.
func (*ListChassisRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{11}
}

func (x *ListChassisRequest) GetType() ChassisType {
	if x != nil {
		return x.Type
	}
	return ChassisType_CHASSIS_TYPE_UNSPECIFIED
}

func (x *ListChassisRequest) GetStatus() ChassisStatus {
	if x != nil {
		return x.Status
	}
	return ChassisStatus_CHASSIS_STATUS_UNSPECIFIED
}

// Response message for listing chassis
type ListChassisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chassis       []*Chassis             `protobuf:"bytes,1,rep,name=chassis,proto3" json:"chassis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChassisResponse) Reset() {
	*x = ListChassisResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChassisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChassisResponse) ProtoMessage() {}

func (x *ListChassisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChassisResponse.ProtoReflect.Descriptor instead.
func (*ListChassisResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{12}
}

func (x *ListChassisResponse) GetChassis() []*Chassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

// Request message for getting a host by ID
type GetHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHostRequest) Reset() {
	*x = GetHostRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostRequest) ProtoMessage() {}

func (x *GetHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostRequest.ProtoReflect.Descriptor instead.
func (*GetHostRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{13}
}

func (x *GetHostRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for getting a host
type GetHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          *Host                  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHostResponse) Reset() {
	*x = GetHostResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostResponse) ProtoMessage() {}

func (x *GetHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostResponse.ProtoReflect.Descriptor instead.
func (*GetHostResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{14}
}

func (x *GetHostResponse) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

// Request message for listing hosts with optional filtering
type ListHostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         HostState              `protobuf:"varint,1,opt,name=state,proto3,enum=proto.v1alpha1.HostState" json:"state,omitempty"`
	Health        HostHealth             `protobuf:"varint,2,opt,name=health,proto3,enum=proto.v1alpha1.HostHealth" json:"health,omitempty"`
	ChassisId     string                 `protobuf:"bytes,3,opt,name=chassis_id,json=chassisId,proto3" json:"chassis_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostsRequest) Reset() {
	*x = ListHostsRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsRequest) ProtoMessage() {}

func (x *ListHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsRequest.ProtoReflect.Descriptor instead.
func (*ListHostsRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{15}
}

func (x *ListHostsRequest) GetState() HostState {
	if x != nil {
		return x.State
	}
	return HostState_HOST_STATE_UNSPECIFIED
}

func (x *ListHostsRequest) GetHealth() HostHealth {
	if x != nil {
		return x.Health
	}
	return HostHealth_HOST_HEALTH_UNSPECIFIED
}

func (x *ListHostsRequest) GetChassisId() string {
	if x != nil {
		return x.ChassisId
	}
	return ""
}

// Response message for listing hosts
type ListHostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*Host                `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostsResponse) Reset() {
	*x = ListHostsResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsResponse) ProtoMessage() {}

func (x *ListHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsResponse.ProtoReflect.Descriptor instead.
func (*ListHostsResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{16}
}

func (x *ListHostsResponse) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// Request message for getting a management controller by ID
type GetManagementControllerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManagementControllerRequest) Reset() {
	*x = GetManagementControllerRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManagementControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManagementControllerRequest) ProtoMessage() {}

func (x *GetManagementControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManagementControllerRequest.ProtoReflect.Descriptor instead.
func (*GetManagementControllerRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{17}
}

func (x *GetManagementControllerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for getting a management controller
type GetManagementControllerResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ManagementController *ManagementController  `protobuf:"bytes,1,opt,name=management_controller,json=managementController,proto3" json:"management_controller,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetManagementControllerResponse) Reset() {
	*x = GetManagementControllerResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManagementControllerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManagementControllerResponse) ProtoMessage() {}

func (x *GetManagementControllerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManagementControllerResponse.ProtoReflect.Descriptor instead.
func (*GetManagementControllerResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{18}
}

func (x *GetManagementControllerResponse) GetManagementController() *ManagementController {
	if x != nil {
		return x.ManagementController
	}
	return nil
}

// Request message for listing management controllers with optional filtering
type ListManagementControllersRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Type          ManagementControllerType   `protobuf:"varint,1,opt,name=type,proto3,enum=proto.v1alpha1.ManagementControllerType" json:"type,omitempty"`
	Status        ManagementControllerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=proto.v1alpha1.ManagementControllerStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagementControllersRequest) Reset() {
	*x = ListManagementControllersRequest{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagementControllersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagementControllersRequest) ProtoMessage() {}

func (x *ListManagementControllersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagementControllersRequest.ProtoReflect.Descriptor instead.
func (*ListManagementControllersRequest) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{19}
}

func (x *ListManagementControllersRequest) GetType() ManagementControllerType {
	if x != nil {
		return x.Type
	}
	return ManagementControllerType_MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED
}

func (x *ListManagementControllersRequest) GetStatus() ManagementControllerStatus {
	if x != nil {
		return x.Status
	}
	return ManagementControllerStatus_MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED
}

// Response message for listing management controllers
type ListManagementControllersResponse struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	ManagementControllers []*ManagementController `protobuf:"bytes,1,rep,name=management_controllers,json=managementControllers,proto3" json:"management_controllers,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListManagementControllersResponse) Reset() {
	*x = ListManagementControllersResponse{}
	mi := &file_schema_v1alpha1_system_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagementControllersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagementControllersResponse) ProtoMessage() {}

func (x *ListManagementControllersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_v1alpha1_system_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagementControllersResponse.ProtoReflect.Descriptor instead.
func (*ListManagementControllersResponse) Descriptor() ([]byte, []int) {
	return file_schema_v1alpha1_system_proto_rawDescGZIP(), []int{20}
}

func (x *ListManagementControllersResponse) GetManagementControllers() []*ManagementController {
	if x != nil {
		return x.ManagementControllers
	}
	return nil
}

var File_schema_v1alpha1_system_proto protoreflect.FileDescriptor

const file_schema_v1alpha1_system_proto_rawDesc = "" +
	"\n" +
	"\x1cschema/v1alpha1/system.proto\x12\x0eproto.v1alpha1\x1a\x1bbuf/validate/validate.proto\"\xad\x02\n" +
	"\x0eHostManagement\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12;\n" +
	"\achassis\x18\x03 \x03(\v2\x17.proto.v1alpha1.ChassisB\b\xbaH\x05\x92\x01\x02\b\x01R\achassis\x124\n" +
	"\x05hosts\x18\x04 \x03(\v2\x14.proto.v1alpha1.HostB\b\xbaH\x05\x92\x01\x02\b\x01R\x05hosts\x12>\n" +
	"\btopology\x18\x05 \x01(\v2\".proto.v1alpha1.ManagementTopologyR\btopology\x122\n" +
	"\x15last_update_timestamp\x18\x06 \x01(\x03R\x13lastUpdateTimestamp\"\xc7\x03\n" +
	"\aChassis\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12/\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1b.proto.v1alpha1.ChassisTypeR\x04type\x12;\n" +
	"\vpower_state\x18\x04 \x01(\x0e2\x1a.proto.v1alpha1.PowerStateR\n" +
	"powerState\x12+\n" +
	"\x11physical_location\x18\x05 \x01(\tR\x10physicalLocation\x12#\n" +
	"\bhost_ids\x18\x06 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x00R\ahostIds\x12'\n" +
	"\n" +
	"sensor_ids\x18\a \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x00R\tsensorIds\x122\n" +
	"\x10thermal_zone_ids\x18\b \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x00R\x0ethermalZoneIds\x125\n" +
	"\x06status\x18\t \x01(\x0e2\x1d.proto.v1alpha1.ChassisStatusR\x06status\x122\n" +
	"\x15last_update_timestamp\x18\n" +
	" \x01(\x03R\x13lastUpdateTimestamp\"\xce\x03\n" +
	"\x04Host\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12/\n" +
	"\x05state\x18\x03 \x01(\x0e2\x19.proto.v1alpha1.HostStateR\x05state\x12B\n" +
	"\x0frequested_state\x18\x04 \x01(\x0e2\x19.proto.v1alpha1.HostStateR\x0erequestedState\x122\n" +
	"\x06health\x18\x05 \x01(\x0e2\x1a.proto.v1alpha1.HostHealthR\x06health\x12&\n" +
	"\n" +
	"chassis_id\x18\x06 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tchassisId\x12+\n" +
	"\x11physical_location\x18\a \x01(\tR\x10physicalLocation\x12!\n" +
	"\fbios_version\x18\b \x01(\tR\vbiosVersion\x12;\n" +
	"\vpower_state\x18\t \x01(\x0e2\x1a.proto.v1alpha1.PowerStateR\n" +
	"powerState\x122\n" +
	"\x15last_update_timestamp\x18\n" +
	" \x01(\x03R\x13lastUpdateTimestamp\"o\n" +
	"\x12ManagementTopology\x12Y\n" +
	"\x10root_controllers\x18\x01 \x03(\v2$.proto.v1alpha1.ManagementControllerB\b\xbaH\x05\x92\x01\x02\b\x01R\x0frootControllers\"\xfa\x03\n" +
	"\x14ManagementController\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12<\n" +
	"\x04type\x18\x03 \x01(\x0e2(.proto.v1alpha1.ManagementControllerTypeR\x04type\x122\n" +
	"\x10managed_host_ids\x18\x04 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x00R\x0emanagedHostIds\x128\n" +
	"\x13managed_chassis_ids\x18\x05 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x00R\x11managedChassisIds\x12[\n" +
	"\x11child_controllers\x18\x06 \x03(\v2$.proto.v1alpha1.ManagementControllerB\b\xbaH\x05\x92\x01\x02\b\x00R\x10childControllers\x12+\n" +
	"\x11physical_location\x18\a \x01(\tR\x10physicalLocation\x12B\n" +
	"\x06status\x18\b \x01(\x0e2*.proto.v1alpha1.ManagementControllerStatusR\x06status\x122\n" +
	"\x15last_update_timestamp\x18\t \x01(\x03R\x13lastUpdateTimestamp\"3\n" +
	"\x18GetHostManagementRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"d\n" +
	"\x19GetHostManagementResponse\x12G\n" +
	"\x0fhost_management\x18\x01 \x01(\v2\x1e.proto.v1alpha1.HostManagementR\x0ehostManagement\"\x1b\n" +
	"\x19ListHostManagementRequest\"g\n" +
	"\x1aListHostManagementResponse\x12I\n" +
	"\x10host_managements\x18\x01 \x03(\v2\x1e.proto.v1alpha1.HostManagementR\x0fhostManagements\",\n" +
	"\x11GetChassisRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"G\n" +
	"\x12GetChassisResponse\x121\n" +
	"\achassis\x18\x01 \x01(\v2\x17.proto.v1alpha1.ChassisR\achassis\"|\n" +
	"\x12ListChassisRequest\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.proto.v1alpha1.ChassisTypeR\x04type\x125\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1d.proto.v1alpha1.ChassisStatusR\x06status\"H\n" +
	"\x13ListChassisResponse\x121\n" +
	"\achassis\x18\x01 \x03(\v2\x17.proto.v1alpha1.ChassisR\achassis\")\n" +
	"\x0eGetHostRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\";\n" +
	"\x0fGetHostResponse\x12(\n" +
	"\x04host\x18\x01 \x01(\v2\x14.proto.v1alpha1.HostR\x04host\"\x96\x01\n" +
	"\x10ListHostsRequest\x12/\n" +
	"\x05state\x18\x01 \x01(\x0e2\x19.proto.v1alpha1.HostStateR\x05state\x122\n" +
	"\x06health\x18\x02 \x01(\x0e2\x1a.proto.v1alpha1.HostHealthR\x06health\x12\x1d\n" +
	"\n" +
	"chassis_id\x18\x03 \x01(\tR\tchassisId\"?\n" +
	"\x11ListHostsResponse\x12*\n" +
	"\x05hosts\x18\x01 \x03(\v2\x14.proto.v1alpha1.HostR\x05hosts\"9\n" +
	"\x1eGetManagementControllerRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"|\n" +
	"\x1fGetManagementControllerResponse\x12Y\n" +
	"\x15management_controller\x18\x01 \x01(\v2$.proto.v1alpha1.ManagementControllerR\x14managementController\"\xa4\x01\n" +
	" ListManagementControllersRequest\x12<\n" +
	"\x04type\x18\x01 \x01(\x0e2(.proto.v1alpha1.ManagementControllerTypeR\x04type\x12B\n" +
	"\x06status\x18\x02 \x01(\x0e2*.proto.v1alpha1.ManagementControllerStatusR\x06status\"\x80\x01\n" +
	"!ListManagementControllersResponse\x12[\n" +
	"\x16management_controllers\x18\x01 \x03(\v2$.proto.v1alpha1.ManagementControllerR\x15managementControllers*\xae\x01\n" +
	"\tHostState\x12\x1a\n" +
	"\x16HOST_STATE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rHOST_STATE_ON\x10\x01\x12\x12\n" +
	"\x0eHOST_STATE_OFF\x10\x02\x12\x14\n" +
	"\x10HOST_STATE_ERROR\x10\x03\x12\x16\n" +
	"\x12HOST_STATE_UNKNOWN\x10\x04\x12\x17\n" +
	"\x13HOST_STATE_STARTING\x10\x05\x12\x17\n" +
	"\x13HOST_STATE_STOPPING\x10\x06*\x89\x01\n" +
	"\n" +
	"HostHealth\x12\x1b\n" +
	"\x17HOST_HEALTH_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eHOST_HEALTH_OK\x10\x01\x12\x17\n" +
	"\x13HOST_HEALTH_WARNING\x10\x02\x12\x18\n" +
	"\x14HOST_HEALTH_CRITICAL\x10\x03\x12\x17\n" +
	"\x13HOST_HEALTH_UNKNOWN\x10\x04*k\n" +
	"\n" +
	"PowerState\x12\x1b\n" +
	"\x17POWER_STATE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0ePOWER_STATE_ON\x10\x01\x12\x13\n" +
	"\x0fPOWER_STATE_OFF\x10\x02\x12\x17\n" +
	"\x13POWER_STATE_UNKNOWN\x10\x03*\x8e\x01\n" +
	"\vChassisType\x12\x1c\n" +
	"\x18CHASSIS_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CHASSIS_TYPE_RACK\x10\x01\x12\x16\n" +
	"\x12CHASSIS_TYPE_BLADE\x10\x02\x12\x1b\n" +
	"\x17CHASSIS_TYPE_STANDALONE\x10\x03\x12\x15\n" +
	"\x11CHASSIS_TYPE_CARD\x10\x04*\x9b\x01\n" +
	"\rChassisStatus\x12\x1e\n" +
	"\x1aCHASSIS_STATUS_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CHASSIS_STATUS_OK\x10\x01\x12\x1a\n" +
	"\x16CHASSIS_STATUS_WARNING\x10\x02\x12\x1b\n" +
	"\x17CHASSIS_STATUS_CRITICAL\x10\x03\x12\x1a\n" +
	"\x16CHASSIS_STATUS_UNKNOWN\x10\x04*\xc7\x01\n" +
	"\x18ManagementControllerType\x12*\n" +
	"&MANAGEMENT_CONTROLLER_TYPE_UNSPECIFIED\x10\x00\x12(\n" +
	"$MANAGEMENT_CONTROLLER_TYPE_SATELLITE\x10\x01\x12\"\n" +
	"\x1eMANAGEMENT_CONTROLLER_TYPE_BMC\x10\x02\x121\n" +
	"-MANAGEMENT_CONTROLLER_TYPE_CHASSIS_CONTROLLER\x10\x03*\xeb\x01\n" +
	"\x1aManagementControllerStatus\x12,\n" +
	"(MANAGEMENT_CONTROLLER_STATUS_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fMANAGEMENT_CONTROLLER_STATUS_OK\x10\x01\x12(\n" +
	"$MANAGEMENT_CONTROLLER_STATUS_WARNING\x10\x02\x12&\n" +
	"\"MANAGEMENT_CONTROLLER_STATUS_ERROR\x10\x03\x12(\n" +
	"$MANAGEMENT_CONTROLLER_STATUS_UNKNOWN\x10\x042\xf2\x01\n" +
	"\x15HostManagementService\x12j\n" +
	"\x11GetHostManagement\x12(.proto.v1alpha1.GetHostManagementRequest\x1a).proto.v1alpha1.GetHostManagementResponse\"\x00\x12m\n" +
	"\x12ListHostManagement\x12).proto.v1alpha1.ListHostManagementRequest\x1a*.proto.v1alpha1.ListHostManagementResponse\"\x002\xc1\x01\n" +
	"\x0eChassisService\x12U\n" +
	"\n" +
	"GetChassis\x12!.proto.v1alpha1.GetChassisRequest\x1a\".proto.v1alpha1.GetChassisResponse\"\x00\x12X\n" +
	"\vListChassis\x12\".proto.v1alpha1.ListChassisRequest\x1a#.proto.v1alpha1.ListChassisResponse\"\x002\xaf\x01\n" +
	"\vHostService\x12L\n" +
	"\aGetHost\x12\x1e.proto.v1alpha1.GetHostRequest\x1a\x1f.proto.v1alpha1.GetHostResponse\"\x00\x12R\n" +
	"\tListHosts\x12 .proto.v1alpha1.ListHostsRequest\x1a!.proto.v1alpha1.ListHostsResponse\"\x002\xa0\x02\n" +
	"\x1bManagementControllerService\x12|\n" +
	"\x17GetManagementController\x12..proto.v1alpha1.GetManagementControllerRequest\x1a/.proto.v1alpha1.GetManagementControllerResponse\"\x00\x12\x82\x01\n" +
	"\x19ListManagementControllers\x120.proto.v1alpha1.ListManagementControllersRequest\x1a1.proto.v1alpha1.ListManagementControllersResponse\"\x00B\xb1\x01\n" +
	"\x12com.proto.v1alpha1B\vSystemProtoP\x01Z5u-bmc.org/u-bmc/api/gen/schema/v1alpha1;protov1alpha1\xa2\x02\x03PXX\xaa\x02\x0eProto.V1alpha1\xca\x02\x0eProto\\V1alpha1\xe2\x02\x1aProto\\V1alpha1\\GPBMetadata\xea\x02\x0fProto::V1alpha1b\x06proto3"

var (
	file_schema_v1alpha1_system_proto_rawDescOnce sync.Once
	file_schema_v1alpha1_system_proto_rawDescData []byte
)

func file_schema_v1alpha1_system_proto_rawDescGZIP() []byte {
	file_schema_v1alpha1_system_proto_rawDescOnce.Do(func() {
		file_schema_v1alpha1_system_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_system_proto_rawDesc), len(file_schema_v1alpha1_system_proto_rawDesc)))
	})
	return file_schema_v1alpha1_system_proto_rawDescData
}

var file_schema_v1alpha1_system_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_schema_v1alpha1_system_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_schema_v1alpha1_system_proto_goTypes = []any{
	(HostState)(0),                            // 0: proto.v1alpha1.HostState
	(HostHealth)(0),                           // 1: proto.v1alpha1.HostHealth
	(PowerState)(0),                           // 2: proto.v1alpha1.PowerState
	(ChassisType)(0),                          // 3: proto.v1alpha1.ChassisType
	(ChassisStatus)(0),                        // 4: proto.v1alpha1.ChassisStatus
	(ManagementControllerType)(0),             // 5: proto.v1alpha1.ManagementControllerType
	(ManagementControllerStatus)(0),           // 6: proto.v1alpha1.ManagementControllerStatus
	(*HostManagement)(nil),                    // 7: proto.v1alpha1.HostManagement
	(*Chassis)(nil),                           // 8: proto.v1alpha1.Chassis
	(*Host)(nil),                              // 9: proto.v1alpha1.Host
	(*ManagementTopology)(nil),                // 10: proto.v1alpha1.ManagementTopology
	(*ManagementController)(nil),              // 11: proto.v1alpha1.ManagementController
	(*GetHostManagementRequest)(nil),          // 12: proto.v1alpha1.GetHostManagementRequest
	(*GetHostManagementResponse)(nil),         // 13: proto.v1alpha1.GetHostManagementResponse
	(*ListHostManagementRequest)(nil),         // 14: proto.v1alpha1.ListHostManagementRequest
	(*ListHostManagementResponse)(nil),        // 15: proto.v1alpha1.ListHostManagementResponse
	(*GetChassisRequest)(nil),                 // 16: proto.v1alpha1.GetChassisRequest
	(*GetChassisResponse)(nil),                // 17: proto.v1alpha1.GetChassisResponse
	(*ListChassisRequest)(nil),                // 18: proto.v1alpha1.ListChassisRequest
	(*ListChassisResponse)(nil),               // 19: proto.v1alpha1.ListChassisResponse
	(*GetHostRequest)(nil),                    // 20: proto.v1alpha1.GetHostRequest
	(*GetHostResponse)(nil),                   // 21: proto.v1alpha1.GetHostResponse
	(*ListHostsRequest)(nil),                  // 22: proto.v1alpha1.ListHostsRequest
	(*ListHostsResponse)(nil),                 // 23: proto.v1alpha1.ListHostsResponse
	(*GetManagementControllerRequest)(nil),    // 24: proto.v1alpha1.GetManagementControllerRequest
	(*GetManagementControllerResponse)(nil),   // 25: proto.v1alpha1.GetManagementControllerResponse
	(*ListManagementControllersRequest)(nil),  // 26: proto.v1alpha1.ListManagementControllersRequest
	(*ListManagementControllersResponse)(nil), // 27: proto.v1alpha1.ListManagementControllersResponse
}
var file_schema_v1alpha1_system_proto_depIdxs = []int32{
	8,  // 0: proto.v1alpha1.HostManagement.chassis:type_name -> proto.v1alpha1.Chassis
	9,  // 1: proto.v1alpha1.HostManagement.hosts:type_name -> proto.v1alpha1.Host
	10, // 2: proto.v1alpha1.HostManagement.topology:type_name -> proto.v1alpha1.ManagementTopology
	3,  // 3: proto.v1alpha1.Chassis.type:type_name -> proto.v1alpha1.ChassisType
	2,  // 4: proto.v1alpha1.Chassis.power_state:type_name -> proto.v1alpha1.PowerState
	4,  // 5: proto.v1alpha1.Chassis.status:type_name -> proto.v1alpha1.ChassisStatus
	0,  // 6: proto.v1alpha1.Host.state:type_name -> proto.v1alpha1.HostState
	0,  // 7: proto.v1alpha1.Host.requested_state:type_name -> proto.v1alpha1.HostState
	1,  // 8: proto.v1alpha1.Host.health:type_name -> proto.v1alpha1.HostHealth
	2,  // 9: proto.v1alpha1.Host.power_state:type_name -> proto.v1alpha1.PowerState
	11, // 10: proto.v1alpha1.ManagementTopology.root_controllers:type_name -> proto.v1alpha1.ManagementController
	5,  // 11: proto.v1alpha1.ManagementController.type:type_name -> proto.v1alpha1.ManagementControllerType
	11, // 12: proto.v1alpha1.ManagementController.child_controllers:type_name -> proto.v1alpha1.ManagementController
	6,  // 13: proto.v1alpha1.ManagementController.status:type_name -> proto.v1alpha1.ManagementControllerStatus
	7,  // 14: proto.v1alpha1.GetHostManagementResponse.host_management:type_name -> proto.v1alpha1.HostManagement
	7,  // 15: proto.v1alpha1.ListHostManagementResponse.host_managements:type_name -> proto.v1alpha1.HostManagement
	8,  // 16: proto.v1alpha1.GetChassisResponse.chassis:type_name -> proto.v1alpha1.Chassis
	3,  // 17: proto.v1alpha1.ListChassisRequest.type:type_name -> proto.v1alpha1.ChassisType
	4,  // 18: proto.v1alpha1.ListChassisRequest.status:type_name -> proto.v1alpha1.ChassisStatus
	8,  // 19: proto.v1alpha1.ListChassisResponse.chassis:type_name -> proto.v1alpha1.Chassis
	9,  // 20: proto.v1alpha1.GetHostResponse.host:type_name -> proto.v1alpha1.Host
	0,  // 21: proto.v1alpha1.ListHostsRequest.state:type_name -> proto.v1alpha1.HostState
	1,  // 22: proto.v1alpha1.ListHostsRequest.health:type_name -> proto.v1alpha1.HostHealth
	9,  // 23: proto.v1alpha1.ListHostsResponse.hosts:type_name -> proto.v1alpha1.Host
	11, // 24: proto.v1alpha1.GetManagementControllerResponse.management_controller:type_name -> proto.v1alpha1.ManagementController
	5,  // 25: proto.v1alpha1.ListManagementControllersRequest.type:type_name -> proto.v1alpha1.ManagementControllerType
	6,  // 26: proto.v1alpha1.ListManagementControllersRequest.status:type_name -> proto.v1alpha1.ManagementControllerStatus
	11, // 27: proto.v1alpha1.ListManagementControllersResponse.management_controllers:type_name -> proto.v1alpha1.ManagementController
	12, // 28: proto.v1alpha1.HostManagementService.GetHostManagement:input_type -> proto.v1alpha1.GetHostManagementRequest
	14, // 29: proto.v1alpha1.HostManagementService.ListHostManagement:input_type -> proto.v1alpha1.ListHostManagementRequest
	16, // 30: proto.v1alpha1.ChassisService.GetChassis:input_type -> proto.v1alpha1.GetChassisRequest
	18, // 31: proto.v1alpha1.ChassisService.ListChassis:input_type -> proto.v1alpha1.ListChassisRequest
	20, // 32: proto.v1alpha1.HostService.GetHost:input_type -> proto.v1alpha1.GetHostRequest
	22, // 33: proto.v1alpha1.HostService.ListHosts:input_type -> proto.v1alpha1.ListHostsRequest
	24, // 34: proto.v1alpha1.ManagementControllerService.GetManagementController:input_type -> proto.v1alpha1.GetManagementControllerRequest
	26, // 35: proto.v1alpha1.ManagementControllerService.ListManagementControllers:input_type -> proto.v1alpha1.ListManagementControllersRequest
	13, // 36: proto.v1alpha1.HostManagementService.GetHostManagement:output_type -> proto.v1alpha1.GetHostManagementResponse
	15, // 37: proto.v1alpha1.HostManagementService.ListHostManagement:output_type -> proto.v1alpha1.ListHostManagementResponse
	17, // 38: proto.v1alpha1.ChassisService.GetChassis:output_type -> proto.v1alpha1.GetChassisResponse
	19, // 39: proto.v1alpha1.ChassisService.ListChassis:output_type -> proto.v1alpha1.ListChassisResponse
	21, // 40: proto.v1alpha1.HostService.GetHost:output_type -> proto.v1alpha1.GetHostResponse
	23, // 41: proto.v1alpha1.HostService.ListHosts:output_type -> proto.v1alpha1.ListHostsResponse
	25, // 42: proto.v1alpha1.ManagementControllerService.GetManagementController:output_type -> proto.v1alpha1.GetManagementControllerResponse
	27, // 43: proto.v1alpha1.ManagementControllerService.ListManagementControllers:output_type -> proto.v1alpha1.ListManagementControllersResponse
	36, // [36:44] is the sub-list for method output_type
	28, // [28:36] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_schema_v1alpha1_system_proto_init() }
func file_schema_v1alpha1_system_proto_init() {
	if File_schema_v1alpha1_system_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_v1alpha1_system_proto_rawDesc), len(file_schema_v1alpha1_system_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_schema_v1alpha1_system_proto_goTypes,
		DependencyIndexes: file_schema_v1alpha1_system_proto_depIdxs,
		EnumInfos:         file_schema_v1alpha1_system_proto_enumTypes,
		MessageInfos:      file_schema_v1alpha1_system_proto_msgTypes,
	}.Build()
	File_schema_v1alpha1_system_proto = out.File
	file_schema_v1alpha1_system_proto_goTypes = nil
	file_schema_v1alpha1_system_proto_depIdxs = nil
}
